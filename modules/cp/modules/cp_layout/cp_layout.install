<?php

/**
 * Clean out widgets that don't need to be in contexts
 */
function cp_layout_update_7001(&$sandbox) {
  ini_set('memory_limit', '1024M');
  if (!isset($sandbox['progress'])) {
    $q = db_query('SELECT COUNT(DISTINCT(id)) FROM spaces_overrides WHERE object_type = \'context\'');
    $public = context_load('os_public');

    $sandbox['max'] = $q->fetchField();
    $sandbox['default'] = $public->reactions['block']['blocks'];
    $sandbox['limit'] = 30;
    $sandbox['progress'] = 0;

    if (!$sandbox['max']) {
      return t('No context overrides to process.');
    }
  }

  $q = db_query('SELECT DISTINCT(id) FROM spaces_overrides WHERE object_type = \'context\' ORDER BY id+0 ASC LIMIT 1 OFFSET :offset', array(':offset' => $sandbox['progress']));
  $id = $q->fetchField();
  ctools_include('layout', 'os');

  // if the public context has been overridden, clean it up
  $q = db_select('spaces_overrides', 'so')
       ->fields(array('object_id', 'value'))
       ->condition('id', $id)
       ->condition('object_id', 'os_public%', 'LIKE')
       ->condition('object_type', 'context')
       ->execute();
  $public = $sandbox['public'];
  if ($r = $q->fetchAssoc()) {
    $r['value'] = unserialize($r['value']);
    $public = $r['value']['blocks'];

    $save = array();
    foreach ($public as $bid => $b) {
      if ($b['region']) {
        $save[$bid] = $b;
      }
    }

    // totally unrelated, but it's junk data
    unset($save['boxes-shield_default']);

    $public = $save;
    db_update('spaces_overrides')
      ->fields(array('value' => serialize(array('blocks' => $save))))
      ->condition('id', $id)
      ->condition('object_type', 'context')
      ->condition('object_id', $r['object_id'])
      ->execute();
  }

  // Fields to check for changes
  $block_fields = array(
      'region',
      'status',
      'title',
      'weight'
  );
  set_time_limit(0);

  $q = db_select('spaces_overrides', 'so')
       ->fields('so', array('object_id', 'value'))
       ->condition('object_type', 'context')
       ->condition('id', $id)
       ->condition('object_id', 'os_public%', 'NOT LIKE')
       ->execute();

  foreach ($q as $r) {
    $save = array();
    $r['value'] = unserialize($r['value']);
    _os_layout_adjust_relative_weight($r['blocks'], $public);

    foreach ($r['value']['blocks'] as $bid => $b) {
      // if the block exists in a parent, check for overrides
      if (isset($public[$bid])) {
        $changed = false;
        foreach ($block_fields as $field) {
          // one of the block's fields has been changed.
          if (!isset($b[$field])) {
            $b[$field] = $public[$bid][$field];
          }
          elseif ($public[$bid][$field] != $b[$field]) {
            $changed = true;
          }
        }
        // if something changed, it needs to be saved in the child context
        if ($changed) {
          $save[$bid] = $b;
        }
      }
      // if the block doesn't exist in the parent, but is still in a region.
      elseif ($b['region']) {
        $save[$bid] = $b;
      }
    }

    // totally unrelated, but it's junk data
    unset($save['boxes-shield_default']);

    try {
      $u = db_update('spaces_overrides')
        ->fields(array('value' => serialize(array('blocks' => $save))))
        ->condition('id', $id)
        ->condition('object_type', 'context')
        ->condition('object_id', $r->object_id);
      $u->execute();
    }
    catch (Exception $e) {
      error_log($e);
    }
  }
  $sandbox['progress']++;

  $sandbox['#finished'] = $sandbox['progress']/$sandbox['max'];
  if ($sandbox['#finished'] >= 1) {
    return t('Cleaned up @count contexts.', array('@count' => $sandbox['progress']));
  }
}

function _cp_layout_arrange_contexts($a, $b) {
  if ($a['vsite'] - $b['vsite']) {
    return $a['vsite'] - $b['vsite'];
  }
  else {
    if ($a['context'] == 'os_public') {
      return -1;
    }
    elseif ($b['context'] == 'os_public') {
      return 1;
    }
    else {
      return 0;
    }
  }
}
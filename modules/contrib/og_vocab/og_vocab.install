<?php

/**
 * @file
 * Install file for the og_vocab module.
 */

/**
 * Implements hook_schema().
 */
function og_vocab_schema() {
  $schema['og_vocab_relation'] = array(
    'description' => t('Relate groups to vocabularies'),
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique OG vocab ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'group_type' => array(
        'description' => "The group's entity type.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'gid'               => array(
        'description'     => "The group's unique ID.",
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
      ),
      'vid' => array(
        'description' => 'Vocabulary ID',
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
      ),
    ),
    'primary key' => array('vid'),
    'indexes' => array(
      'id' => array('id'),
    ),
  );

  $schema['og_vocab'] = array(
    'description' => t('Relate Og-vocab settings to bundles'),
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique OG vocab ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'Vocabulary ID',
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
      ),
      'entity_type' => array(
        'description' => "On which entity-type the widget should appear.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'description' => "On which bundle the widget should appear.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'settings' => array(
        'description' => 'Serialized array with field instance settings.',
        'type' => 'text',
        'serialize' => TRUE,
        'size' => 'big',
      ),
    ),
    'indexes' => array(
      'id' => array('id'),
    ),
  );

  return $schema;
}

/**
 * Snapshot of the schema as it was in 7.x-1.0
 */
function og_vocab_schema_7000() {
  $schema['og_vocab_relation'] = array(
    'description' => t('Relate groups to vocabularies'),
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique OG vocab ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'group_type' => array(
        'description' => "The group's entity type.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'gid'               => array(
        'description'     => "The group's unique ID.",
        'type'            => 'int',
        'size'            => 'normal',
        'not null'        => TRUE,
      ),
      'vid' => array(
        'description' => 'Vocabulary ID',
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
      ),
    ),
    'primary key' => array('vid'),
    'indexes' => array(
      'id' => array('id'),
    ),
  );

  $schema['og_vocab'] = array(
    'description' => t('Relate Og-vocab settings to bundles'),
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Unique OG vocab ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'Vocabulary ID',
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
      ),
      'entity_type' => array(
        'description' => "On which entity-type the widget should appear.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'description' => "On which bundle the widget should appear.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'settings' => array(
        'description' => 'Serialized array with field instance settings.',
        'type' => 'text',
        'serialize' => TRUE,
        'size' => 'big',
      ),
    ),
    'indexes' => array(
      'id' => array('id'),
    ),
  );

  return $schema;
}


/**
 * Upgrade tables from Drupal 6 to 7.
 */
function og_vocab_update_7000() {
  db_rename_table('og_vocab', 'd6_og_vocab');

  foreach (og_vocab_schema_7000() as $table => $schema) {
    db_create_table($table, $schema);
  }

  variable_set('og_vocab_needs_migrate', TRUE);
  return t('Renamed OG vocabulary old. Enable "Migrate" module to continue the migration of data.');
}

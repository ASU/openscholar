<?php
/**
 * @file
 * Code for the OS Software feature.
 */

include_once 'os_software.features.inc';

/**
 * Drupal hooks
 */

/**
 * Implements hook_node_insert()
 * 
 * Enforces single recommended release per project constraint for "Software Release" 
 */
function os_software_node_insert($node) {
  if ($node->type !== 'software_release') return;
  
  $recommended_value = $node->field_software_recommended['und'][0]['value'];
  if ($recommended_value === 0) return;
  
  _os_software_new_recommended_release($node);
}

/**
 * Implements hook_node_update()
 * 
 * Enforces single recommended release per project constraint for "Software Release" 
 */
function os_software_node_update($node) {
  if ($node->type !== 'software_release') return;
  
  // Compares original and updated "Recommended" field value
  $node_original = node_load($node->nid);
  if (isset($node_original->title)) { // Only compare values if an original node exists
    $node_updated = $node;
    
    $recommended_value_original = $node_original->field_software_recommended['und'][0]['value'];
    $recommended_value_updated = $node_updated->field_software_recommended['und'][0]['value'];
    if ($recommended_value_updated === $recommended_value_original) return;
  }  
  // Only updates other Software Release nodes if this value has changed to "Recommended"
  if ($recommended_value_updated === 0) return;
  
  _os_software_new_recommended_release($node);
}

/**
 * Implements hook_node_view()
 * 
 * Sets the custom release node title 
 */
function os_software_node_view($node, $view_mode, $langcode) {
  if ($node->type !== 'software_release') return;

  // Note: the Software Release node type has no stored title.
  
  // Prepares and sets the page body title (<h1>) and head title (<title>)
  
  $default_prefix = 'Project Release';
  $sitename = trim(drupal_get_title());
  
  $project_node = node_load($node->field_software_project['und'][0]['target_id']);
  $project_title = (!empty($project_node->title)) ? $project_node->title : $default_prefix;
  
  $version = trim($node->field_software_version['und'][0]['value']);
  
  // Sets the head title
  $head_title_parts = array(
    $project_title,
    $version,
    $sitename,
  );
  $head_title = implode(' ', $head_title_parts);
  drupal_set_title($head_title);
}

/**
 * Implements hook_node_delete()
 */
function os_software_node_delete($node) {
  if ($node->type !== 'software_project') return;
  // @TODO Delete all referencing software release nodes
}

/**
 * Implements hook_theme()
 */
function os_software_theme() {
  return array();
  // @TODO Define custom template for Software Release node view.
}

/**
 * OpenScholar hooks
 */

/**
 * Implements hook_os_widget()
 * 
 * Exposes blocks as OpenScholar widgets.
 */
function os_software_os_widget() {
  $items = array();
  
  $items['views-os_software_releases-block'] = array(
    'module' => 'views', 
    'delta' => 'os_software_releases-block', 
    'region' => 'sidebar_second', 
    'weight' => '-10',
    'info' => 'All Recent Releases',
  );
  
  return $items;
}

/**
 * Implements hook_scholar_admin_link() on behalf of the node module.
 * @FIXME this is not how it's done in Drupal 7
function scholar_software_vsite_admin_link($type, $object) {
  $links = array();
  if ($type == 'node' && $object->type == 'scholar_software_project' && empty($object->field_scholar_software_method[0]['value'])) {

    $item = menu_get_item('node/add/scholar-software-release');
    if ($item && $item['access']) {
      $links['scholar-software-add-release'] = array(
        'title' => t('Add new Release'),
        'href' => 'node/add/scholar-software-release',
        'query' => array('software_name' => $object->field_scholar_software_name[0]['value']),
      );
    }
  }
  return $links;
} */

/**
 * Custom functions
 */

/**
 * Finds other recommended releases, marks them "Not recommended"
 */
function _os_software_new_recommended_release($node) {
  // Uses [:os_software_relesases:] view to filter only valid releases for this project
  $view = views_get_view('os_software_releases');
  $view->set_arguments(array($node->field_software_project['und'][0]['target_id']));
  $view->execute('block_1');
  foreach ($view->result as $data) {
    if (!isset($node->nid) || $data->nid !== $node->nid) {
      $release_node = node_load($data->nid);
      $release_node->field_software_recommended['und'][0]['value'] = 0;
      $release_node->path['pathauto'] = ''; // Prevents pathauto from aliasing on save
      node_save($release_node);
    }
  }
}
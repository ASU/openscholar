<?php
// $Id$


/**
 * @file
 * Code for the OS Bio/CV feature.
 *
 * @see ./profiles/openscholar/modules/os/modules/os_boxes/plugins/os_boxes_bio/os_boxes_bio.inc
 */

include_once 'os_biocv.features.inc';

/**
 * Drupal hooks
 */

/**
 * Implements hook_menu_alter().
 *
 * Prevents new bio nodes from being created if a bio node already exists here.
 */
function os_biocv_menu_alter(&$items) {
  $node = _os_biocv_get_bio_node();
  $access = ($node === FALSE);

  if (!isset($items['node/add/bio'])) {
    return;
  }

  $items['node/add/bio']['access callback'] = $access;
}

/**
 * OpenScholar hooks
 */

/**
 * Implements hook_os_widget().
 *
 * Exposes blocks as OpenScholar widgets.
 */
function os_biocv_os_widget() {
  $items = array();

  // Displays user's Bio node if available, otherwise prompts user.
  $items['os_biocv-bio'] = array(
      'module' => 'boxes',
      'delta' => 'boxes-bio',
      'weight' => '-10',
      'info' => 'Bio Teaser',
  );

  return $items;
}

/**
 * Implements hook_vsite_og_node_type_info().
 */
function os_biocv_vsite_og_node_type_info() {
  return array(
    'bio' => 'group content',
    'cv' => 'group content',
  );
}

/**
 * Custom functions
 */

/**
 * Finds the Bio node of the user with the lowest NID value.
 *
 * @return bool|object
 *   A Drupal node object in the current space, if found; otherwise FALSE.
 */
function _os_biocv_get_bio_node($type = 'bio') {

  // Note that this OpenscholarNodeFieldQuery will filter the current space if
  // vsite module is enabled. Otherwise it leaves out that condition and will
  // tell us whether any published bio nodes exist on this installation at all.
  // In case there are multiple bio nodes, defaults to order by nid ASC.
  include_once drupal_get_path('module', 'os') . '/includes/node.inc';

  $query = new OpenscholarNodeFieldQuery($type);
  $query
    ->propertyOrderBy('nid');

  $result = $query->execute();

  if (!isset($result['node']) || !sizeof($result['node'])) {
    return FALSE;
  }

  $item = array_shift($result['node']);
  $node = node_load($item->nid);
  return $node;
}
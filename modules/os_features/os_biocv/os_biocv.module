<?php
// $Id$


/**
 * @file
 * Code for the OS Bio/CV feature.
 *
 * @see ./profiles/openscholar/modules/os/modules/os_boxes/plugins/os_boxes_bio/os_boxes_bio.inc
 */

include_once 'os_biocv.features.inc';

/**
 * Drupal hooks
 */

/**
 * OpenScholar hooks
 */

/**
 * Implements hook_os_widget().
 *
 * Exposes blocks as OpenScholar widgets.
 */
function os_biocv_os_widget() {
  $items = array();

  // Displays user's Bio node if available, otherwise prompts user.
  $items['os_biocv-bio'] = array(
      'module' => 'os_biocv',
      'delta' => 'os_biocv_bio',
      'region' => 'content_top',
      'weight' => '-10',
      'info' => 'Bio Teaser',
  );

  return $items;
}

/**
 * Implements hook_vsite_og_node_type_info().
 */
function os_biocv_vsite_og_node_type_info() {
  return array(
    'bio' => 'group content',
    'cv' => 'group content',
  );
}

/**
 * Custom functions
 */

/**
 * Returns block content for $blocks['os_biocv_bio']
 */
function _os_biocv_bio_block_contents() {
  $type = 'bio';

  $node = _os_biocv_get_bio_node($type);
  // Renders the Bio node if it exists.
  if ($node !== FALSE) {
    return render(node_view($node, 'teaser'));
  }

  // Otherwise, displays a prompt message to admin users.
  if (user_access('create ' . $type . ' content')) {
    return theme('os_biocv_bio_block_empty_text');
  }

  // Otherwise, displays nothing to non-admin users.
  return NULL;
}

/**
 * Finds the Bio node of the user with the lowest NID value.
 *
 * @return bool|object
 *   A Drupal node object in the current space, if found; otherwise FALSE.
 */
function _os_biocv_get_bio_node($type = 'bio') {

  // Note that this EntityFieldQuery will filter for the current space iff
  // vsite module is enabled. Otherwise it leaves out that condition and will
  // tell us whether any published bio nodes exist on this installation at all.
  // In case there are multiple bio nodes, defaults to order by nid ASC.
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type)
    ->propertyCondition('status', 1)
    ->propertyOrderBy('nid');

  if (module_exists('vsite') && $space = spaces_get_space()) {
    $query->fieldCondition(OG_AUDIENCE_FIELD, 'target_id', $space->id);
  }

  $result = $query->execute();

  if (!isset($result['node']) || !sizeof($result['node'])) {
    return FALSE;
  }

  $item = array_shift($result['node']);
  $node = node_load($item->nid);
  return $node;
}
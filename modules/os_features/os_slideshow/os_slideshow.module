<?php
/**
 * @file
 * Code for the OS Slideshow feature.
 */

include_once 'os_slideshow.features.inc';

/**
 * Implements hook_boxes_plugins().
 */
function os_slideshow_boxes_plugins(){
  $info = array();
  $path = drupal_get_path('module', 'os_slideshow') . '/plugins';

  $info['os_slideshow_box'] = array(
    'title' => 'New Slideshow',
    'description' => 'Slideshow',
    'tags' => array('Media'),
    'handler' => array(
      'class' => 'os_slideshow_box',
      'file' => 'os_slideshow_box.inc',
      'path' => $path,
      'parent' => 'os_boxes_default'
    )
  );

  return $info;
}

/**
 * Implements hook_form_FORMID_alter
 *
 * Attaches widget delta to form so it'll be available during node save
 */
function os_slideshow_form_slideshow_image_node_form_alter(&$form, &$state, $form_id) {
  $widget = (isset($_GET['widget'])) ? $_GET['widget'] : FALSE;
  if ($widget) {
    $form['widget'] = array('#type' => 'hidden', '#value' => $widget);
  } 
}

/**
 * Implements hook_node_insert
 * 
 * When a slideshow_image is created, add its nid to the widget it was created for
 */
function os_slideshow_node_insert($node) {
  if (($node->type == 'slideshow_image') && isset($node->widget)) {
    if (module_exists('spaces') && $space = spaces_get_space()) { 
      if ($box = $space->controllers->boxes->get($node->widget)) {
        $box->options['nodes'][] = (int)$node->nid;
        $space->controllers->boxes->set($box->delta, $box);
      }
    } else {   
      if ($box = boxes_box_load($node->widget)) {
        $box->options['nodes'][] = (int)$node->nid;
        $box->save();
      }
    }
  }
}

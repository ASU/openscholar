<?php
// $Id$

/**
 * @file
 * Code for OpenScholar: Google Analytics module.
 */

/**
 * Implements hook_form_FORM_ID_alter() for os_settings_form.
 *
 * Allows admins to set the global Google Analytics ID and sitewide options.
 */
function os_ga_form_os_settings_form_alter(&$form, &$form_state, $form_id) {
  $form['os_ga'] = array(
    '#type' => 'fieldset',
    '#title' => t('Google Analytics'),
    '#weight' => 0,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['os_ga']['os_ga_global_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Global Google Analytics ID'),
  	'#weight' => 0,
    '#size' => 20,
    '#maxlength' => 255,
    '#default_value' => variable_get('os_ga_global_id', ''),
    '#description' => t("Enables sitewide tracking for a single <a href=\"http://www.google.com/analytics/\">Google Analytics</a> account.<br/>Expected format: <strong>UA-XXXXXXX-XX</strong>"),
    '#element_validate' => array('os_ga_analytics_id_validate'),
  );
  $form['os_ga']['os_ga_global_link_tracking'] = array(
    '#type' => 'checkbox',
    '#title' => t('Link tracking'),
    '#weight' => 1,
    '#default_value' => variable_get('os_ga_global_link_tracking', 0),
    '#description' => t("Turns on Google Analytics tracking for outgoing links, mailto links, and file download links for all sites."),
  );
  $form['os_ga']['os_ga_404'] = array(
    '#type' => 'checkbox',
    '#weight' => 2,
    '#title' => t('404 Not Found path rewriting'),
    '#default_value' => variable_get('os_ga_404', 0),
    '#description' => t("Reports 404 not found paths to Google Analytics accounts with a prepended '/error-404' for easy identification."),
  );
  $form['os_ga']['os_ga_navigation'] = array(
    '#type' => 'checkbox',
    '#weight' => 3,
    '#title' => t('Navigation click tracking'),
    '#default_value' => variable_get('os_ga_navigation', 0),
    '#description' => t("Turns on tagged click tracking for main menus for Google Analytics accounts for all sites. "),
  );
  $form['os_ga']['os_ga_addthis'] = array(
    '#type' => 'checkbox',
    '#weight' => 4,
    '#title' => t('AddThis social tracking'),
    '#default_value' => variable_get('os_ga_addthis', 0),
    '#description' => t("Turns on AddThis social tracking integration with Google Analytics for all sites. Currently only available for one Google Analytics account per pageload."),
  );
  $form['os_ga']['os_ga_addthis_default'] = array(
    '#type' => 'radios',
    '#title' => t('AddThis default account'),
    '#weight' => 5,
    '#default_value' => variable_get('os_ga_addthis_default', 'vsite'),
    '#options' => array(
      'vsite' => t('Individual site account'),
      'global' => t('Global account'),
    ),
    '#description' => t("AddThis social tracking is only available to one Google Analytics account per pageload. In cases where one account must be chosen for AddThis social tracking, the default account will be chosen."),
    '#dependency' => array('edit-os-ga-addthis' => array('1')),
    '#attributes' => array('class' => array('form-item-child')),
  );
}

/**
 * Implements hook_cp_settings().
 */
function os_ga_cp_settings() {
  $settings = array();

  $settings['os_ga_google_analytics_id'] = array(
    'form' => array(
      '#type' => 'textfield',
      '#title' => t('Enter your Google Analytics ID'),
      '#size' => 20,
      '#maxlength' => 255,
      '#default_value' => variable_get('os_ga_google_analytics_id', ''),
      '#description' => t("Entering your ID this will send page and visitor data to your Google Analytics account. Go to the <a href=\"http://www.google.com/analytics/\">Google Analytics site</a> to set one up. Your ID will be in the format UA-XXXXXXX-XX."),
      '#element_validate' => array('os_ga_analytics_id_validate'),
    ),
    'group' => array(
      '#id' => 'ga',
      '#title' => t('Google Analytics'),
      '#weight' => -100,
    ),
  );

  return $settings;
}

/**
 * Impelements hook_init().
 */
function os_ga_init() {
  // Does nothing if there are no accounts available.
  $accounts = _os_ga_get_accounts();
  if (empty($accounts)) {
    return;
  }

  // Generates script and inserts into page header.
  $script = _os_ga_build_script($accounts);
  drupal_add_js($script, 'inline', variable_get('vsite_ga_scope', 'header'));

  // Additionally adds link tracking if enabled globally.
  if (variable_get('os_ga_global_link_tracking', 0)) {
    drupal_add_js('os_ga.js', 'file');
  }
}

/**
 * Returns Google Analytics account variables.
 */
function _os_ga_get_accounts() {
  $accounts = array();

  $global_account = variable_get('os_ga_global_id', '');
  $addthis_default = variable_get('os_ga_addthis_default', 'vsite');

  // Gets the global GA account, if available.
  if (strlen($global_account)) {
    $accounts[$global_account] = array();
    $accounts[$global_account]['addthis_default'] = (bool) ($addthis_default == 'global');
  }

  // Gets the vsite GA account, if available.
  if (module_exists('vsite') && $vsite = vsite_get_vsite() && $vsite_account = variable_get('os_ga_google_analytics_id', '')) {
    $accounts[$vsite_account] = array();
    $accounts[$vsite_account]['addthis_default'] = (bool) ($addthis_default == 'vsite');
  }

  return $accounts;
}

/**
 * Element validate callback; checks a string matches format "UA-XXXXX-XX".
 */
function os_ga_analytics_id_validate($element, $form_state) {
  $pattern = '/^UA-[0-9]+-[0-9]{1,2}$/';
  if ($element['#value'] && !preg_match($pattern, trim($element['#value']))) {
    form_error($element, t('This field does not follow the correct format.'));
  }
}

/**
 * Implements hook_os_widget().
 */
function os_ga_os_widget() {
  $widgets = array();

  $widgets['os_ga-google_translate'] = array(
    'module' => 'os_ga',
    'delta' => 'google_translate',
    'title' => '',
    'info' => t('Google Translate'),
  );

  return $widgets;
}

/**
 * Implements hook_block_info().
 */
function os_ga_block_info() {
  $blocks = array();

  $blocks['google_translate'] = array(
    'info' => t('Google Translate'),
  );

  return $blocks;
}

/**
 * Implement hook_block_view().
 */
function os_ga_block_view($delta) {
  $block = array();

  switch ($delta) {
    case 'google_translate':
      $block['content'] = os_ga_google_translate();
      break;
  }

  return $block;
}

/**
 * Renders a Google translate HTML and add needed JS.
 */
function os_ga_google_translate() {
  global $language;
  $script = '';

  $script .= "function googleTranslateElementInit() {";
  $script .= "new google.translate.TranslateElement({pageLanguage: '$language->language', layout: ";
  $script .= "google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');";
  $script .= "}";

  drupal_add_js($script, array('type' => 'inline'));
  drupal_add_js('http://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit', array('type' => 'external'));

  return '<div id="google_translate_element"></div>';
}

/**
 * Builds Google Analytics tracking javascript code to insert onto pages.
 *
 * @param array $accounts
 *   An array containing account info for each GA account.
 *
 * @return string $output
 *   The complete script to insert onto the page.
 */
function _os_ga_build_script($accounts = array()) {
  // Returns empty string if no accounts.
  if (empty($accounts)) {
    return '';
  }

  // Starts the script.
  $output = 'var _gaq = _gaq || [];';
  // Adds each GA account to the script.
  foreach ($accounts as $account => $info) {
    $output .= '_gaq.push(["_setAccount", ' . drupal_json_encode($account) . ']);_gaq.push(["_trackPageview"]);';
    if ($info['addthis_default'] === TRUE) {
      $addthis_account = $account;
    }
  }
  // Sets the AddThis account to the only account, if it wasn't default already.
  if (!$addthis_account && sizeof($accounts) == 1) {
    $addthis_account = array_shift($accounts);
  }

  // Finishes up the script.
  $output .= '(function() {var ga = document.createElement("script");ga.type = "text/javascript";ga.async = true;ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";var s = document.getElementsByTagName("script")[0];s.parentNode.insertBefore(ga, s);})();';

  // Integrates with AddThis.
  // Currently AddThis only supports one property per pageload.
  // $addthis_account will be the account (string) of:
  //  - the only enabled account (if only global or only vsite account exists)
  //    OR
  //  - the account specified default (if both global and vsite accounts exist)
  // Otherwise, $addthis_account will be NULL and this js won't be added.
  if (variable_get('os_ga_addthis', 0) && $addthis_account) {
    $output .= "var addthis_config = {data_ga_social: true, data_ga_property: " . drupal_json_encode($addthis_account) . "};";
  }

  return $output;
}
<?php

include_once ('os_search_solr.features.inc');

/**
 * Implements hook_block_info().
 */
function os_search_solr_block_info(){
  $blocks = array();

  $blocks['site-search'] = array(
      'info' => t('Site Search'),
      'weight' => '10',
      //'cache' => DRUPAL_CACHE_CUSTOM
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Generate a block with a promotional link to openscholar.harvard.edu and
 * all os menu blocks.
 */
function os_search_solr_block_view($delta = ''){
  $block = array();
  switch ($delta) {
    case 'site-search' :
      $block['subject'] = NULL;
      $block['content'] = drupal_get_form('search_block_form');
      return $block;

    default:
    break;
  }
}

/**
 * hook os_widget
 *
 * Exposes blocks as OpenScholar widgets.
 */
function os_search_solr_os_widget(){
  $items = array();

  // Displays site search box
  $items['os_search_solr-site-search'] = array(
      'module' => 'os_search_solr',
      'delta' => 'site-search',
      'weight' => '-10',
      'info' => 'Site Search'
  );

  return $items;
}

/**
 * Alter the query after it's prepared and cached.
 *
 * @param object $query
 *   An object implementing DrupalSolrQueryInterface. No need for &.
 */
function os_search_solr_apachesolr_query_alter($query) {
  if(module_exists('vsite') && ($vsite = spaces_get_space())){
    // I only want to see items in this site
    $query->addFilter("sm_og_group_ref", $vsite->group_type.":".$vsite->id);
  }
}

/**
 * Function to return the searcher name for facetapi.
 */
function os_search_solr_get_searcher_name() {
  $searcher_name = '';
  if(module_exists('facetapi')) {
	// Get the searcher info.
    $searcher_array = facetapi_get_searcher_info();
    foreach($searcher_array as $search) {
      if(array_key_exists('name', $search)) {
        $searcher_name = $search['name'];
      }
    }
  }

  return $searcher_name;
}

/**
 * Implements hook_block_view_alter().
 * Alter the titles of the Solr blocks.
 */
function os_search_solr_block_view_alter(&$data,$block) {

  if (module_exists('facetapi')) {
    // Gets delta map
    $map = facetapi_get_delta_map();

    if(isset($map) && is_array($map)) {
      $searcher_name = os_search_solr_get_searcher_name();

      // Alter the title for Filter by Post Type.
      $string_bundle = facetapi_build_delta($searcher_name, 'block', 'bundle');
      $delta_bundle = array_search($string_bundle, $map);

      if($block->module == 'facetapi' && $block->delta == $delta_bundle) {
      	$data['subject'] = 'Filter by Post Type';
      }

      // Alter the title for Filter by Site.
      $string_og = facetapi_build_delta($searcher_name, 'block', 'sm_og_group_ref');
      $delta_og = array_search($string_og, $map);

      if($block->module == 'facetapi' && $block->delta == $delta_og) {
      	$data['subject'] = 'Filter By Site';
      }

    }
  }
}

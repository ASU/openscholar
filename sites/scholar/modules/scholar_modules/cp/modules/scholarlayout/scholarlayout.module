<?php

/**
 * hook theme
 */
function scholarlayout_theme(){
  return array(
    'scholarlayout_layout' => array(
    	'template' => 'scholarlayout-layout', 
  		//'arguments' => array('scholarlayout_widgets' => NULL),
    	'path' => drupal_get_path('module', 'scholarlayout'). '/theme'
    ),
  
    'scholarlayout_layout_widgets' => array(
    	'template' => 'scholarlayout-layout-widgets', 
  		'arguments' => array('wgts' => NULL, 'wgts_id' => NULL, 'wgts_class' => NULL),
    	'path' => drupal_get_path('module', 'scholarlayout'). '/theme'
    ),
    
  );
}

/**
 * hook menu
 */
function scholarlayout_menu(){
  $items = array();
  
  $items["cp/settings/layout"] = array(
    'title' => 'Layout',
    'page callback' => 'scholarlayout_layout',
    'access arguments' => array('configure spaces features'),
    'menu_name' => 'cp', 
  );
  
  return $items;
}

/**
 * main entry point for "cp/settings/layout"
 */
function scholarlayout_layout(){
  jquery_ui_add(array('ui.draggable', 'ui.droppable', 'ui.sortable'));

  drupal_add_js(drupal_get_path('module', 'scholarlayout') . '/theme/scholarlayout.js');
  drupal_add_css(drupal_get_path('module', 'scholarlayout') . '/theme/scholarlayout.css');
  $space = scholar_get_scholar();
  
  // top
  $cts = context_contexts();  // TODO dont know why we need all context; couldnt load just the scholarwidget context
  $wc = $cts['cp-section-layout'];
  
  $wgts = $wc -> block;
  $wgts_id = 'scholarlayout-top-widgets';
  $wgts_class = 'scholarlayout-widgets-list';
  
  $top = theme('scholarlayout_layout_widgets', $wgts, $wgts_id, $wgts_class);
  
  // layout
  $layout = theme('scholarlayout_layout');
  return $top . $layout;
}



/**
 * preprocessor function for scholarlayout-layout.tpl.php
 * Introduces a variable for each region in the admin_base theme
 * e.g. $scholarlayout_header_left will contain a themed list of 
 * block names in the header_left
 */
function scholarlayout_preprocess_scholarlayout_layout(&$vars){

  
  $cts = context_contexts();  // TODO dont know why we need all context; couldnt load just the scholarwidget context
  $wc = $cts['cp-section-layout'];

  $scholarlayout_widgets = array();
  
  $regions = array_keys(system_region_list('scholar_base'));

  foreach($regions as $region){
    $scholarlayout_widgets[$region] = array();
  }
  
  foreach($wc -> block as $widget){
    $scholarlayout_widgets[$widget['region']][] = $widget;
    //$scholarlayout_top_widgets[] = '<div>' .$widget['label'] . '</div>';
  }

  foreach($regions as $region){
    $r = str_replace('_','-', $region);
    $wgts_id = 'scholarlayout-' . $r;
    $vars['scholarlayout_' . $region] = theme('scholarlayout_layout_widgets',$scholarlayout_widgets[$region], $wgts_id, 'scholarlayout-widgets-list');
  }
  
  $vars['scholarlayout_form'] = drupal_get_form('scholarlayout_layoutsettings');
}


function scholarlayout_layoutsettings(){
	
	$a = func_get_args();
	$regions = array_keys(system_region_list('scholar_base'));
  $form = array();
  $space = scholar_get_scholar();

  foreach($regions as $region){
    $r = str_replace('_','-', $region);
    $wgts_id = 'scholarlayout-' . $r;
    $form[$wgts_id] = array('#type' => 'hidden' );
    if(isset($space->settings['layout']) && array_key_exists($wgts_id,$space->settings['layout'])){
    	$form[$wgts_id]['#efault'] = $space->settings['layout'][$wgts_id];
    }
  }
  
  // add the submit button (not in the form definition yet)
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save settings'),
  );
  
  return $form;
	
}

function scholarlayout_layoutsettings_validate($form, &$form_state){

}

function scholarlayout_layoutsettings_submit($form, &$form_state){
  // get the space and the settings we want to save
  $space = scholar_get_scholar();
  $setting = array();
  
  if (!empty($form_state['values'])) {
    foreach ($form_state['values'] as $field => $value) {
    	if(!strlen($value) || 'scholarlayout' != substr($field,0,13)) continue;
      $a_values = split("\|",$value);
      $setting[$field] = $a_values;
    }
  }
  $space->settings['layout'] = $setting;
  spaces_save($space);
}
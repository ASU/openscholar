<?php

//set the date format
define(DATE_FORMAT, 'm/d/Y');

/**
 * Implemenation of hook_init()
 */
function scholarforms_init(){
  drupal_add_js(drupal_get_path('module', 'scholarforms') .'/js/scholarforms.js');
}

/**
 * Implementation of hook_form_alter
 */
function scholarforms_form_alter(&$form, $form_state, $form_id) {   //dpm($form);

//$form['test'] = 'scholarforms_form_validate';
  $types = array_keys(node_get_types());

  //if editing an exisitng node, load the node
  $node = isset($form['#node']->nid) ? node_load(array('nid' => $form['#node']->nid)) : NULL;

  //create options for publishing status radios
  $options = array(
  'publish' => t('Publish now'),
  'save' => t('Save as draft'),
  'saveondate' => t('Publish on another date'),
  );

  foreach($types as $type){
    if ($type . '_node_form' == $form_id) {

      //unset original publish status checkbox
      unset($form['options']['status']);
       unset($form['revision_information']);

      $form['options']['pubstatus'] = array(
      '#type' => 'radios',
      '#options' => $options,
       '#default_value'  => scholarforms_get_pubstatus($node),
      '#weight' => 3,
      );
      $form['options']['promote'] = array(
      '#type' => 'checkbox',
      '#title' => t(scholarforms_get_frontpage_text($node)),
      '#description' => t('This keeps the post on top of any list postings'),
      '#default_value' => $node->promote,
      '#weight' => 1,
      );
      $form['options']['sticky'] = array(
      '#type' => 'checkbox',
      '#title' => t('Make Prominant'),
      '#description' => t('This keeps the post on top of any list postings'),
      '#default_value' => $node->sticky,
      '#weight' => 2,
      );
      
      
          //need to hide this field with jquery unless radio for pubdate is selected
      $form['options']['pubdate'] = array(
      
      '#title' => t('Publish on'),
      '#type' => 'date_popup',
      '#date_format' => DATE_FORMAT,
      '#default_value' => '', //$node->pubdate ? format_date($node->pubdate, 'custom', $date_format) : '',
      '#weight' => 4,
      '#prefix' => $node->pubstatus == 'saveondate' ? '' : '<div id="pubdate" class="hide-pubdate">',
      '#suffix' => $node->pubstatus == 'saveondate' ? '' : '</div>',
       );
 
     
     // $form['attachments']['#title'] = t('Images & Files');
      $form['#validate'][] = 'scholarforms_form_validate';
      
      
      //adding additional submit function to call "publish options" radio button callbacks
      $form['#submit'][] = 'scholarforms_form_submit';
     // dpm($form);
    }
  }
}

/**
 * Returns text for title and description for Make Prominant checkbox
 * depending on current status
 */
function scholarforms_get_frontpage_text($node = NULL){
  if($node){
     $title = ($node->promote == '1') ? 'Keep on Front Page' : 'Promote to front page';
  }
  else{
    $title = 'Promote to front page';
  }
  return $title;
}

/**
 * Validation logic here mainly used to convert $form_state values 
 * retrieved form 'pubstatus' option for core Drupal node form handler
 *
 * @param unknown_type $form
 * @param unknown_type $form_state
 */
function scholarforms_form_validate($form, &$form_state){
  switch($form_state['values']['pubstatus']){

    case 'publish':
      //publish node
      $form_state['values']['status'] = 1;
      break;

    case 'save':
      //unpublish node
      $form_state['values']['status'] = 0;
      //need to save a revision
      $form_state['values']['revision'] = 1;
      

    case 'saveondate':
      //need to call a function here to save date information - perhapscan use scheduler module???
      break;
  }
}

/**
 * Implementation of hook_nodeapi
 *
 * @param unknown_type $node
 * @param unknown_type $op
 */

function scholarforms_nodeapi(&$node, $op){
  switch($op){
    
    case 'load':
      $pubstatus = scholarforms_get_pubstatus($node);
      $node->pubstatus = $pubstatus;
      
      break;

    case 'insert':
      $sql = db_query("INSERT INTO {scholarforms_pubstatus} (nid, pubstatus) VALUES (%d, '%s')",
      (int)$node->nid, $node->pubstatus);

      break;

    case 'update':
      $sql_delete = db_query("DELETE FROM {scholarforms_pubstatus} WHERE nid = %d", (int)$node->nid);
      $sql = db_query("INSERT INTO {scholarforms_pubstatus} (nid, pubstatus) VALUES (%d, '%s')",
      (int)$node->nid, $node->pubstatus);
      
      break;  

  }
}

/**
 * Additional submit function for node form
 */
function scholarforms_form_submit($form, &$form_state){ 
//nothing here right now
}

/**
 * Function to return pubstatus radio button setting
 *
 * @param unknown_type $node
 * @return  $pub the returned setting to the form
 */
function scholarforms_get_pubstatus($node = NULL){
    return db_result(db_query("SELECT pubstatus from {scholarforms_pubstatus} WHERE nid = %d", (int)$node->nid));
}
<?php

/**
 * Implementaton of hook_enable().
 */
function scholar_enable() {
  // Weight scholar to be after spaces_og
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE type = 'module' AND name = 'spaces_og'"));
  db_query("UPDATE {system} SET weight = %d WHERE name = 'scholar'", ($weight + 1));  
}



function scholar_install() {
  // Execute our defined updates.
  $version = 6001;
  while (function_exists('scholar_update_' . $version)) {
    call_user_func('scholar_update_' . $version++);
  }
  // hook_install has no return value
}

function scholar_uninstall() {
	imagecache_preset_delete(imagecache_preset_by_name('square_scholar_logo'));
	imagecache_preset_delete(imagecache_preset_by_name('landscape_scholar_logo'));
	imagecache_preset_delete(imagecache_preset_by_name('portrait_scholar_logo'));
}

function scholar_update_6001() {
  $return = array();
  $t = get_t();
  
  //$return[] = db_query("INSERT INTO {menu_custom} (menu_name, title, description) VALUES ('%s', '%s', '%s')", 'scholar_top_menu', $t('Primary'), $t('Top menu for each scholar site.'));
  $return[] = db_query("UPDATE {menu_custom}  SET title='%s', description = '%s' WHERE menu_name='%s'", $t('Primary menu'), $t('Primary menu for each scholar site.'), 'features');
  
  $return[] = db_query("INSERT INTO {menu_custom} (menu_name, title, description) VALUES ('%s', '%s', '%s')", 'scholar_secondary_menu', $t('Secondary menu'), $t('Side menu for each scholar site.'));
  
  return $return;
}

function scholar_update_6002() {
  $return = array();
  
  variable_set('scholar_primary_menu',"scholar_top_menu");
  $return[] = array('success' => TRUE,
                   'query' => "Set the default top menu to the newley created 'scholar_top_menu'");
  variable_set('scholar_secondary_menu',"scholar_side_menu");
  $return[] = array('success' => TRUE,
                   'query' => "Set the default side menu to the newley created 'scholar_side_menu'");
  
  return $return;
}

function scholar_update_6003() {
  $return = array();
  
  __scholar_create_page();
  $return[] = array('success' => TRUE,
                   'query' => "Create 'page' content type");

  
  return $return;
}

function __scholar_create_page(){
$content['type']  = array (
  'name' => 'Page',
  'type' => 'page',
  'description' => 'An html page',
  'title_label' => 'Title',
  'body_label' => 'Body',
  'min_word_count' => '0',
  'help' => '',
  'node_options' => 
  array (
    'status' => true,
    'promote' => false,
    'sticky' => false,
    'revision' => false,
  ),
  'show_preview_changes' => 1,
  'show_diff_inline' => 1,
  'old_type' => 'page',
  'orig_type' => '',
  'module' => 'node',
  'custom' => '1',
  'modified' => '1',
  'locked' => '0',
  'og_content_type_usage' => 'omitted',
  'comment' => '0',
  'comment_default_mode' => '4',
  'comment_default_order' => '1',
  'comment_default_per_page' => '50',
  'comment_controls' => '3',
  'comment_anonymous' => 0,
  'comment_subject_field' => '1',
  'comment_preview' => '1',
  'comment_form_location' => '0',
  'vertical_tabs_fieldsets' => 
  array (
    'menu' => true,
    'author' => true,
    'og_nodeapi' => 1,
    'revision_information' => true,
    'path' => true,
    'comment_settings' => true,
    'scholartaxonomy' => 1,
    'scholarfiles' => true,
    'options' => true,
  ),
);
$content['fields']  = array (
  0 => 
  array (
    'label' => 'Files',
    'field_name' => 'field_file',
    'type' => 'filefield',
    'widget_type' => 'filefield_widget',
    'change' => 'Change basic information',
    'weight' => '2',
    'file_extensions' => '',
    'progress_indicator' => 'bar',
    'file_path' => '',
    'max_filesize_per_file' => '',
    'max_filesize_per_node' => '',
    'description' => '',
    'ffp_field_file' => 
    array (
      'file_path' => '[space-og-path]/files',
      'file_path_cleanup' => 
      array (
        'file_path_pathauto' => 0,
        'file_path_tolower' => 0,
        'file_path_transliterate' => 1,
      ),
      'file_name' => '[filefield-onlyname-original].[filefield-extension-original]',
      'file_name_cleanup' => 
      array (
        'file_name_pathauto' => 0,
        'file_name_tolower' => 0,
        'file_name_transliterate' => 0,
      ),
      'retroactive_update' => '',
    ),
    'group' => false,
    'required' => 0,
    'multiple' => '1',
    'list_field' => '0',
    'list_default' => 1,
    'description_field' => '1',
    'op' => 'Save field settings',
    'module' => 'filefield',
    'widget_module' => 'filefield',
    'columns' => 
    array (
      'fid' => 
      array (
        'type' => 'int',
        'not null' => false,
        'views' => true,
      ),
      'list' => 
      array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'views' => true,
      ),
      'data' => 
      array (
        'type' => 'text',
        'serialize' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'weight' => '1',
      'parent' => '',
      'label' => 
      array (
        'format' => 'above',
      ),
      'teaser' => 
      array (
        'format' => 'default',
        'exclude' => 0,
      ),
      'full' => 
      array (
        'format' => 'default',
        'exclude' => 0,
      ),
      4 => 
      array (
        'format' => 'default',
        'exclude' => 0,
      ),
      'token' => 
      array (
        'format' => 'default',
        'exclude' => 0,
      ),
    ),
  ),
  1 => 
  array (
    'label' => 'Images',
    'field_name' => 'field_image',
    'type' => 'filefield',
    'widget_type' => 'imagefield_widget',
    'change' => 'Change basic information',
    'weight' => '4',
    'file_extensions' => 'png gif jpg jpeg',
    'progress_indicator' => 'bar',
    'file_path' => '',
    'max_filesize_per_file' => '',
    'max_filesize_per_node' => '',
    'max_resolution' => 0,
    'min_resolution' => 0,
    'custom_alt' => 0,
    'alt' => '',
    'custom_title' => 1,
    'title_type' => 'textfield',
    'title' => '',
    'use_default_image' => 0,
    'default_image_upload' => '',
    'default_image' => NULL,
    'description' => '',
    'ffp_field_image' => 
    array (
      'file_path' => '',
      'file_path_cleanup' => 
      array (
        'file_path_pathauto' => 0,
        'file_path_tolower' => 0,
        'file_path_transliterate' => 0,
      ),
      'file_name' => '[filefield-onlyname-original].[filefield-extension-original]',
      'file_name_cleanup' => 
      array (
        'file_name_pathauto' => 0,
        'file_name_tolower' => 0,
        'file_name_transliterate' => 0,
      ),
      'retroactive_update' => '',
    ),
    'group' => false,
    'required' => 0,
    'multiple' => '1',
    'list_field' => '1',
    'list_default' => 1,
    'description_field' => '1',
    'op' => 'Save field settings',
    'module' => 'filefield',
    'widget_module' => 'imagefield',
    'columns' => 
    array (
      'fid' => 
      array (
        'type' => 'int',
        'not null' => false,
        'views' => true,
      ),
      'list' => 
      array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'views' => true,
      ),
      'data' => 
      array (
        'type' => 'text',
        'serialize' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'weight' => '2',
      'parent' => '',
      'label' => 
      array (
        'format' => 'above',
      ),
      'teaser' => 
      array (
        'format' => 'image_s_linked',
        'exclude' => 0,
      ),
      'full' => 
      array (
        'format' => 'image_s_default',
        'exclude' => 0,
      ),
      4 => 
      array (
        'format' => 'image_plain',
        'exclude' => 0,
      ),
      'token' => 
      array (
        'format' => 'image_plain',
        'exclude' => 0,
      ),
    ),
  ),
);
$content['extra']  = array (
  'title' => '-5',
  'body_field' => '0',
  'menu' => '-2',
);
  
  // Make up a $form_state value.
  $content_type = array(
    'values' => array(
      'type_name' => '<create>',
      'macro' => '$content = '. var_export($content, true) .';',
    ),
  );
  // Run it.
  drupal_execute('content_copy_import_form', $content_type);
}

function scholar_update_6004() {
  $return = array();
  
  $a_sitelogo_presets = array(
    'square_scholar_logo' => array('name' => "Square Scholar Site Logo", 'width' => 140, 'height' => 140),
    'landscape_scholar_logo' => array('name' => "Landscape Scholar Site Logo", 'width' => 180, 'height' => 140),
    'portrait_scholar_logo' => array('name' => "Portrait Scholar Site Logo", 'width' => 140, 'height' => 180),
  );
  
  foreach ($a_sitelogo_presets as $s_preset_key => $a_preset_info){
  
  	// Preset
    $imagecachepreset = imagecache_preset_save(array('presetname' => $s_preset_key));
    // Action
    $imagecacheaction = new stdClass ();
    $imagecacheaction->presetid = $imagecachepreset['presetid'];
    $imagecacheaction->module = 'imagecache';
    $imagecacheaction->action = 'imagecache_scale_and_crop';
    $imagecacheaction->data = array('width' => $a_preset_info['width'], 'height' => $a_preset_info['height'] );
    drupal_write_record('imagecache_action', $imagecacheaction);
    
  	$return[] = array('success' => TRUE, 'query' => "Created site logo preset {$a_preset_info['name']}");
  }
  return $return;
}
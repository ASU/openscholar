<?php

function scholarvocab_menu() {
  $items = array ();
  $items ['scholarcp/settings/taxonomy'] = array (
  	'title' => 'Taxonomy', 
  	'page callback' => 'scholarvocab_taxonomies', 
  	'access arguments' => array ('access content' ),
    'menu_name' => 'scholarcp',
  );
  
  $items['scholarvocab/term/delete/%/%'] = array (
    'title' => 'deleting a term',
    'page callback' => 'scholarvocab_term_delete',
        'page arguments' => array(3,4),
    'access arguments' => array('access content')
  );
  
  $items['scholarvocab/term/%/%/rename/%'] = array (
    'title' => 'deleting a term',
    'page callback' => 'scholarvocab_term_rename',
      'page arguments' => array(2,3,5),
    'access arguments' => array('access content')
  );
  
  
  return $items;
}

function scholarvocab_taxonomies(){
  $site = scholar_get_scholar();
  scholar_include('scholarapi');
  $types = scholar_content_types();
  $output = '';
  $delta = 0;
  foreach($types as $type){
    
    $block = scholarvocab_block_per_content_type($site, $type);
    $bo = new stdClass();
    $bo -> module = 'scholarvocab';
    $bo -> content = $block['content'];
    $bo -> subject = $block['subject'];
    $bo -> delta = $bo -> module . $delta++;
    $output .= theme('block', $bo);
  }
  
  return $output;
}


function scholarvocab_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0]['info'] = t('Scholar site categories');
      return $blocks;
    case 'view':
      switch ($delta) {
        case 0:
          $block = scholarvocab_block_view();
          break;
      }
      
      return $block;
  }
}

function scholarvocab_block_view() {
  $group_node = og_get_group_context ();
  $site = spaces_load ( 'og', $group_node->nid, TRUE );
  $sid = $group_node -> nid;
 
  // 1. get the active contexts
  $active_contexts = context_active_contexts();
  foreach($active_contexts as $c){
    // does this context has a "node" associated with it
    if (isset ($c -> node)) {
      $node_type = current($c -> node);  // TODO we are assuming that the context has only one content type
      // get vocabularies associated with this content type
      return scholarvocab_block_per_content_type($site, $node_type);
    }
  }
}

function scholarvocab_block_per_content_type($site, $node_type) {
  drupal_add_js ( drupal_get_path ( 'module', 'scholarvocab' ) . '/theme/scholarvocab.js' );
  ctools_include ( 'ajax' );
  ctools_add_js ( 'ajax-responder' );
  //$site = scholar_get_scholar(); // TODO why this is not working !!!
  $admin = $site->admin_access ();
  $vcs = taxonomy_get_vocabularies ( $node_type );
  foreach ( $vcs as $v ) {
    $tree = taxonomy_get_tree ( $v->vid );
    
    foreach ( $tree as $term ) {
      $count = taxonomy_term_count_nodes ( $term->tid );
      //if ($count) {
      // TODO the following should come from the feature view (where term) is an argument)
      $term_path = "taxonomy/term/$term->tid";
      $term_link = l ( $term->name, $term_path, array ('title' => t ( $term->description ), 'attributes' => array ('id' => 'category_menu_item_' . $term->tid ) ) );
      $item = $term_link . '<span class = "count" > (' . $count . ')</span>';
      if ($admin) {
        $admin_links = array ();
        $admin_links [] = array ('title' => 'delete', 'href' => "scholarvocab/term/delete/" . $term->vid . "/" . $term->tid );
        
        $admin_links [] = array ('title' => 'rename', 'href' => 'scholarvocab/term/' . $term->vid . "/" . $term->tid . '/rename/' );
        //$admin_links[] = l('rename', , $options=array('attributes' => array('class' => 'admin')));
        $item .= theme ( 'links', $admin_links, $attributes = array ('class' => 'admin' ) );
      }
      $items [] = array ('data' => $item );
      //}
    }
  
  }
  $block ['content'] = theme ( 'item_list', $items );
  $block ['subject'] = t ( 'Categories' );
  if ($admin) {
    $block ['subject'] .= l ( 'Edit', "node/" . $group_node->nid . "/og/vocab/edit/vocabulary/$vid" );
  }
  return $block;
}

function scholarvocab_term_rename($vid, $tid, $newterm) {
  //dpm ( $newterm );
  $table = 'term_data';
  $record = new stdClass ( );
  $record->name = $newterm;
  
  $term = array ('name' => $newterm, 'vid' => $vid, 'tid' => $tid );
  
  // if (drupal_rewrite_record($table, $record, 'tid')){
  if (taxonomy_save_term ( $term )) {
    
    ctools_include ( 'ajax' );
    ctools_add_js ( 'ajax-responder' );
    $commands = array ();
    $commands [] = ctools_ajax_command_replace ('#category_menu_item_' . $tid, $newterm );
    ctools_ajax_render ( $commands ); // this function exits.
  } else {
    ctools_ajax_render_error($error = 'something wrong happened ...');
  }

}

function scholarvocab_term_delete($vid,$tid){
  //if (taxonomy_del_term($tid)) {
    ctools_include('ajax');
    ctools_add_js('ajax-responder');
    $commands = array();
    $commands[] = ctools_ajax_command_replace('#category_menu_item_' . $tid, '');
    ctools_ajax_render($commands); // this function exits.
  //} else {
  //  ctools_ajax_render_error($error = 'something wrong happened ...');
  //}
}


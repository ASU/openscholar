<?php

function advanced_help2book_menu(){
  $items = array();
  $items['helpinject/import/%'] = array(
    'title' => 'try',
    'page callback' => 'advanced_help2book_import',
    'page arguments'      => array(1),
    'access arguments' => array('access content'),
  );
  return $items;
}

function advanced_help2book_import($module){
  // load the help from our module
  $all_adv_help = advanced_help_get_topics();
  $this_module = $all_adv_help[$module];

  // the first one must be the book (top level book page)
  $book = reset($this_module);
  
  $nids_mlids = array(); // keeps trak of nid/mlid for each node inserted 
  
  foreach ( $this_module as $topic ) {
    // prepare the node for submission
    $node = new stdClass();
    $node->type = 'book';
    module_load_include('inc', 'node', 'node.pages');
    node_object_prepare($node);
    
    $node->title = check_plain($topic['title']);
    $body = file_get_contents($topic['path'] . '/' . $topic['file']);
    $body = check_markup($body);
    //$body = getTextBetweenTags($body, 'div');
    //$body -> body = $body;
    $node->body = $body;
    
    if (! $topic['parent']) { // top node only
      $node->book['bid'] = 'new';
    }
    else {
      // bid is always the nid of the top node
      $node->book['bid'] = $nids[$book['name']]['nid'];
      // parent is the mlid of the parent node
      $node->book['plid'] = $nids[$topic['parent']]['mlid'];
    }
    
    //submit the node
    $node = node_submit($node);
    node_save($node);
    
    //register nid/mlid for this node
    $nids[$topic['name']]['nid'] = $node->nid;
    $nids[$topic['name']]['mlid'] = $node->book['mlid'];
  }
  
  return 'success';

}

/**
 * hook theme_registry_alter
 * We are overriding node-book.tpl.php
 */
function advanced_help2book_theme_registry_alter(&$theme_registry){
  $original_path = array_shift($theme_registry['node']['theme paths']);
  $this_module_path = drupal_get_path('module', 'advanced_help2book');
  array_unshift($theme_registry['node']['theme paths'], $original_path, $this_module_path);   
}

/*
function advanced_help2book_preprocess_node(&$vars){
  if ($vars['type'] == 'book'){
    $vars['advanced_help2book_node_header'] = '<div id="someid">';
    $vars['advanced_help2book_node_footer'] = '</div>';
    
  }
}
*/

// private
function getTextBetweenTags($string, $tagname){
  $pattern = "/<$tagname.[^>]*>(.*?)<\/$tagname>/s";
  preg_match($pattern, $string, $matches);
  return $matches[1];
}

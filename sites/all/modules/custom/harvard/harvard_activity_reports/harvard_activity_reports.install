<?php
/** 
 * Function to check to see if the field exists
 */
function harvard_activity_reports_checkExists($fieldName) {
	// first check to see if the field exists
	$iqssTable = drupal_schema_fields_sql('iqss_pinserver_register');	
	// gather all the fields in this table
	// now check if we're in the array
	if(!in_array($fieldName, $iqssTable)) {
		return TRUE;
	}else{
		return FALSE;
	}// end if
}

/**
 * Implementation of hook_schema_alter().
 */

function harvard_activity_reports_schema_alter(&$schema) {
	if (isset($schema['iqss_pinserver_register'])) {
    	$schema['iqss_pinserver_register'] = array(
    	'fields' => array(
    		'uid' => array(
    			'description' => t('Drupal user ID'),
    			'type' => 'int',
    			'not null' => TRUE,
    			'default' => 0,
    		),
    		'huid' => array(
    			'description' => t("Holds the Harvard ID of returning users"),
    			'type' => 'varchar',
    			'length' => 255,
    			'not null' => FALSE,
    			'default' => '',
    		),
    		'hashID' => array(
      			'type' => 'varchar',
   				'length' => 256,
   				'not null' => FALSE,
   		      	'default' => NULL,
    		),
    		'reg_time' => array(
    			'description' => t("The time of user registration"),
    			'type' => 'int',
    		),
    	),  
  			'unique keys' => array(
   			'huid' =>array('huid'),
   		),
 			 'primary key' => array( 'uid')
    	);
	}// end if isset
}

/**
 * Function on install to loop the iqss_pinserver_table and hash all the huids
 * allowing the module to match up properly with the hashed ids being sent
 */
function harvard_activity_reports_hash_uids(){
	// use the FAS suffix
	$suffix = "klA+j230-a819xzm,fy";
	// select all the huids where there is no hashed HUID already
	$huidsRes = db_select('iqss_pinserver_register','i')
    ->fields('i',array('uid','huid'))
    ->condition('hashID', NULL,'is')
    ->execute();
    
	// loop the results for hashing
	// updated for Drupal 7 - db_fetch_array removed
	foreach($huidsRes as $huidsRow) {
		$uid = $huidsRow->uid;
		$huid = $huidsRow->huid;
		$hashedID = md5($huid.$suffix);

		// Drupal 7
		db_update('iqss_pinserver_register')
  		->fields(array('hashID' => $hashedID))
 		->condition('uid', $uid)
 		->execute();
	}// end foreach
}// end function

/**
 * Function to alter the table and set the column to accept nulls
 */
function harvard_activity_reports_alter_null() {
	//$ret = array();
	db_change_field('iqss_pinserver_register','huid','huid', array('type' => 'varchar','length' => 255, 'not null' => FALSE,'default' => NULL));
}// end function

/**
 * Implementation of hook_install().
 */
function harvard_activity_reports_install() {
	// first check to see if the field exist	
	// gather all the fields in this table
	if(db_field_exists('iqss_pinserver_register','hashID')==FALSE){
		db_add_field('iqss_pinserver_register', 'hashID', array('type' => 'varchar','length' => 256,'not null' => FALSE,'default' => NULL));
	}
	
	// alter the table
	if(db_field_exists('iqss_pinserver_register','huid')==TRUE){
		harvard_activity_reports_alter_null();
	}// end if
	
	// run the inserts
	if(db_field_exists('iqss_pinserver_register','hashID')==TRUE){
		harvard_activity_reports_hash_uids();
	}// end if
	
	// check for the huid field and alter it to remove the NOT NULL attribute
}

/**
 * Implementation of hook_uninstall().
 */
function harvard_activity_reports_uninstall() {
  	// first check to see if the field exists
  	if(db_field_exists('iqss_pinserver_register','hashID')==TRUE){
		// its in there, drop it
    	db_drop_field('iqss_pinserver_register', 'hashID');
	}// end check
}

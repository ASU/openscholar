<?php
// include the file for function to check if a module exists
// this function needed on both the .install and .module file
include_once('harvard_activity_reports.function.inc');

/** 
 * Function to check to see if the field exists
 */
function harvard_activity_reports_checkExists($fieldName) {
	// first check to see if the field exists
	$iqssTable = drupal_schema_fields_sql('iqss_pinserver_register');	
	// gather all the fields in this table
	// now check if we're in the array
	if(!in_array($fieldName, $iqssTable)) {
		return TRUE;
	}else{
		return FALSE;
	}// end if
}

/**
 * Implementation of hook_schema_alter().
 */
function harvard_activity_reports_schema_alter(&$schema) {
	if (isset($schema['iqss_pinserver_register'])) {
    	$schema['iqss_pinserver_register'] = array(
    	'fields' => array(
    		'uid' => array(
    			'description' => t('Drupal user ID'),
    			'type' => 'int',
    			'not null' => TRUE,
    			'default' => 0,
    		),
    		'huid' => array(
    			'description' => t("Holds the Harvard ID of returning users"),
    			'type' => 'varchar',
    			'length' => 255,
    			'not null' => FALSE,
    			'default' => '',
    		),
    		'hashID' => array(
      			'type' => 'varchar',
   				'length' => 256,
   				'not null' => FALSE,
   		      	'default' => NULL,
    		),
    		'reg_time' => array(
    			'description' => t("The time of user registration"),
    			'type' => 'int',
    		),
    	),  
  			'unique keys' => array(
   			'huid' =>array('huid'),
   		),
 			 'primary key' => array( 'uid')
    	);
	}// end if isset
}

/**
 * Function on install to loop the iqss_pinserver_table and hash all the huids
 * allowing the module to match up properly with the hashed ids being sent
 */
function harvard_activity_reports_hash_uids(){
	// run the check module exists
	if(harvard_activity_reports_check_module('iqss_pinserver_register')==TRUE) {
		// use the FAS suffix
		$suffix = "klA+j230-a819xzm,fy";
		// select all the huids where there is no hashed HUID already
		$selectHUIDS = "SELECT uid,huid FROM {iqss_pinserver_register} WHERE hashID is NULL";
		$huidsRes = db_query($selectHUIDS);
		if($huidsRes->num_rows>0) {
			// loop the results for hashing
			while($huidsRow = db_fetch_array($huidsRes)) {
				$uid = $huidsRow['uid'];
				$huid = $huidsRow['huid'];
				$hashedID = md5($huid.$suffix);
			
				// now that they're hashed, update the row
				$updateHuid = "UPDATE {iqss_pinserver_register} SET hashID = '%s' WHERE uid = %d";
				$updateRes = db_query($updateHuid,$hashedID,$uid);
			}// end while
		}// end if
	}// end if
}// end function

/**
 * Function to alter the table and set the column to accept nulls
 */
function harvard_activity_reports_alter_null() {
	$ret = array();
	 db_change_field($ret,'iqss_pinserver_register','huid','huid', array('type' => 'varchar','length' => 255, 'not null' => FALSE,'default' => NULL));
}// end function

/**
 * Implementation of hook_install().
 */
function harvard_activity_reports_install() {
  	$ret = array();
  	// run the check module exists
	if(harvard_activity_reports_check_module('iqss_pinserver_register')==TRUE) {
		if(harvard_activity_reports_checkExists('hashID')==TRUE) {
			// its not in there, add it
  			db_add_field($ret, 'iqss_pinserver_register', 'hashID', array('type' => 'varchar','length' => 256,'not null' => FALSE,'default' => NULL));
		}// end if !in array
	
		// alter the table
		harvard_activity_reports_alter_null();
	
		// run the inserts
		harvard_activity_reports_hash_uids();
	}// end if
	
}// end function

/**
 * Implementation of hook_uninstall().
 */
function harvard_activity_reports_uninstall() {
  	$ret = array();
  	// run the check module exists
	//if(harvard_activity_reports_check_module('iqss_pinserver_register')==TRUE) {
    	db_drop_field($ret, 'iqss_pinserver_register', 'hashID');
	//}// end check
}

<?php

/**
 * implementation of hook_menu()
 * provides a page for ajax to call so we can retrieve info from drupal
 */
function pathauto_ajax_menu() {
  $items['pathauto_ajax/alias_js'] = array(
    'page callback' => 'pathauto_ajax_alias_js', 
    'type' => 'MENU_CALLBACK', 
    'access arguments' => array(
      'access content' 
    ) 
  );
  return $items;
}

/**
 * implementation of hook_form_alter()
 * attaches javascript to node edit forms
 */
function pathauto_ajax_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] . '_node_form' == $form_id && isset($form['path']['pathauto_perform_alias'])) {
    drupal_add_js(drupal_get_path('module', 'pathauto_ajax') . '/pathauto_ajax.js');
  }
}

/**
 * @function pathauto_ajax_alias_js()
 * 
 * .js file calls this function to get info back from drupal
 * gets the pattern for formatting urls for this node type, tries to apply it
 * returns expected url.
 */
function pathauto_ajax_alias_js() {
  //get pattern for this node type
  $pattern = trim(variable_get('pathauto_node_' . $_GET['type'] . '_pattern', FALSE));
  if (empty($pattern)) {
    $pattern = trim(variable_get('pathauto_node_pattern', FALSE));
  }
  
  //if applicable, process this pattern for tokens
  if (isset($pattern) && strlen($pattern) > 0 ) {
    require_once(drupal_get_path('module', 'pathauto') . '/pathauto.inc');
      
    $node = array(
      'title' => $_GET['title'],
      'type' => $_GET['type'],
      'spaces_og' => array('gid' => $_GET['gid']),
    );
    
    //let pathauto apply tokens to path given our fake node
    $node = (object)$node;
    $placeholders = pathauto_get_placeholders('node', $node);
    $path = pathauto_create_alias('node', 'return', $placeholders, null, null, $node->type, null);
  }

  if (isset($path) && strlen($path) > 0 ) {
    drupal_json( array('status' => TRUE, 'data' => $path ) );
	} else {
		//don't know how to replace tokens in this pattern  
		drupal_json( array(
			'status' => TRUE, 
			'data' => '', 
			'error' => 'pathauto_ajax has no token replacement set up for this pathauto pattern',
			'pattern' => $pattern,
    ));
	}
}

/**
 * implementation of hook_preproces_page
 * adds tokenizable variables to page's javascript, so pathauto_ajax.js can use them.
 */
function pathauto_ajax_preprocess_page(&$variables) {
  if (arg(0) == 'node' && arg(1) == 'add' && arg(2)) {
    $vsite=vsite_get_vsite();
    $data = array( 'pathauto_ajax' => array(        
        'type' => arg(2), 
        'gid' => $vsite->id,
    ));
       
    drupal_add_js($data, 'setting');
  }
}



<?php

include_once('scholar_feeds.features.inc');

/**
 * hook strongarm
 */
function scholar_feeds_strongarm(){
  $conf = array();
  $conf['feedapi_settings_feed'] = array(
    'enabled' => 1,
    'upload_method' => 'url',
    'refresh_on_create' => 1,
    'update_existing' => 0, // we dont want to refresh existing items
    'refresh_time' => 3600, // every hour ?  increase !
    'items_delete' => 0,
    'parsers' => array(
        'parser_common_syndication' => array(
           'enabled' => 1,
           'weight' => 0,
           'accept_invalid_cert' => 0,
         ),
    ),

    'processors' => array(
       'feedapi_node' => array(
          'enabled' => 1,
          'weight' => 1,
          'content_type' => 'feed_item',
          'input_format' => 1,
          'node_date' => 'current',  // use time of download
          'x_dedupe' => 1,
       ),

       'feedapi_inherit' => array (
          'enabled' => 1,
          'weight' => 2,
          'inherit_og' => 1,
          'inherit_taxonomy' => 1,
          'inherit_author' => 1,
       ),
   ),
  );
  
  
  return $conf;
}


/**
 * Implementation of hook_context_links_alter().
 */
function scholar_feeds_context_links_alter(&$links) {
  if (!empty($links['feed_item'])) {
    unset($links['feed_item']);
  }
  if (!empty($links['feed'])) {
    $links['feed']['query'] = drupal_get_destination();
  }
}

/**
 * Implementation of hook_form_alter().
 * Used to add validation to the feed addition
 */
function scholar_feeds_form_alter(&$form, $form_state, $form_id) {
  // Content type form.
  if ($form_id == 'feed_node_form' && $form['type']['#value'] == 'feed') {
    $form['#validate'][] = 'scholar_feeds_feed_validate';
  }
}

/**
 * Validate the feed
 * 
 * @param $form
 * @param $form_state
 */
function scholar_feeds_feed_validate($form, &$form_state) {
  if (!strlen($form_state['values']['feedapi']['feedapi_url'])) {
    return;
  }
	
  $form_state['values']['feedapi']['feedapi_url'] = trim($form_state['values']['feedapi']['feedapi_url']);
  
  $handle = @fopen($form_state['values']['feedapi']['feedapi_url'], "r");
  if(!$handle){
  	form_error($form, t('Can\'t connect to '.$form_state['values']['feedapi']['feedapi_url'].'. Invalid feed URL, please check that the URL is valid.'), 'error');
  }else{
  	fclose($handle);
  }
}
<?php

include_once('scholar_reader.features.inc');

function scholar_reader_init(){
  drupal_add_css(drupal_get_path('module', 'scholar_reader') .'/theme/scholar-reader.css');
}



/**
 * Implementation of hook_context_links_alter().
 */
function scholar_reader_context_links_alter(&$links) {
  if (!empty($links['feed'])) {
    $links['feed']['query'] = drupal_get_destination();
  }
}

/**
 * hook vsite_sidgets

 */
function scholar_reader_vsite_widgets(){
  $items = array();
  $items['views_scholar_reader-block_1'] = array(
        'module' => 'views',
        'delta' => 'scholar_reader-block_1',
        'weight' => 20,
        'region' => false,
        'status' => '0',
        'label' => 'List of Feeds',
        'type' => 'context_ui',
      );

  $items['views_scholar_reader-block_2'] = array(
        'module' => 'views',
        'delta' => 'scholar_reader-block_2',
        'weight' => 21,
        'region' => false,
        'status' => '0',
        'label' => 'Latest feed items',
        'type' => 'context_ui',
  );

  $items['scholar_reader_my_twitter_feed'] = array(
        'module' => 'scholar_reader',
        'delta' => 'my_twitter_feed',
        'weight' => 20,
        'region' => false,
        'status' => '0',
        'label' => 'Twitter Feed',
        'type' => 'context_ui',
      );

  return $items;
}


/**
 * Implementation of hook_data_views_handlers_alter().
 */
function scholar_reader_data_views_handlers_alter(&$handlers) {
  dpm($handlers);
  $handlers['field']['scholar_reader_handler_field_description'] = 'scholar_reader_handler_field_description';
}


/**
 * Implementation of hook_form_alter().
 * Used to add validation to the feed addition
 */
function scholar_reader_form_alter(&$form, $form_state, $form_id) {
  // Content type form.
  if ($form_id == 'feed_node_form' && $form['type']['#value'] == 'feed') {
    $form['#validate'][] = 'scholar_reader_feed_validate';
  }
}

/**
 * Validate the feed
 *
 * @param $form
 * @param $form_state
 */
function scholar_reader_feed_validate($form, &$form_state) {
  if (!strlen($form_state['values']['feeds']['FeedsHTTPFetcher']['source'])) {
    return;
  }

  $form_state['values']['feeds']['FeedsHTTPFetcher']['source'] = trim($form_state['values']['feeds']['FeedsHTTPFetcher']['source']);

  $form_state['values']['feeds']['FeedsHTTPFetcher']['source'] = str_ireplace("feed:http://","http://",$form_state['values']['feeds']['FeedsHTTPFetcher']['source']); //For Safari Users

  $form_state['values']['feeds']['FeedsHTTPFetcher']['source'] = str_ireplace("feed://","http://",$form_state['values']['feeds']['FeedsHTTPFetcher']['source']); //For Safari Users

  $success = (valid_url($form_state['values']['feeds']['FeedsHTTPFetcher']['source'],true) && ($status = drupal_http_request($form_state['values']['feeds']['FeedsHTTPFetcher']['source'])) && !strlen($status->error));
  if(!$success){
  	form_error($form, t('Can\'t connect to '.$form_state['values']['feeds']['FeedsHTTPFetcher']['source'].'. Invalid feed URL, please check that the URL is valid.'), 'error');
  }
}

/**
 * hook default__contexts_alter
 */
function scholar_reader_context_default_contexts_alter(&$contexts){

  $vsite = vsite_get_vsite();
  if(!$vsite || !strlen($vsite->settings['reader']['twitter_username'])){
    unset($contexts['scholar-feature-front']->block['scholar_reader_my_twitter_feed']);
    unset($contexts['vsite-section-public']->block['scholar_reader_my_twitter_feed']);
  }//Is there a bio created for this site? If not unset the applicable block


}

/**
 * Implementation of hook_spaces_settings().
 */
function scholar_reader_spaces_settings(){
  return array(
    'reader' => array(
      'class' => 'scholar_reader_settings_reader',
      'file' => drupal_get_path('module', 'scholar_reader') . '/include/scholar_reader.settings.inc'
    ),
  );
}

/**
 * Define the scholar reader blocks with hook block
 */
function scholar_reader_block($op = 'list', $delta = false, $edit = array()) {
  if ($op == 'list') {
    $blocks['my_twitter_feed']['info'] = t('Twitter Updates');
    return $blocks;
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 'my_twitter_feed':
        return _scholar_reader_twitter_wgt();
    }
  }
}


/**
 * Renders twitter block for users
 */
function _scholar_reader_twitter_wgt(){

	if(!($vsite = vsite_get_vsite()) || !$vsite->access_feature($op = 'view', 'scholar_reader')) return array();

	//Do they have their feed set?
	if(!strlen($vsite->settings['reader']['twitter_username'])) return array();

	//Fix this? Probably a better way of getting the twitter id..
  $twitterid = str_replace("from:",'',$vsite->settings['reader']['twitter_username']);
	$output = twitter_pull_render ($vsite->settings['reader']['twitter_username']);
  $output .= '<div class="twitter-followme">' . l('Follow me on Twitter','http://twitter.com/' . $twitterid) .'</div>';
	return array('subject' => "Twitter Updates",'content' => $output);
}

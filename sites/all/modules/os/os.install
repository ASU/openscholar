<?php

/**
 * Implementation of hook_install().
 */
function os_install(){
  // Add type,nid index to node table. Allows for more efficient joins to
  // og_ancestry when limiting a view by a certain node type.
  if (db_table_exists('node')) {
    db_query("ALTER TABLE {node} ADD KEY type_node (type, nid)");
  }
}

/*
 * hook_update_N
 * installs 'views_content_cache','os_views_content_cache','os_blocks_content_cache','os_wysiwyg_fields', 'citation_dsitribute'.
 * removes 'cite_distribute'
 *
 * update hook for beta11 -> beta12
 */
function os_update_6001(&$sandbox){

  $res = array();
  module_rebuild_cache();

  $modules = array('views_content_cache','os_views_content_cache','os_blocks_content_cache','os_wysiwyg_fields', 'citation_distribute', 'pathauto_extra');

  foreach ($modules as $mod) {
    if(!module_exists($mod)){
      include_once('includes/install.inc');
      drupal_install_modules(array($mod));
    }
  }

  $res[] = array(
    'success' => true,
    'query' => 'Installed modules: ' . implode(', ', $modules),
  );

  //remove cite_distribute and its plugins
  $remove = array('cs_meta', 'googlescholar_meta', 'repec_meta', 'sword_meta', 'cite_distribute');
  $remove = array_filter($remove, 'module_exists');
  foreach ($remove as $module) {
    module_disable(array($module), TRUE);
    drupal_uninstall_module($module);
  }

  if (count($remove) > 0) {
    $res[0]['query'] .= '.  Uninstalled modules: ' . implode(', ', $remove);
  }

  return $res;

}

/*
 * hook_update_N
 *
 * update hook for beta12 => beta13
 *
 * installs new $modules
 */
function os_update_6002(&$sandbox) {
  $res = array();
  $modules = array('vsite_controllers', 'os_boxes', 'spaces_simpleviews', 'vsite_contextual', 'os_modalframe');
  include_once('includes/install.inc');
  drupal_install_modules($modules);

  $failed = array();
  foreach($modules as $mod) {
    if (!module_exists($mod)) {
      $failed[] = $mod;
    }
  }

  if (count($failed)) {
    $res = array('#abort' => array('success' => FALSE, 'query' => 'Failed to install modules: ' . implode(', ', $failed)));
  } else {
    $res[] = array('success' => TRUE, 'query' => 'Installed modules: ' . implode(', ', $modules));
  }

  return $res;
}

/*
 * hook_update_N
 *
 * update hook for beta12 => beta13
 *
 * Updates block ids that are not going to use boxes
 */
function os_update_6003(&$sandbox) {
  $res = array();

  $a_block_id_changes = array(
    'vsite_widgets-3' => 'vsite-site_search',
    'vsite_widgets-5' => 'vsite-google_translate',
  );
  
  $res[] = array('success' => TRUE, 'query' => 'Moved blocks to new Id\'s ');

  return $res;
}

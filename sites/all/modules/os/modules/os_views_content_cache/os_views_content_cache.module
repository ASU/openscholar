<?php
/**
 * Implementation of hook_views_api().
 */
function os_views_content_cache_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'os_views_content_cache') .'/views',
  );
}

/**
 * Implementation of hook_context_plugins().
 *
 * This is a ctools plugins hook.
 */
function os_views_content_cache_views_content_cache_plugins() {
  $plugins = array();

  $plugins['vsite_config'] = array(
    'title' => t('vsite Config'),
    'description' => t('Invalidates cache when a vsites config cahnges'),
    'handler' => array(
      'path' => drupal_get_path('module', 'os_views_content_cache') . '/plugins',
      'file' => 'vsite_config.inc',
      'class' => 'views_content_cache_key_vsite_config',
      'parent' => 'base',
    ),
  );
  
  $plugins['os_og'] = array(
    'title' => t('OS Extended Organic Groups'),
    'description' => t('Handles Organic Groups with additional features for OS sites'),
    'handler' => array(
      'path' => drupal_get_path('module', 'os_views_content_cache') . '/plugins',
      'file' => 'os_og.inc',
      'class' => 'views_content_cache_key_os_og',
      'parent' => 'og',
    ),
  );
  
  return $plugins;
}

/**
 * Implementation of hook_form_alter()
 **/
function os_views_content_cache_form_alter(&$form, $form_state, $form_id){
	if(array_key_exists($form_id, os_views_content_cache_vsite_config_forms())){
		$form['#submit'][] = 'os_views_content_cache_form_submission';
  }
}

function os_views_content_cache_form_submission($form, &$form_state){
	views_content_cache_update_set($form_state['values']['form_id'], 'form_id');
}

/**
 * Forms that should be monitored for changes
 */
function os_views_content_cache_vsite_config_forms(){
	
  //Just going to return a semi-static list for now
  $a_settings = array(
    'vsite_layout_settings_form' => "Layout settings",
    'vsite_menus_settings_form' => "Menu Settings",
    'vsite_taxonomy_form' => "Taxonomy Term Order Changed",
    'taxonomy_form_vocabulary' => "Add/Edit Vocabulary",
    'taxonomy_vocabulary_confirm_delete' => "Delete a Vocabulary",
    'taxonomy_form_term' => "Add/Edit Taxonomy Term",
    'vsite_generic_settings_form' => "Generic Settings",
    'vsite_design_theme_picker_form' => "Theme Setting",
  );
    
  $features = spaces_features( 'og' );
  ksort($features);
    
  foreach ($features as $feature => $info) {
    $item = menu_get_item("features/{$feature}");
    if ($item) {
      $a_settings[$item['page_arguments'][0]] = "{$info->info['name']} feature settings";
    }
  }
    
  return $a_settings;
}
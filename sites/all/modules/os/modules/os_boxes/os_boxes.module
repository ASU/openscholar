<?php


/**
 * Implementation of hook_ctools_plugin_api().
 */
function os_boxes_ctools_plugin_api($module, $api) {
  if ($module == 'boxes' && $api == 'plugins') {
    return array('version' => 1);
  }
}

/**
 * Implementation of hook_boxes_plugins().
 */
function os_boxes_boxes_plugins() {
  $info = array();
  $info['os_boxes_default'] = array(
    'handler' => array(
      'class' => 'os_boxes_default',
      'file' => 'os_boxes_default.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'box',
    ),
  );
  $info['os_boxes_simple'] = array(
    'title' => 'Text',
    'description' => 'Simple custom text',
    'tags' => array('Basic'),
    'handler' => array(
      'parent' => 'box',
      'class' => 'boxes_simple',
      'file' => 'boxes_simple.inc',
      'path' => drupal_get_path('module', 'boxes') .'/plugins',
    ),
  );

  $info['os_boxes_addthis'] = array(
    'title' => 'Addthis',
    'description' => 'Social media links',
    'tags' => array('Social'),
    'handler' => array(
      'class' => 'os_boxes_addthis',
      'file' =>  'os_boxes_addthis.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_featuredposts'] = array(
    'title' => 'Featured Posts',
    'description' => 'List of content featured for front page',
    'tags' => array('Content'),
    'handler' => array(
      'class' => 'os_boxes_featuredposts',
      'file' => 'os_boxes_featuredposts.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_features'] = array(
    'title' => 'Features',
    'description' => 'List of content from your site\'s Features',
    'tags' => array('Content'),
    'handler' => array(
      'class' => 'os_boxes_features',
      'file' => 'os_boxes_features.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_feedreader'] = array(
    'title' => 'Feed Reader',
    'description' => 'List of feed items',
    'tags' => array('Content'),
    'handler' => array(
      'class' => 'os_boxes_feedreader',
      'file' => 'os_boxes_feedreader.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_gallery'] = array(
    'title' => 'Image Gallery',
    'description' => 'List of images',
    'tags' => array('Content', 'Media', 'Image'),
    'handler' => array(
      'class' => 'os_boxes_gallery',
      'file' => 'os_boxes_gallery.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_slideshow'] = array(
    'title' => 'Slideshow Gallery',
    'description' => 'Display gallery as a slideshow',
    'tags' => array('Media','Slideshow'),
    'handler' => array(
      'class' => 'os_boxes_slideshow',
      'file' => 'os_boxes_slideshow.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_rss'] = array(
    'title' => 'RSS feed',
    'description' => 'RSS feed ??',
    'tags' => array('Social','Feed'),
    'handler' => array(
      'class' => 'os_boxes_feedreader',
      'file' => 'os_boxes_feedreader.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_twitterfeed'] = array(
    'title' => 'Twitter feed CUSTOM BOX',
    'description' => 'List of latest tweets',
    'tags' => array('Social',"Feed","Twitter"),
    'handler' => array(
      'class' => 'os_boxes_twitterfeed',
      'file' => 'os_boxes_twitterfeed.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_cclicense'] = array(
    'title' => 'CC License',
    'description' => 'Displays CC license widget',
    'tags' => array('Other'),
    'handler' => array(
      'class' => 'os_boxes_cclicense',
      'file' => 'os_boxes_cclicense.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );


  $info['os_boxes_node'] = array(
    'title' => 'Post in a box',  // i.e. view
    'description' => 'Displays the content of a post in the widget',
    'tags' => array('Content'),
    'handler' => array(
      'class' => 'os_boxes_node',
      'file' => 'os_boxes_node.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_bio'] = array(
    'title' => 'Bio Box',  // i.e. view
    'description' => 'Displays biography blurb',
    'tags' => array('Other',"Bio"),
    'handler' => array(
      'class' => 'os_boxes_bio',
      'file' => 'os_boxes_bio.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_node',
    ),
  );

  $info['os_boxes_oembed'] = array(
    'title' => 'Media Embed',  // i.e. view
    'description' => 'Embed Media',
    'tags' => array('Media', 'Social'),
    'handler' => array(
      'class' => 'os_boxes_oembed',
      'file' => 'os_boxes_oembed.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
  );

  $info['os_boxes_shields'] = array(
    'title' => 'Shield',
    'description' => 'Department Shield',
    'tags' => array('Other'),
    'handler' => array(
      'class' => 'os_boxes_shields',
      'file' => 'os_boxes_shields.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    )
  );

  $info['os_boxes_booktoc'] = array(
    'title' => 'Book Table of Contents',
    'description' => 'Table of Contents',
    'tags' => array('Content'),
    'handler' => array(
      'class' => 'os_boxes_booktoc',
      'file' => 'os_boxes_booktoc.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    )
  );

  $info['os_boxes_modalframe'] = array(
    'handler' => array(
      'class' => 'os_boxes_modalframe',
      'file' => 'os_boxes_modalframe.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_default',
    ),
    'factory_path' => '',
  );

  $info['os_boxes_modal_image'] = array(
    'title' => 'Single Image',
    'description' => 'Single Image',
    'tags' => array('Content'),
    'handler' => array(
      'class' => 'os_boxes_modalframe_image',
      'file' => 'os_boxes_modalframe_image.inc',
      'path' => drupal_get_path('module', 'os_boxes') .'/plugins',
      'parent' => 'os_boxes_modalframe',
    ),
    'factory_path' => 'node/add/image',
  );

  return $info;
}

/**
 * hook vsite_sidgets
 */
function os_boxes_vsite_widgets(){
  $items = array();

  /**
   * Avalible block defintions
   */
  ctools_include('plugins');
  $plugins = ctools_get_plugins('boxes', 'plugins');

  $items = array();
  foreach ( $plugins as $key => $info ) {
    if (isset($info['title'])) {
      $items["boxes-boxes_add__$key"] = array(
        'module' => 'boxes',
        'delta' => "boxes_add__$key",
        'weight' => -10,
        'region' => false,
        'label' => $info['title'],
        'block_config_path' => "cp/osboxes/nojs/boxes_add__{$key}/configure",
      );
      if (is_array($plugins[$key]['tags']) && count($plugins[$key]['tags'])) {
        $items["boxes-boxes_add__$key"]['tags'] = $plugins[$key]['tags'];
      }

      if ($info['factory_path']) {
        $items["boxes-boxes_add__$key"]['block_config_path'] = $info['factory_path']."/modal/box/$key";
      }
    }
  }

  /**
   * Block instances for this site
   */
  $boxes = boxes_load();
  foreach ($boxes as $box) {
  	if(!$box->delta) continue;
    $items["boxes-{$box->delta}"] = os_boxes_get_vsite_widget($box);
  }

  return $items;
}

/**
 * Return a widget array when passed a box instance
 */
function os_boxes_get_vsite_widget($box, $weight = 0, $region = false){
	ctools_include('plugins');
  $plugins = ctools_get_plugins('boxes', 'plugins');

	$a_wgt = array(
    'module' => 'boxes',
    'delta' => $box->delta,
    'weight' => $weight,
    'region' => $region,
    'label' => $box->description,
    'cache' => BLOCK_CACHE_CONTENT_CACHE,
	  'block_config_path' => "cp/osboxes/".($plugins[$box->plugin_key]['popup']?$plugins[$box->plugin_key]['popup']:'nojs')."/{$box->delta}/configure",
  );

  if (is_array($plugins[$box->plugin_key]['tags'])) {
    $a_wgt['tags'] = $plugins[$box->plugin_key]['tags'];
  }

  if (isset($plugins[$box->plugin_key]['icon_path'])) {
    $a_wgt['icon_path'] = $plugins[$box->plugin_key]['icon_path'];
  }

  if (is_a($box, 'os_boxes_modalframe')) {
    $a_wgt['block_config_path'] = $box->get_config_path();
  }

  return $a_wgt;
}

/**
 * Implementation of hook_menu().
 */
function os_boxes_menu() {

  $items['cp/osboxes/%ctools_js/%/configure'] = array(
    'title' => 'Configure this Widget',
    'page callback' => 'os_boxes_box_modal',
    'page arguments' => array( 2,3),
    'access callback' => 'cp_layout_box_configurable',
    'access arguments' => array(3),
    'type' => MENU_CALLBACK,
  );

  $items['osboxestest'] = array(
    'title' => 'somettite',
    'page callback' => 'os_boxes_test',
    'access callback' => TRUE

  );
  return $items;
}

function os_boxes_test(){
  //dpm(vsite_get_vsite());
  ctools_include('ajax');
  ctools_include('modal');

  ctools_modal_add_js();

  $output = ctools_modal_text_button('simplebox', 'cp/osboxes/nojs/simple', 'simplebox', 'context-button');

  return $output;
}

/**
 * Determine if this box has a form, return true if it does, false otherwise
 */
function cp_layout_box_configurable($delta){

  if ($delta && strpos($delta, 'boxes_add__') !== 0) {
  	//Box instance
    if ($box = boxes_load($delta)) {
      return ($box->options_form())?true:false;
    }
  }else{
  	//New Box
  	$plugin_key = str_replace('boxes_add__', '', $delta);
    if ($box = boxes_factory($plugin_key)) {
      return ($box->options_form())?true:false;
    }
  }
  return false;
}

/**
 * A modal callback for configuring a box.
 */
function os_boxes_box_modal($js = NULL, $delta){
  module_load_include('inc', 'boxes', 'boxes.admin');
  module_load_include('inc', 'boxes', 'plugins/boxes_box');

  $b_newbox = (strpos($delta,"boxes_add__") === 0);

  if($b_newbox){
    $plugin_key = str_replace('boxes_add__', '', $delta);
    $delta = os_boxes_create_delta();
	  $box = boxes_factory($plugin_key, array(
	    'delta' => $delta
	  ));
  }else{
  	$box = boxes_load($delta);
  }

  // Fall back if $js is not set.
  ctools_include('form');
  if (!$js) {
    $form_state = array('box' => $box);
    if (module_exists('modalframe')) {
      modalframe_child_js();
    }
    return ctools_build_form('boxes_box_form', $form_state);
  }

  ctools_include('modal');
  ctools_include('ajax');


  $form_state = array(
    'box' => $box,
    'plugin_key' => $box->plugin_key,
    'custom_action' => TRUE,
    'ajax' => 'TRUE',
    'no_redirect' => TRUE
  );

  $output = ctools_modal_form_wrapper("boxes_box_form", $form_state);

  if (empty($output)) {
    $output = array();
    $output[] = ctools_modal_command_dismiss();
  }
  else {
    $output[] = ctools_ajax_command_after('#modal-content #edit-submit','<input class="form-submit close" onClick="$(\'div.modal-header a.close\').click(); return false;" value="Cancel" />');
  }

  if(isset($form_state['js commands']) && is_array($form_state['js commands'])){
  	$output = array_merge($form_state['js commands'],$output);
  }

  ctools_ajax_render($output);
}

function os_boxes_create_delta() {
    $identifier = (module_exists('spaces') && $space = spaces_get_space()) ? "{$space->type}-{$space->id}" : 'box';
    $hash = boxes_create_hash($identifier);
    $delta = $identifier . "-" . $hash;
    return $delta;
}

function os_boxes_form_alter(&$form, &$form_state) {
  if (isset($_GET['modal']) && isset($_GET['box'])) {
    $box = boxes_load($_GET['box']);
    if (empty($box)) {
      // GET[box] wasn't a delta. must be a plugin key
      $box = boxes_factory($_GET['box']);
    }

    $box_form = array(
      '#tree' => true,
      'plugin_key' => array(
        '#value' => $box->plugin_key,
        '#type' => 'value',
      ),
      'delta' => array(
        '#value' => $box->delta,
        '#type' => 'value',
      ),
      'description' => array(
        '#value' => $box->description,
        '#type' => 'value',
      ),
      'title' => array(
        '#value' => $box->title,
        '#type' => 'value',
      ),
    );

    $form['box'] = $box_form;
    if (isset($form['buttons'])) {
      $form['buttons']['submit']['#submit'][] = 'os_boxes_modalframe_form_submit';
    }
    else {
      $form['#submut'] = 'os_boxes_modalframe_form_submit';
    }
  }
}

function os_boxes_modalframe_form_submit(&$form, &$form_state) {
  $form_state_box = $form_state;
  $form_state_box['values'] = $form_state_box['values']['box'];
  $form_state_box['values']['nid'] = $form_state['nid'];
  $form_state_box['values']['path_edit'] = 'node/'.$form_state['nid'].'/edit';
  $form_state_box['values']['path_display'] = 'node/'.$form_state['nid'];
  $form_state_box['values']['title'] = $form_state_box['values']['description'] = $form_state['values']['title'];
  if (!isset($form_state_box['values']['delta'])) {
    $form_state_box['values']['delta'] = os_boxes_create_delta();
  }
  boxes_box_form_submit($form, $form_state_box);

  // replace the old element with the new one
  $box = os_boxes_modalframe::$latest;
  ctools_include('ajax');
  $args = array(
    ctools_ajax_command_replace("div#cp-settings-layout dd#boxes-boxes_add__{$box->plugin_key}", theme('vsite_layout_cp_widget', "boxes-{$box->delta}", os_boxes_get_vsite_widget($box))),
		array('command' => 'updateLayoutForm', 'warning' => true),
  );
  modalframe_child_js();
  modalframe_close_dialog($args);
  modalframe_form_submit($form, $form_state);
  $form['#redirect'] = false;
}

<?php

include_once('openscholar_front.features.inc');

/**
 * Implementation of hook_menu_alter
 * We need to do some stuff immediately after 
 * the installation if finished; Alter the 'node' callback
 */
function openscholar_front_menu_alter(&$items){
  $items['node']['page callback'] = 'openscholar_front_osboot';
}

function openscholar_front_osboot(){
  $scholar_installed = variable_get('scholar_installed', 0);

  if (! $scholar_installed) {
  	module_load_include('inc', 'openscholar_front', 'openscholar_front_osboot.inc');

    //_scholar_testingcontent();
    _vsite_filefield_paths_config();
    _vsite_global_taxonomy();
    _vsite_flags_boot();

    // set some default variables
    _vsite_variables_default();

    //Create Vsite Taxonomies
    _vsite_object_create_taxonomys();

    variable_set('scholar_installed', 1);
    variable_set('site_frontpage', 'welcome');
  }
  
  drupal_goto('welcome');

  //
  //render the page as defined by the current profile
  //

  $s_path = variable_get('scholar_home_menu_entry',false);
  if ($s_path && $s_result = menu_execute_active_handler($s_path)) {

  	if(!in_array($s_result,array(MENU_ACCESS_DENIED,MENU_NOT_FOUND))){
  	  drupal_set_title(variable_get('scholar_home_page_title', 'OpenScholar'));
  	  return $s_result;
  	}
  }

  drupal_set_title('OpenScholar');
  return node_page_default();
}

function openscholar_front_menu(){
  $items = array();
  // nodeautocomplete callback for scholar
  $items['welcome'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Scholars\' Web Sites Project',
    'page callback' => 'openscholar_front_welcome',
    'access arguments' => array(
      'access content'
    ),
    );
  
  return $items;
}

function openscholar_front_welcome(){
  return '';
}


/**
 * Implementation of hook_block().
 */
function openscholar_front_block($op = 'list', $delta = 0) {
  switch ($op) {
    case 'list':
      $info = array(
        'top_links' => array('info' => t('OpenScholar: Top links')),
        'site_info' => array('info' => t('OpenScholar: Site info')),
        //'search' => array('info' => t('OpenScholar: Search form')),
      );
      if (module_exists('admin')) {
        $info = $info + array(
          'book' => array('info' => t('Atrium: Book')),
          'book_all' => array('info' => t('Atrium: Book (all)')),
        );
      }
      return $info;
    case 'view':
      $function = "_openscholar_front_block_{$delta}";
      if (function_exists($function)) {
        return call_user_func($function);
      }
      break;
  }
}

function _openscholar_front_block_top_links(){
  $block = array();
  $block['subject'] = t('');
  $block['content'] = openscholar_front_getyoursitebutton();
  return $block;
}

function _openscholar_front_block_site_info(){
  $block = array();
  $block['subject'] = t('');
  $block['content'] = '<h2>' . variable_get('site_name', 'OpenScholar') . '</h2>';
  return $block;
}

/**
 * Implementation of template_preprocess_hook()
 */
function openscholar_front_getyoursitebutton() {
  if (!module_exists('scholarregister')) return;
  global $user;

  //we always allow admin and users with "vsite create access" to see site registration button.
  //and we allow anonymous users to create a new user account and new site
  if ( node_access('create', variable_get('scholar_content_type', 'vsite' )) || in_array('anonymous user', $user -> roles)) {
    $allow = TRUE;
  }

  // all authenticated users
  else{
    // site-owners
    if ($vsites = vsite_get_vsite_by_owner($user->uid)){
      $allow = scholarregister_vsite_exists_access($vsites);
      $site_link = (count($vsites) > 1) ? 'user' : $vsites[0] -> purl;
    }
    //  non-site owners
    else{
      $allow = TRUE;
    }
  }
  //link for front page button
  return  ($allow) ? l('Get your web site!', 'site/register') : l('Go to your site', $site_link);
}
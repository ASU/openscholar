<?php


/**
 * Implementation of hook_form_alter()
 */
function iqss_pinserver_register_form_alter(&$form, $form_state, $form_id){ //dpm($form);
  //add the submit function for pinserver
  if ($form_id == 'scholarregister_signup_form'){
    $path = drupal_get_path('module', 'iqss_pinserver_register');
    drupal_add_css($path .'/iqss_pinserver_register.css', 'module', 'all', FALSE);    
 
    
    //add submit function
    $form['#submit'][] = 'iqss_pinserver_register_submit';

    // _user_password_dynamic_validation();
    unset($form['submit']['#attributes']);
    //place domain at bottom of form
    $form['domain']['#weight'] = 10;

    //change email field description
    $form['mail']['#description'] =  t('A valid e-mail address is required. All e-mails from the Scholar Web Sites Project will be sent to this address.');

     //if user is superuser then load additional fields
  if (user_access('create vsites')){
    $form['huid'] = array(
    '#type' => 'textfield',
    '#size' => 45,
    '#title' => t('Harvard ID'),
    '#required' => TRUE,
    '#description' => t('Optional: Enter the %harvard ID of the web site owner', array(
    '%harvard' => 'Harvard'
    )),
    );
  return;
  }
    
    //add dynamic password validation
    _user_password_dynamic_validation();

    // password field
    $form['password'] = array(
    '#type' => 'password_confirm',
    '#size' => 35,
    '#required' => TRUE,
    '#description' => 'Create a password for your account.'
    );
  }
}

/**
 * Implementation of hook_mail_alter()
 */
function iqss_pinserver_register_mail_alter(&$message){

  if ($message['id'] == 'scholarregister_scholar-register-notify'){
    //altering the contents of the welcome email
    $params = iqss_pinserver_register_notify($message['user'], $message['vsite']);    
    $message['subject'] = $params['subject'];
    $message['body'] = $params['body'];
    }
}

function iqss_pinserver_register_notify($user, $vsite, $alter = TRUE){
  global $language;
  global $base_url;

  $params = array();
  $params['from'] = variable_get('site_mail', ini_get('sendmail_from'));

  $params['subject'] = t("Your Scholars' Web Site has been created", array(
  '!site_name' => variable_get('site_name', 'Scholar\'s Web Sites Project')
  ));

  $domain  =  $vsite -> purl; // TODO : What about custom domain ?? $user ->domain;
  $scholar_site_url =  url($domain, $options = array('absolute' => TRUE));
  $timestamp = time();

  $msg_variables = array(
  // '!personal_message' => strlen($s_personal_message) ? $s_personal_message . "\n================================================\n\n" : "",
  '!username' => $user->name,
  '!site' => variable_get('site_name', "Scholars' Web Sites Project"),
  '!scholar_site_url' => $scholar_site_url,
  '!login_url' => user_pass_reset_url($user),
  '!uri' => $base_url,
  '!uri_brief' => preg_replace('!^https?://!', '', $base_url),
  '!mailto' => $user->mail,
  '!date' => format_date(time(), 'medium', '', NULL, $message['language']->language),
  '!site_url' => url('node/' . $vsite->sid),
  '!scholar_edit_url' => url($vsite -> purl . "/cp/users/myaccount", array('absolute' => TRUE)),
  '!help_getting_started' => $base_url . '/help/vsitehelp/Getting-Started',
  '!help_features' => $base_url . '/help/vsitehelp/Features',
  '!help_settings' => $base_url . '/help/vsitehelp/Site-Settings',
  );

  $params['body'] = t("Hi !username,\n\nCongratulations, your new web site has been activated! Your web site url is: !scholar_site_url\n\nFor help with getting started, go to: !help_getting_started\n\nYour scholar web site comes with built-in features to allow you to post and manage a wide range of content. For more information regarding features, go to:\n  !help_features \n\nYou also have the ability to customize the look and layout of your site. The theme selector in the allows you to easily select a theme for your site. In addition you can further customize your theme by selecting a color scheme or \"flavor\". For more information regarding themes and other site settings, go to:  !help_settings\n\nWe hope you will enjoy your new web site.\n\nSincerely,\nThe !site Team", $msg_variables);
  
  return $params;
}



/**
 * Implementation of hook_menu_alter()
 */
function iqss_pinserver_register_menu_alter(&$items){
 //alter the page callback function  
  $items['site/register']['page callback'] = 'iqss_pinserver_register_form_access';
  $items['site/register']['module'] = 'iqss_pinserver_register';
  
  //values to remove
  $remove_values = array('page arguments', 'file');  
  foreach($remove_values as $val){
  unset($items['site/register'][$val]);
  }
 // dpm($items['site/register']);
}

/**
 * Checks if user has authenticated through the pinserver
 * before rendering the signup form
 */
function iqss_pinserver_register_form_access(){//unset($_SESSION['pinserver']);
/*  print_r($_SESSION);
print($_SESSION['pinserver']['reg_time'] . ' - ');
  print($_SESSION['pinserver']['huid']);die;*/
  $inc_file = drupal_get_path('module', 'scholarregister') . '/' . 'scholarregister.pages.inc';
  include_once($inc_file);

  //first make sure pinserver settings are saved  path to .gnupg directory exists
  $settings_info = pinserver_check_system_settings();
  switch ($settings_info['value']){
    case true;
    //proceed;
    break;
    case false:
      error_log($settings_info['message']);
      $support_mail = strlen(PIN_SUPPORT_CONTACT) ?  PIN_SUPPORT_CONTACT :  'scholar_dev@help.hmdc.harvard.edu';
      drupal_set_message(t("New web sites are not available at this time but should be available shortly.  Please check back within the hour or email us at:  !support_mail", array('!support_mail' => $support_mail))); 
            drupal_goto();
      break;
  }
  //check if user has logged in via the pinserver
  if (pinserver_check_status()){
    //see if the uid exists in pinvserver table, if so then user already has a vsite
    $uid = iqss_pinserver_register_check_row();
    //send the user somehwere, either to the registration form or to project home page
    return $go_somewhere = ($uid) ? iqss_pinserver_register_vsite_exists($uid)  :  drupal_get_form('scholarregister_signup_form');
  }
  else{
    //otherwise the user still needs to authenticate thorugh the pin server
    pinserver_redirect();
  }
}

/**
 * If this function is called then we know that the user already has a web site
 */
function iqss_pinserver_register_vsite_exists($uid){
  global $base_url;
  //remove the session vars
  pinserver_remove_session();
  $vsite = vsite_get_vsite_by_owner($uid);
  $message = 'You already have a registered web site.' . l(' Go there now.', $vsite->get_absolute_url());
  drupal_set_message(t("$message"));
  drupal_goto();
}


/**
 * Called when registration form is submitted
 */
function iqss_pinserver_register_submit($form, $form_state){
  //new user and vsite should have already been created, check to make sure the user information is present
  if (!isset($form_state['new_user'] ->uid) || $form_state['new_user'] ->uid == '0'){
    error_log("WARNING: The module could not insert the new user information into the database because
  the user information was not supplied.");
    return;
  }
  //if user information is present, then add user info to the database
  else{

    iqss_pinserver_register_add_row($form_state['new_user'] ->uid);

    // log user in
    global $user;
    $user = $form_state['new_user'];
    watchdog('user', 'Session opened for %name.', array('%name' => $user->name));
    // Update the user table timestamp noting user has logged in.
    // This is also used to invalidate one-time login links.
    $user->login = time();
    db_query("UPDATE {users} SET login = %d WHERE uid = %d", $user->login, $user->uid);

    // Regenerate the session ID to prevent against session fixation attacks.
    sess_regenerate();

    //user_module_invoke('login', $edit, $user);   //need to call hook_user here???
 
    //remove pinserver session vars
    pinserver_remove_session();
    
    //need to clear messages???
    drupal_get_messages();
    //set message
    drupal_set_message(t("Your web site registration was successful! Your site is live and you are now logged in")); // TODO : improve ths message
 
    //re-direct user to home page
    drupal_goto($form_state['vsite'] -> purl . '/home');
  }
}

/**
 * Function to write record to pinserver table
 * @param unknown_type $uid
 */
function iqss_pinserver_register_add_row($uid){
  $object = new stdClass();
  $object->uid = (int)$uid;
  $object->huid= $_SESSION['pinserver']['huid'];
  $object->reg_time = time();
  drupal_write_record('iqss_pinserver_register', $object);
}

/**
 * Function to check if user exists in pinserver table and returns uid
 * @param unknown_type $uid
 * @return user id
 */
function iqss_pinserver_register_check_row(){
 return db_result(db_query("SELECT uid FROM {iqss_pinserver_register} WHERE huid = '%s'", $_SESSION['pinserver']['huid'] ));
}

/**
 * Implementation of hook_user()
 */
function iqss_pinserver_register_user($op, &$edit, &$account, $category = NULL){
  global $user;
  switch($op){
    case 'login':
        //nothing here right now
      break;
    case 'delete':
      $sql_delete = db_query("DELETE FROM {iqss_pinserver_register} WHERE uid = %d", (int)$account->uid);
      break;
  }
}

/**
 * API Function - returns Harvard id when passed Drupal user id
 */
function iqss_pinserver_register_get_huid($uid){
return db_result(db_query("SELECT huid{iqss_pinserver_register} WHERE uid = %d", (int)$uid));
}

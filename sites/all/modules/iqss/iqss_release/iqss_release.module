<?php

//////////////////////////////////////////
// UPDATE FUNCTIONS  
// Scholar - Beta 2
// Functions should return (bool) success
//////////////////////////////////////////


/**
 * Enable the Pinserver modules
 */
function iqss_release_release_pinserver() {
  
	$a_enable = array();
  if(!module_exists('pinserver')) $a_enable[] = 'pinserver';
  if(!module_exists('iqss_pinserver_register')) $a_enable[] = 'iqss_pinserver_register';
   
  if(count($a_enable)) module_enable($a_enable);
  
  
  return "Scholar Pinserver / Pin Register - ".(count($a_enable)?"Module(s) Enabled":"Nothing to do");
}

/**
 * Enable the scholar_events module
 */
function iqss_release_relase_scholar_events() {
  
  if(!module_exists('scholar_events')){
    
    if(!module_exists('calendar')) module_enable(array("calendar"));
    if(!module_exists('litecal')) module_enable(array("litecal"));
    
    module_enable(array("scholar_events"));
  }
  
  return "Scholar Events - Module Enabled";
}

/**
 * Update to the new feed engine
 */
function iqss_release_install_scholar_reader() {
	
  if(!module_exists('scholar_reader')){
    module_disable(array("scholar_feeds"));
    drupal_uninstall_module("scholar_feeds");
    
    if(!module_exists('data')) module_enable(array("data"));
    if(!module_exists('feeds')) module_enable(array("feeds"));
    if(!module_exists('feeds_defaults')) module_enable(array("feeds_defaults"));
    module_enable(array("scholar_reader"));
  }
  
  return "Scholar Reader - Module Enabled";
}

/**
 *  Change the preset from vsite to scholar
 */
function iqss_release_change_preset_to_scholar() {
  // change preset type to "scholar" for existing sites
  return db_query("UPDATE {spaces} SET preset = 'scholar'  WHERE preset = 'vsite'");
}

/**
 * Enable the scholar_front module
 */
function iqss_release_enable_module_scholar_front() {
  
	module_rebuild_cache();
  module_enable(array("scholar_front"));
  
  //disable the old module
  module_disable(array("vsite_front"));
  drupal_uninstall_module("vsite_front");
  
  return "Scholar Front - Module Enabled";
}

/**
 * flags web sites to be pushed in the front (featured sites)
 */
function iqss_release_add_featured_vsites_flags(){
  $owners = array (
    28, // Chris Winship
    9,  // Beth Simmons
    14, // Jeffry Friedden
    671, // James Robinson
    21,  //Steve Levitsky
    6,  // Maria Polinsky
    8, // robert Bates
    1, // Ken Shepsle
  );
  
  $flag = flag_get_flag('featured_web_sites') or die('no "featured_web_sites" flag defined');

  foreach ($owners as $nid){
    $flag->flag('flag', $nid);
  }
  
  return true;
}

/**
 * Add the taxonomies that are associated with a vsite object
 */
function iqss_release_add_vsite_taxonimies(){
	module_load_include('inc', 'vsite', 'includes/vsiteboot');
  
  _vsite_object_create_taxonomys();
  
  return true;
}

/**
 * Set the default domain, we will assume you are installing on the default domain, otherwise you will need to change this
 */
function iqss_release_set_default_domain(){
	
  //Set the default domain 
  // ie.) scholar.iq.harvard.edu in prod
  //      dev.whatever or localhost for dev
  variable_set('purl_base_domain','http://'.str_replace('http://','',$_SERVER['HTTP_HOST']));
  
  return "Default domain updated and set to ".$_SERVER['HTTP_HOST'];
}

/**
 * Update the filefield settings so that file alias' will 
 * be used for files displayed on a node
 */
function iqss_release_update_filefield_settings(){
	
  //set the "upload" paths
  $types = og_get_types('group_post');
  
  $file_alias = array(
    'value' => '[space-og-path-raw]/files/[filefield-onlyname-original].[filefield-extension-original]', 
    'tolower' => 0, 
    'pathauto' => 0, 
    'transliterate' => 0,
    'display' => 1,
  );
  
  foreach ( $types as $type ) {
    db_query("UPDATE {filefield_paths} SET filealias = '%s' WHERE type = '%s' ", serialize($file_alias), $type);
  }
  
  return "the upload file alias settings were updated in the filefield_paths table" ;
}

/**
 * Enable the 'auto_nodetitle' module as we will be using it in scholars in the future
 */
function iqss_release_enable_auto_nodetitle(){
	if(!module_exists('auto_nodetitle')) module_enable(array("auto_nodetitle"));
	
	return "Auto Node Title - Module Enabled";
}
//////////////////////////////////////////
// UPDATE Handler
//////////////////////////////////////////

//Run all of the updates
function iqss_release_handle_updates($s_preset){
	
	$a_updates = _iqss_release_get_updates();
	$a_preset_updates = array_key_exists($s_preset,$a_updates)?$a_updates[$s_preset]:array();
	
	$s_status = count($a_preset_updates)?"":"No updates found to run for preset [$s_preset].";
	
  foreach ($a_updates as $s_func) {
  	$b_return = $s_func();
  	$s_status .= "Update: $s_func   Status:  ".(is_bool($b_return)?(($b_return)?"Passed":"Failed"):$b_return)."\n";
  }
  
  dpm($s_status);
}

//The functions to be run (in order)
function _iqss_release_get_updates(){
	return array(
	  'scholar' => array(
	    'iqss_release_add_featured_vsites_flags',//Add Featured vsites flags
		  'iqss_release_add_vsite_taxonimies', //Add Vsite Taxonomies
		  'iqss_release_set_default_domain', //Set the default domain
		  'iqss_release_change_preset_to_scholar', // change preset type to "scholar" for existing sites
		  'iqss_release_enable_module_scholar_front', //Enable the scholar_front module
		  'iqss_release_install_scholar_reader',  //Installs scholar reader and disables scholar feeds
		  'iqss_release_relase_scholar_events', //Enable the scholar events module
      'iqss_release_update_filefield_settings', //Update the filefield settings so that file alias' will be used for files displayed on a node
	    'iqss_release_enable_auto_nodetitle', //Enable the 'auto_nodetitle' module as we will be using it in scholars in the future
	    'iqss_release_release_pinserver', //Enable the pinserver and pinserver register modules
	  ),
	  'projects' => array(
	    'iqss_release_release_pinserver', //Enable the pinserver and pinserver register modules
      'iqss_release_update_filefield_settings', //Update the filefield settings so that file alias' will be used for files displayed on a node
    ),
  );
}
<?php

/**
 * Implementation of hook_strongarm()
 */
function scholar_register_strongarm(){
  $conf = array();
  //allow users to register accounts
  $conf['user_register'] = 1;  
  return $conf;
}

/**
 * Implementation of hook_form_alter()
 */
function scholar_register_mail_alter(&$message){
  //echo "<pre>"; print_r($message); die;
   if ($message['id'] == 'user_register_no_approval_required') { 
     //$message['to'] ='jweiner@iq.harvard.edu'; //TODO remove this after testing 
     $params = scholar_register_notify_user($message['params']['account']);
     $message['body'] = $params['body'];     
  }
}

/**
 * Implementation of hook_user()
 */
function scholar_register_user($op, &$edit, &$account, $category = NULL){
  switch ($op) {
    case 'insert':
      // create the site
      $vsite = scholar_register_vsite_create($edit['name'], $edit['mail'], $edit['domain']);
      break;

    case 'login' :
      // if is a site owner ...
      if ($vsite = scholar_register_siteowner_path($account)) {
        //For login lets send them to thier domain
        if($vsite->settings['generic']['vsite_domain']) $vsite->purl_provider = 'vsite_domain';

        // if is logging in for the first time or need to reset password
        if (($account->login == 0) || (arg(0) == 'user' && arg(1) == 'reset')) {
          purl_goto("cp/users", array(
          'purl' => array(
          'provider' => $vsite->purl_provider,
          'id' => $vsite->sid
          )
          ));
        }
        else {
          // redirect them to their home page
          $vsite->redirect('home');
        }
      }
      break;
  }
}

/**
 * Implementation of hook_form_alter()
 */
function scholar_register_form_alter(&$form, $form_state, $form_id){
    
    if ($form_id == 'user_register'){

    $path = drupal_get_path('module', 'scholar_register');
    drupal_add_css($path .'/scholar_register.css', 'module', 'all', FALSE);      
    
        //change email field description
    $form['mail']['#description'] =  t('A valid e-mail address is required. All e-mails from the Scholar Web Sites Project will be sent to this address.');    
    
      global $base_url;
  // domain name
  $form['domain'] = array(
      '#type' => 'textfield', 
      '#title' => t('Your Domain Name'), 
      '#required' => TRUE, 
      '#field_prefix' => $base_url . '/', 
      '#size' => 20, 
      '#weight' => 10,
      '#default_value' => $form_values['name'], 
      '#description' => t('Example the choice of \'jdoe\' would result in domain name: %site. Your choice must be at least four characters long, and comprise of alphanumeric characters only.', array(
          '%site' => $base_url . '/jdoe' 
      )), 
  );

      //check if content profile settings are to be used, remove them from the form if so
    $settings = variable_get('content_profile_vsite_users_profile', array()); 
    if ($settings['registration_use'] == 1){
      $profile_fields = array_keys(content_fields($field_name = NULL, 'vsite_users_profile'));
      foreach($profile_fields as $field){
        if (isset($form[$field])) {
          $form[$field] = array();
        }
      }
    }  
    $form['#validate'][] = 'scholar_register_signup_form_validate';
    $form['#submit'][] = 'scholar_register_signup_form_submit';
    }  	
}

/**
 * Validation callback for the registration form
 */
function scholar_register_signup_form_validate($form, &$form_state){

  //domain name validation
  $modifier = array(
  'provider' =>'spaces_og',
  'value' => $form_state['values']['domain'],
  'id' =>NULL,
  );

  if (!purl_validate($modifier)){
    form_set_error('domain', 'The domain name you have entered is invalid or in use.');
  }
}

/**
 * The submit handler for the registration form
 */
function scholar_register_signup_form_submit($form, &$form_state) {
  // add scholar admin role to user account
  $user = user_load(array('name' => $form_state['values']['name']));
  
  install_include(array('user'));
  $rid = install_get_rid(variable_get('scholar_manager_role', 'scholar admin'));
  install_add_user_to_role($user -> uid, $rid);

  //modify the output message form drupal core
  $original = 'Your password and further instructions have been sent to your e-mail address.';
  $replace = 'Your site has been created successfully! An email has been sent to you with your account details.';
  scholar_register_message_replace($original, $replace);
}
 

/**
 * Function to replace messages output by drupal_set_message()
 */
function scholar_register_message_replace($original, $replace, $type = 'status'){
  if (!empty($_SESSION['messages'][$type])){
    foreach ($_SESSION['messages'][$type] as $key => $msg){
      if ($msg == $original){
        $_SESSION['messages'][$type][$key] = $replace;
      }
    }
  }
}

/**
 * Function returns vsite object when passed user object if user owns vsite
 * otherwise returns false
 */
function scholar_register_siteowner_path($account){
  // if is a site owner redirec to her site home page
  //dpm($account -> og_groups);
  if (isset($account->og_groups) && is_array($account->og_groups)) {
    foreach ( $account->og_groups as $group ) {
      if ($group['uid'] == $account->uid) {
        $vsite = spaces_load("og", $group['nid']);
        return $vsite;
      }
    }
  }
  return false;
}

/**
 * Generate email content to send to user creating new web site
 */
function scholar_register_notify_user($user){
  global $language;
  $params = array();
  $from = variable_get('site_mail', ini_get('sendmail_from'));
  
  $params['subject'] = t("A Scholars' Web Site has been created for you", array(
    '!site_name' => variable_get('site_name', 'Scholar\'s Web Sites Project')
  ));

  $scholar_site_url =  url( $user->domain, $options = array('absolute' => TRUE));
  $timestamp = time();
  
  $msg_variables = array(
    // '!personal_message' => strlen($s_personal_message) ? $s_personal_message . "\n================================================\n\n" : "",
    '!username' => $user->name,
    '!site' => variable_get('site_name', "Scholars' Web Sites Project"),
    '!scholar_site_url' => $scholar_site_url,
    //'!login_url' => url("user/reset/$user->uid/$timestamp/". user_pass_rehash($user->pass, $timestamp, $user->login), array('absolute' => TRUE)),
    '!login_url' => user_pass_reset_url($user),
    '!uri' => $base_url,
    '!uri_brief' => preg_replace('!^https?://!', '', $base_url),
    '!mailto' => $user->mail,
    '!date' => format_date(time(), 'medium', '', NULL, $message['language']->language),
    '!login_uri' => url('user', array(
      'absolute' => TRUE,
      'language' => $message['language']
    )),
    '!site_url' => url('node/' . $vsite->sid),
    '!edit_uri' => url('user/' . $user->uid . '/edit', array(
      'absolute' => TRUE,
      'language' => $message['language']
    )),
    '!scholar_edit_url' => url($vsite -> purl . "/cp/users/myaccount", array('absolute' => TRUE)),
    '!password' => $password
  );


  $body .= t("Hi !username,\n\nCongratulations, your web site at !site has been activated!\n\nYour web site url is !scholar_site_url \n\nYou may now log in by clicking on this link or copying and pasting it in your browser: \n\n !login_url \n\nThis is a one-time login, so it can be used only once. After logging in, you will be redirected to !scholar_edit_url so you can change your password. Once you have set your own password, you will be able to log in to !login_uri in the future with username:\n\n!username\n\nWe hope you will enjoy your new web site.\n\nSincerely,\nThe !site Team", $msg_variables);

  $params['body'] = $body;

  return $params;
}


/**
 * Create a scholar vsite
 */
function scholar_register_vsite_create($name, $mail, $domain){
  vsite_include('vsiteapi');
  return vsite_vsite_create($name, $mail, $domain);
}


/** Validation functions **/

function scholar_register_validate_name($name){
  if ($error = user_validate_name($name)){
    return $error;
  }
  elseif (_scholar_register_domain_exists($name) || _scholar_register_name_exists($name)){
    return "username \"$name\" is taken";
  }
}

function scholar_register_validate_domain($domain){
  if ($error = user_validate_name($domain)){  // the same validation as the username
    return $error;
  }
  elseif (_scholar_register_domain_exists($domain) || _scholar_register_name_exists($domain)){
    return "domain \"$domain\" is taken";
  }
}

function _scholar_register_domain_exists($domain){
  // check domain availability
  $query = "SELECT value FROM {purl} WHERE value='%s'";
  $existing_purl = db_result(db_query($query, $domain));

  return $existing_purl ? TRUE : FALSE;
}

function _scholar_register_name_exists($name){
  // check domain availability
  $query = "SELECT name FROM {users} WHERE name='%s'";
  $existing_name = db_result(db_query($query, $name));

  return $existing_name ? TRUE : FALSE;
}

function _scholar_register_mail_exists($mail){
  // check domain availability
  $query = "SELECT mail FROM {users} WHERE mail='%s'";
  $existing_mail = db_result(db_query($query, $mail));

  return $existing_mail ? TRUE : FALSE;
}


function _scholar_register_vsite_error(){
  return ctools_ajax_command_replace('#submit-suffix', 'The web site cannot be created. Please fix the errors and try again.');
  //ctools_ajax_render($commands);
}
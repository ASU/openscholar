<?php

/**
 * extend class space_og. We would want to override 
 * some of the methods. 
 * TODO funciont spaces_load in spaces.module is modified
 * because it's initiating an object of type space_og 
 * How do you tell it to initiate an object of class "scholar"
 * How to find all the subclasses of space_og class ?
 * TODO I submitted for this http://drupal.org/node/511914
 * @see scholar_spaces_types_alter
 */


class scholar extends space_og implements space {

  function redirect($op = 'home'){
    switch ($op) {
      case 'home' :
        if (! empty($this->purl)) {
          // Use the menu path of the selected feature as homepage
          $home = 'home';
          if (menu_get_item($home)) {
            purl_goto($home, array(
              'purl' => array(
                'provider' => 'spaces_og', 
                'id' => $this->sid 
              ) 
            ));
          }
          
          // The previous checks fail, there is no valid homepage set
          if ($this->admin_access() && user_access('configure spaces features')) {
            drupal_set_message(t("Please setup your group by choosing a homepage setting."));
            purl_goto("cp/settings/features", array(
              'purl' => array(
                'provider' => 'spaces_og', 
                'id' => $this->sid 
              ) 
            ));
          }
        }
        else {
          drupal_goto('node/' . $this->sid . '/edit');
        }
        menu_set_active_item('spaces-access-denied');
        break;
      case 'features' :
        purl_goto("cp/settings/features", array(
          'purl' => array(
            'provider' => 'spaces_og', 
            'id' => $this->sid 
          ) 
        ));
        break;
    }
  }
}

/**
 * Implements hook spaces_types_alter
 *
 * @see http://drupal.org/node/511914
 */
function scholar_spaces_types_alter(&$items){
	$items['og']['class'] = 'scholar';
}


function scholar_menu(){
  $items = array();
  $items['admin/settings/scholar'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Scholar settings',
    'description' => 'Setting for scholars.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('scholar_settings_form'),
    'file' => 'scholar.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'weight' => 10,   
  );
  
  $items['admin/settings/scholar/settings'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('scholar_settings_form'),
    'file' => 'scholar.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'weight' => 0,
  );
  return $items;
}

/**
 * hook strongarm
 */
function scholar_strongarm(){
 include_once('scholar.overrides.inc');
    
  $conf = array();
  //replacing scholar or vsite terms with more common terms using stringoverrides module
  $conf['locale_custom_strings_en'] = scholar_string_overrides();
  
  return $conf;
}

/**
 *  Hook preproces_page
 */
function scholar_preprocess_page(&$vars) {
  // need to know if there is anything in the navbar for css theming
  $body_class_extra = $vars['navbar'] ? ' navbar-on' : ' navbar-off';
    $vars['body_classes'] .= $body_class_extra;
}

/**
 * Implementation of hook_spaces_settings().
 */
function scholar_spaces_settings() {
  return array(
   'site' => array(
      'class' => 'scholar_setting_site',
      'file' => drupal_get_path('module', 'scholar')  .'/settingsinc/scholar.settings.site.inc',
    ),
   );
}

/**
* Implementation of hook_mail_alter().
*/
function scholar_mail_alter(&$message) {
  
	switch ($message['id']) {
    //Edit the UCreate Email Message
		case 'ucreate_ucreate-create':
      	$params['subject'] = t('[!site_name] An account has been created for you', array('!site_name' => variable_get('site_name', 'Scholar')));
      	$a_body_parts = split("================================================",$message['body'],2);
      	$s_personal_message = (count($a_body_parts) == 2)?trim($a_body_parts[0]):"";
      	
      	//Get the just created user
      	$n_new_user = db_result(db_query('SELECT u.uid FROM {users} u ORDER BY u.created DESC LIMIT 1'));
      	$o_user = user_load($n_new_user);
     	  $password = user_password();
     	  $edit = array('pass' => $password);
     	  user_save($o_user,$edit);
     	  
      	$a_msg_variables = array(
      	  '!personal_message' => strlen($s_personal_message)?$s_personal_message."\n================================================\n\n":"",
			    '!username' => $o_user->name,
			    '!site' => variable_get('site_name', 'Drupal'),
			    '!login_url' => user_pass_reset_url($o_user),
			    '!uri' => $base_url,
			    '!uri_brief' => preg_replace('!^https?://!', '', $base_url),
			    '!mailto' => $o_user->mail,
			    '!date' => format_date(time(), 'medium', '', NULL, $message['language']->language),
			    '!login_uri' => url('user', array('absolute' => TRUE, 'language' => $message['language'])),
			    '!edit_uri' => url('user/'. $o_user->uid .'/edit', array('absolute' => TRUE, 'language' => $message['language'])),
      	  '!password' => $password,
			  );
      	$message['body'] = t("!personal_message\n !firstname, \n\nA site owner at !site has created an account for you. You may now log in to !login_uri using the following username and password:\n\nusername: !username\npassword: !password\n\nYou may also log in by clicking on this link or copying and pasting it in your browser:\n\n!login_url\n\nThis is a one-time login, so it can be used only once.\n\nAfter logging in, you will be redirected to !edit_uri so you can change your password.\n\n\n--  !site team", $a_msg_variables);
      	
    break;
  }

}


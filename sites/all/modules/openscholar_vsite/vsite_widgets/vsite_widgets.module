<?php

include_once('vsite_widgets.features.inc');

/**
 * hook block
 */
function vsite_widgets_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0]['info'] = t('Scholar site shield');
    $blocks[1]['info'] = t('Scholar site search');
    $blocks[2]['info'] = t('ShareThis Button - Allows you to share posts using popular online services');
    $blocks[3]['info'] = t('Google Translate');
    return $blocks;
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
       return vsite_widgets_shield();
      case 1:
       return vsite_widgets_search_widget();
      case 2:
      	return vsite_widgets_addthis();
      case 3:
      	return vsite_widget_googletranslate();
    }
  }
}

function vsite_widgets_search_widget(){
  if (! module_exists('search') || ! user_access('search content')) {
    return;
  }
  $block['content'] = drupal_get_form('search_form');
  return $block;
}

/**
 * Adds the addthis social networking link
 * @return array
 */
function vsite_widgets_addthis(){
  if (! module_exists('addthis') || ! user_access('view addthis')) {
    return;
  }

  $addthis_widget_type = variable_get('addthis_widget_type', 'addthis_button');
  $block['subject'] = t(''); //t('AddThis');
  $block['content'] = theme($addthis_widget_type);
  return $block;

}

/**
 * A widget to allow translation of a page
 * @return array
 */
function vsite_widget_googletranslate(){
  global $language;
	$lang = ($language->language)?$language->language:'en';

	$block['subject'] = t(''); //Blank
  $block['content'] = '<div id="google_translate_element"></div><script>
												function googleTranslateElementInit() {
												  new google.translate.TranslateElement({
												    pageLanguage: \''.$lang.'\'
												  }, \'google_translate_element\');
												}
												</script><script src="http://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>';
  return $block;

}

function vsite_widgets_shield(){

	$output = '';
	$shields = variable_get('vsite_shields_shield_info', array());
	if(!vsite_widgets_shield_access() || empty($shields)) {
		return $output;
	}//Disabled?

	$s_filename = variable_get('vsite_shields_shield', '');
	if ($s_filename) {
	  $block['subject'] = t('');
	  $block['content'] = '<div id="scholar-shield"><img src="'.url($s_filename, array('alias' => TRUE)).'" /> </div>';

	  return $block;
	}
	return $output;
}

/**
 * Access Callback for the shield widget
 * @param $widget //Access callbacks are passed the widget array
 */
function vsite_widgets_shield_access($widget = false){

  return !variable_get('vsite_design_disable_shield', FALSE);
}

function vsite_widgets_vsite_widgets(){

	return array(

    'vsite_widgets_2' => array(
      'module' => 'vsite_widgets',
      'delta' => '0',
      'weight' => 20,
      'region' => 'header_right',
      'status' => '0',
      'label' => 'Scholar site shield',
      'type' => 'context_ui',
	    'access callback' => 'vsite_widgets_shield_access'
    ),

   'vsite_widgets_3' => array(
      'module' => 'vsite_widgets',
      'delta' => '1',
      'weight' => -5,
      'region' => 'right',
      'status' => '0',
      'label' => 'Scholar search widget',
      'type' => 'context_ui',
    ),

    'vsite_widgets_5' => array(
      'module' => 'vsite_widgets',
      'delta' => '3',
      'weight' => 40,
      'region' => false,
      'status' => '0',
      'label' => 'Google Translate',
      'type' => 'context_ui',
    ),

    // Featured posts
    'views_vsite_featuredposts-block_1' => array(
      'module' => 'views',
      'delta' => 'vsite_featuredposts-block_1',
      'weight' => 0,
      'region' => false,
      'status' => '0',
      'label' => 'Featured posts',
      'type' => 'context_ui',
    ),
  );

}

/**
 * Implementation of hook flag_default_flags
 * @return array - default flag
 */
function vsite_widgets_flag_alter(&$flag){
  if (!($viste = vsite_get_vsite()) || $flag -> name !== 'featuredposts'){
    return;
  }
  vsite_include('vsiteapi');

  $types = vsite_content_types();

  if (count($types)){
    $flag -> types = array_keys($types);
  }
}

/**
 * Implementation of hook_link().
 */
function vsite_widgets_vsite_admin_link($type, $object){
  $links = array();
  global $user;
  //check font page settings here, only execute if front page setting equals flag
  if(!($vsite = vsite_get_vsite()) || !is_object($vsite)){
    return $links;
  }

  if (!($vsite->access_admin()) ||
      !flag_fetch_definition($type)){
    return $links;
  }

  // Get frontpage flags
  $flag = flag_get_flag('featuredposts');


  if (!$flag->applies_to_content_object($object)) {
    // Flag does not apply to this content.
    return false;
  }

  $content_id = $flag->get_content_id($object);
  // The flag links are actually fully rendered theme functions.
  // The HTML attribute is set to TRUE to allow whatever the themer desires.
  $links['flag-'. $flag->name] = array(
  'title' => $flag->theme($flag->is_flagged($content_id) ? 'unflag' : 'flag', $content_id),
  'html' => TRUE,
  );

  if (isset($links)) {
    return $links;
  }
}

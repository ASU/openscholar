<?php

/**
 * Implementation of hook_spaces_registry_alter().
 */
function vsite_layout_spaces_registry_alter(&$registry) {
  
  //Use our own context controller
  if(isset($registry['controllers']['context'])){
    $registry['controllers']['context']['plugin'] = "spaces_controller_vsite_context";
  }
}



/**
 * Implementation of hook_spaces_plugins().
 */
function vsite_layout_spaces_plugins() {
  $plugins = array();
 
  $plugins['spaces_controller_vsite_context'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'vsite_layout') .'/plugins',
      'file' => 'spaces_controller_vsite_context.inc',
      'class' => 'spaces_controller_vsite_context',
      'parent' => 'spaces_controller_context',
    ),
  );
  return $plugins;
}

/**
 * Implementation of hook_spaces_registry_alter().
 *
 * This will add the default blocks to the feature contexts for the space preset
 */
function vsite_layout_spaces_presets_alter(&$presets) {
	$space_preset = variable_get("spaces_preset_og", NULL);
	
	if($space_preset && isset($presets[$space_preset])){
		if(!isset($presets[$space_preset]->value['context'])) $presets[$space_preset]->value['context'] = array();
		
		$contexts = context_load();
		foreach ($contexts as $s_key => $context) {
			if(strtolower($context->tag) != 'feature') continue;
			$blocks = isset($context->reactions['block']['blocks'])? $context->reactions['block']['blocks']:array();
			vsite_layout_merge_default_blocks($blocks);
			
			if(is_array($blocks)){
			  $presets[$space_preset]->value['context'][$s_key.":reaction:block"]['blocks'] = $blocks;
			}
		}
		
	}
}


/**
 * Merge default blocks with passed blocks
 */
function vsite_layout_merge_default_blocks(&$blocks) {
  if(!is_array($blocks)) return;

  $default_blocks = module_invoke_all('vsite_widgets');
  $blocks = array_merge($default_blocks,$blocks);  //Everywhere plus the feature
  //Allow the theme to alter the default block regions
  vsite_layout_alter_theme_regions($blocks);

  uasort($blocks, 'vsite_layout_sort_block_by_weight');
}


/**
 * Custom sort by block weight
 */
function vsite_layout_sort_block_by_weight($a, $b) {
  $a = (array)$a;
  $b = (array)$b;
  
  if ($a['weight'] == $b['weight']) return 0;
  
  return ($a['weight'] < $b['weight']) ? -1 : 1;
}
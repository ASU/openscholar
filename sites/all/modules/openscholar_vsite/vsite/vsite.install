<?php

/**
 * Implementaton of hook_enable().
 */
function vsite_enable() {
  // Weight scholar to be after spaces_og
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE type = 'module' AND name = 'spaces_og'"));
  db_query("UPDATE {system} SET weight = %d WHERE name = 'vsite'", ($weight + 1));
  // all vsite* modules have weight higher than vsite // TODO

  $query =  "SELECT * FROM {system} WHERE type = 'module' AND name LIKE 'vsite_%'";
  $result = db_query($query);
  while ($data = db_fetch_object($result)){
    db_query("UPDATE {system} SET weight = %d WHERE name = '%s'", ($weight + 2), $data -> name);
  }
}


function vsite_install() {
  _install_vsite_menus();
}

function _install_vsite_menus() {
  $return = array();
  $t = get_t();

  $return[] = db_query("UPDATE {menu_custom}  SET title='%s', description = '%s' WHERE menu_name='%s'", $t('Primary menu'), $t('Primary menu for each scholar site.'), 'features');

  $return[] = db_query("INSERT INTO {menu_custom} (menu_name, title, description) VALUES ('%s', '%s', '%s')", 'scholar_secondary_menu', $t('Secondary menu'), $t('Side menu for each scholar site.'));

  return $return;
}

function vsite_update_6001(&$sandbox){
	return _install_vsite_menus();
}

function vsite_update_6002(&$sandbox){

	$res = array();
  module_rebuild_cache();

  // Enable openscholar_front module if need
  if(!module_exists('openscholar_front')){

    include_once('includes/install.inc');

    drupal_install_modules(array('openscholar_front'));
    $res[] = array(
      'success' => true,
      'query' => 'Installed dialog module and enabled it',
    );

  }

  db_query("UPDATE {system} SET status = 1 WHERE type = 'theme' and name = '%s'", 'openscholar_default');
  variable_set('theme_default', 'openscholar_default');

  //Set the home page to welcome
  variable_set('site_frontpage', 'welcome');

  return $res;

}

/**
 * Activity2 requires Trigger's weight be greater then Pathauto's
 * in order to produce proper aliased paths
 */
function vsite_update_6003(&$sandbox) {
  $res = array();
  $pathauto_weight = db_result(db_query("SELECT weight FROM {system} WHERE name = 'pathauto'"));
  db_query("UPDATE {system} SET weight = 2 WHERE name = 'trigger'");
  return $res;
}

/**
 * Some installs had filefield path alias inadvertantly turned on for several fields that should not have it
 * This will correct those image fields
 */
function vsite_update_6004(&$sandbox) {
  $res = array();

  $file_alias = array(
    'value' => '[space-og-path-raw]/files/[filefield-onlyname-original].[filefield-extension-original]',
    'tolower' => 0,
    'pathauto' => 0,
    'transliterate' => 0,
    'display' => 0,
  );

  db_query("UPDATE {filefield_paths} SET filealias = '%s' WHERE field IN('%s','%s','%s') " , array(serialize($file_alias) ,'field_person_photo', 'field_gallery_image', 'field_vsite_logo'));

  return $res;
}

function vsite_update_6005(&$sandbox) {
  $res = array();

  if (db_table_exists('spaces_settings')) {
    $result = db_query("SELECT * FROM {spaces_settings} WHERE id = 'generic'");
    while ($row = db_fetch_object($result)) {
      $value = unserialize($row->value);

      db_query("INSERT INTO {spaces_overrides} VALUES ('%s', '%s', 'variable', 'vsite_private', '%s')", $row->type, $row->sid, serialize($value['private_vsite']));

    }
    $res[] = array(
    	'success' => true,
      'query' => 'VSite Settings Migrated.'
    );
  }

  return $res;
}

function vsite_update_6006(&$sandbox) {
  $res = array();

  if (module_exists('strongarm')) {
    //this will revert any inadvertant strongarm values that have been saved in the database, this is
    //needed since the way strongarm works has changed
  	
    $vars = strongarm_vars_load(true,true);
    foreach ($vars as $name => $variable) {
      $default = ctools_get_default_object('variable', $name);
      if($default && $variable->value != $default->value){
        variable_del($name);
      }
    }
    strongarm_flush_caches();
    
    $res[] = array(
      'success' => true,
      'query' => 'Strongarm Settings Migrated'
    );
  }

  return $res;
}

/**
 * Switch from lightbox to shadowbox
 */
function vsite_update_6007(&$sandbox){

        $res = array();
  module_rebuild_cache();

  if(module_exists('lightbox2')){
    module_disable(array('lightbox2'));
  }

  // Enable shadowbox module if need
  if(!module_exists('shadowbox')){

    include_once('includes/install.inc');

    drupal_install_modules(array('shadowbox'));
    $res[] = array(
      'success' => true,
      'query' => 'Installed shadowbox module and enabled it',
    );

  }

  return $res;

}

/**
 * Add the new OS module that holds global configuration and settings
 * @param array $sandbox
 */
function vsite_update_6008(&$sandbox){

  $res = array();
  module_rebuild_cache();

  // Enable openscholar_front module if need
  if(!module_exists('os')){

    include_once('includes/install.inc');

    drupal_install_modules(array('os'));
    $res[] = array(
      'success' => true,
      'query' => 'Installed "Openscholar" module and enabled it',
    );

  }

  return $res;

}
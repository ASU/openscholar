<?php

include_once('vsite.features.inc');

/**
 * Implementation of hook_views_api().
 */
function vsite_views_api(){
  return array(
    'api' => 2
  );
}

/**
 * Includes different inc files
 */
function vsite_include($inc_files){
  $inc_files = is_array($inc_files) ? $inc_files : array($inc_files);

  $path = dirname(__FILE__);

  foreach ($inc_files as $inc) {
    if (file_exists("$path/includes/$inc.inc")) {
      include_once "$path/includes/$inc.inc";
    }
  }
}

/**
 * Implementation of preprocess_views_view().
 * TODO move this to scholar module
 */
function vsite_preprocess_views_view(&$vars) {
  if ($feature = context_get('scholar', 'feature')) {
    $contexts = context_enabled_contexts();
    $context = isset($contexts["scholar-feature-{$feature}"]) ? $contexts["scholar-feature-{$feature}"] : NULL;
    $view = $vars['view'];
    $space = spaces_get_space();

    if ($space && $context && strpos($view->current_display, 'page') !== FALSE && empty($view->result) && empty($vars['empty'])) {
      static $once;
      if (!$once) {
        $once = TRUE;

        $output = '';
        global $user;

        // Get the first nodetype
        if (!empty($context->node)) {
          reset($context->node);
          $nodetype = current($context->node);
        }

        if (!empty($nodetype) && node_access('create', $nodetype) && ($space->type == 'og')) {
          $types = node_get_types();
          if ($type = $types[$nodetype]) {
            $output .= t('Please add your first <span class="show-content-type">!type</span> to get started:', array('!type' => $type->name));
            $output .= "<span class='buttons'>". theme('context_links', context_links()) ."</span>";
          }
        }
        else {
          $output .= t('There is currently no content to view in this section.');
        }
        $vars['empty'] = $output;
      }
    }
  }
}



/** API functions **/


/**
 * API function for getting the active site
 */
function vsite_get_vsite(){
  $space = spaces_get_space();
  $scholar_content_type = variable_get('scholar_content_type', 'scholarsite');
  if ($space && $space -> type == 'og' && $space -> group -> type == $scholar_content_type ){
    return $space;
  }
  else {
    return NULL;
  }
}


/**
 * API function for testing wether we are on the front page of a vsite
 * TODO there are different ways of doing this
 * - as a full context "context_vsite_home" which has bloocks etc
 * - set context in hook init and then get it here
 */
function vsite_is_front(){
  $vsite = vsite_get_vsite();
  $active_menu = menu_get_item();
  return ($vsite && $active_menu['path'] == 'home') ? TRUE : FALSE;
}

/**
 * hook spaces_presets
 */
function vsite_spaces_presets(){
  $items = array();
  vsite_include('vsiteapi');
  $options = vsite_content_types();
  $items['scholarsite'] = array(
    'name' => 'Scholar site preset', 
    'description' => 'Scholar site preset', 
    'preset' => array(
      'features' => array(
        'scholar_links' => '2', 
        'scholar_announcements' => '2', 
        'scholar_blog' => '2' 
      ), 
      'locked' => array(
        'features' => array(
          'scholar_links' => 0, 
          'scholar_announcements' => 0, 
          'scholar_blog' => 0 
        ), 
        'settings' => array(
          'home' => 0 
        ) 
      ), 
      'og' => array(
        'og_selective' => '3', 
        'og_register' => 0, 
        'og_directory' => 1, 
        'og_private' => 0 
      ) 
    ), 
    'type' => 'og' 
  );
  
  //Put default settings here
  $items['scholarsite']['settings'] = array(
    'home' => 'blog', 
    'front' => array(
      'frontpage' => 'feature', 
      'node_options' => $options,
    ),
    'theme' => 'scholar_theme_01', 
    'shield' => drupal_get_path('module','vsite_design')."/theme/shields/harvard_shield.png",
    'generic' => array('admin_menu'=>1),
  );
       
  
  return $items;
}
<?php

include_once('vsite_front.features.inc');

function vsite_front_init(){
  $active_menu = menu_get_item();
  if ($active_menu['path'] == 'cp/settings/front'){
    drupal_add_css(drupal_get_path('module', 'vsite_front') .'/theme/vsite_front.css');
  }
}

function vsite_front_menu(){
  $items = array();
  $items['home'] = array(
    'type' => MENU_CALLBACK,
    'title' => '',
    'page callback' => 'vsite_front_home',
    'file' => 'vsite_front.pages.inc',
    'access arguments' => array('access content'),
    'weight' => 0,
  );  
  return $items;
}

/**
 * Implementation of hook_spaces_settings().
 */
function vsite_front_spaces_settings(){
  return array(
    'front' => array(
      'class' => 'vsite_front_settings_front', 
      'file' => drupal_get_path('module', 'vsite_front') . '/vsite_front.settings.inc' 
    ),
    'home' => array(
      'class' => 'vsite_front_settings_home',
      'file' => drupal_get_path('module', 'vsite_front') .'/vsite_home.settings.inc',
    ),
  );
}


/**
 * Implementation of hook flag_default_flags
 * @return array - default flag
 */
function vsite_front_flag_default_flags(){
  //vsite_include('vsiteapi');
  //$scholar_types = array_keys(vsite_content_types());
  $types = og_get_types('group_post');
  $flags = array();
  $flags[] = array(
    'content_type' => 'node', 
    'name' => 'vsite_frontpage', 
    'title' => 'Save to Front Page', 
    'types' => $types, 
    'roles' => array(
      0 => '2' 
    ), 
    'global' => TRUE, 
    'flag_short' => 'Save to Front', 
    'flag_long' => 'Save post to front page', 
    'flag_confirmation' => 'Saved to Front Page', 
    'unflag_short' => 'Remove from Front', 
    'unflag_long' => 'Remove post from Front Page', 
    'flag_message' => 'Saved to Front Page!',
    'unflag_message' => 'Removed from Front Page',
    'status' => TRUE, 
    'show_on_page' => FALSE, 
    'show_on_teaser' => FALSE, 
    'show_on_form' => FALSE, 
    'link_type' => 'toggle',  //normal, toggle, confirm
    'locked' => array(
      'types',
      'name', 
      'show_on_page', 
      'show_on_teaser', 
      'show_on_form', 
      'global' 
    ) 
  );
  
  return $flags;
}


/**
 * Implementation of hook_link().
 */
function vsite_front_vsite_admin_link($type, $object){
  $links = array();
  global $user;
  //check font page settings here, only execute if front page setting equals flag
  $vsite = vsite_get_vsite();
  if ($vsite->settings['front']['frontpage'] !== 'flag' || 
      !($vsite -> admin_access()) ||
      !flag_fetch_definition($type)){
    return $links;
  }



  // Get frontpage flags
  $flag = flag_get_flag('vsite_frontpage');


  if (!$flag->applies_to_content_object($object)) {
    // Flag does not apply to this content.
    return false;
  }

  $content_id = $flag->get_content_id($object);
  // The flag links are actually fully rendered theme functions.
  // The HTML attribute is set to TRUE to allow whatever the themer desires.
  $links['flag-'. $flag->name] = array(
  'title' => $flag->theme($flag->is_flagged($content_id) ? 'unflag' : 'flag', $content_id),
  'html' => TRUE,
  );

  if (isset($links)) {
    return $links;
  }
}

/**
 * Implementation of hook_nodeapi()
 */
function vsite_front_nodeapi(&$node, $op, $a3, $a4){
  switch($op){
    case 'presave':
      $uri = request_uri();
      $pattern = '/(node\/add\/)(.+?)(\/front)/';
      preg_match($pattern, $uri, $matches);
      // set new property in node object indicating to set as front page
      if ($matches) $node -> front  = 1;
      break;

    case 'insert':
      if ($node -> front == 1){
        //$vsite = spaces_load('og', $node->og_groups[0]);
        $vsite = vsite_get_vsite();

        //modify the vsite settings
        unset($vsite -> settings['front']);
        $vsite -> settings['front']['frontpage'] = 'html';
        $vsite -> settings['front']['front_nid'] = $node->nid;

        //save the changes
        spaces_save($vsite);

        $link =  l('Control Panel Settings.', $vsite -> purl. '/cp/settings/front' );
        $msg_variables = array (
        '@type' => node_get_types('name', $node),
        '%title' => $node -> title,
        '!link' => $link,
        );

        //redirect the user to thier home page with message
        drupal_set_message(t('@type <em>%title</em> has been created. You have selected this post to be your site\'s front page. To change your front page content, go the !link', $msg_variables));
        drupal_goto($vsite -> purl . '/home');
      }
      break;
  }
}

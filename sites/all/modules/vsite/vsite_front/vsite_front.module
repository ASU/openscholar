<?php

include_once('vsite_front.features.inc');

function vsite_front_init(){
  $active_menu = menu_get_item();
  if ($active_menu['path'] == 'cp/settings/front'){
    drupal_add_css(drupal_get_path('module', 'vsite_front') .'/theme/vsite_front.css');
  }
}

function vsite_front_menu(){
  $items = array();
  $items['home'] = array(
    'type' => MENU_CALLBACK,
    'title' => '',
    'page callback' => 'vsite_front_home',
    'file' => 'vsite_front.pages.inc',
    'access arguments' => array('access content'),
    'weight' => 0,
  );
  return $items;
}

/**
 * Implementation of hook_spaces_settings().
 */
function vsite_front_spaces_settings(){
  return array(
    'front' => array(
      'class' => 'vsite_front_settings_front', 
      'file' => drupal_get_path('module', 'vsite_front') . '/vsite_front.settings.inc' 
    ) 
  );
}


/**
 * Implementation of hook flag_default_flags
 * @return array - default flag
 */
function vsite_front_flag_default_flags(){
  vsite_include('vsiteapi');
  $scholar_types = array_keys(vsite_content_types());
  $flags = array();
  $flags[] = array(
    'content_type' => 'node', 
    'name' => 'vsite_frontpage', 
    'title' => 'Save to Front Page', 
    'types' => $scholar_types, 
    'roles' => array(
      0 => '2' 
    ), 
    'global' => TRUE, 
    'flag_short' => 'Save to Front Page', 
    'flag_long' => 'Save to Front Page', 
    'flag_confirmation' => 'Saved to Front Page', 
    'unflag_short' => 'Remove from Front Page', 
    'unflag_long' => 'Remove from Front Page', 
    //   'unflag_confirmation' => 'Are you sure you want to remove?',
    'status' => TRUE, 
    'show_on_page' => FALSE, 
    'show_on_teaser' => FALSE, 
    'show_on_form' => FALSE, 
    'link_type' => 'toggle',  //normal, toggle, confirm
    'locked' => array(
      'types',
      'name', 
      'show_on_page', 
      'show_on_teaser', 
      'show_on_form', 
      'global' 
    ) 
  );
  
  return $flags;
}


/**
 * Implementation of hook_link().
 */
function vsite_front_link($type, $object, $teaser = FALSE){

  //check font page settings here, only execute if front page setting equals flag
  $site = vsite_get_vsite();
  //
  if ($site->settings['front']['frontpage'] !== 'flag'){
    return false;
  }

  if (!isset($object) || !flag_fetch_definition($type)) {
    return;
  }

  global $user;
  // Anonymous users can't create flags with this system.
  if (!$user->uid) {
    return;
  }

  // Get frontpage flags
  $flag = flag_get_flag('vsite_frontpage');

  if (!$flag->user_access($user)) {
    // User has no permission to use this flag.
    return false;
  }

  if (!$flag->applies_to_content_object($object)) {
    // Flag does not apply to this content.
    return false;
  }

  $content_id = $flag->get_content_id($object);
  // The flag links are actually fully rendered theme functions.
  // The HTML attribute is set to TRUE to allow whatever the themer desires.
  $links['flag-'. $flag->name] = array(
  'title' => $flag->theme($flag->is_flagged($content_id) ? 'unflag' : 'flag', $content_id),
  'html' => TRUE,
  );

  if (isset($links)) {
    return $links;
  }
}

/**
 * Implementation of hook_nodeapi
 */
function vsite_front_nodeapi(&$node, $op){
  switch ($op) {
    case 'insert' :
      
      //if frontpage is set to true in URL, make this page a "bio" page
      if ($_GET['frontpage']) {
        $space = spaces_get_space();
        $space->settings['bio']['nid'] = $node->nid;
        spaces_save($space);
      }
      break;
  }
}

<?php

include_once('vsite_support.features.inc');

function vsite_support_init(){

  $node = menu_get_object();
  // Check if this is an existing node.
  if (! empty($node->nid) && $node->type == 'support_question' || $node->type == 'feature_request') {
    global $custom_theme;
    $custom_theme = CPTHEME;
    //menu_set_active_item("cp/support/questions");
  }
}

/**
 * hook menu
 */
function vsite_support_menu(){
  $items = array();

  $items['cp/support'] = array(
    'title' => 'Support',
    'page callback' => 'vsite_support_questions',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 5
  );

  $items['cp/support/questions'] = array(
    'title' => 'Collaborative FAQ',
    'page callback' => 'vsite_support_questions',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );


  $items['cp/support/featurerequests'] = array(
    'title' => 'Feature requests',
    'page callback' => 'vsite_support_feature_requests',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );

  
  if(module_exists('contact')){
    $items['cp/support/contact'] = array(
      'title' => 'Contact Us',
      'page callback' => 'contact_site_page',
      'file' => 'contact.pages.inc',
      'type' => MENU_LOCAL_TASK,
      'file path' => drupal_get_path('module','contact'),
    );
    
    $items['contact_owner'] = array(
	    'title' => 'Contact',
	    'page callback' => 'vsite_support_site_contact',
	    'page arguments' => array(1),
	    'type' => MENU_NORMAL_ITEM,
      //'menu_name' => variable_get('scholar_primary_menu','features'),
	    'access callback' => 'vsite_support_site_contact_access',
	    'file' => 'contact.pages.inc',
      'file path' => drupal_get_path('module','contact'),
	  );
  }
  
  // make them all part of 'cp' menu
  foreach($items as $path => $item) {
    if(!isset($item['menu_name'])) $items[$path]['menu_name'] = 'cp';
    if(!isset($item['access callback'])) $items[$path]['access callback'] = 'cp_access_cp';
  }

  return $items;
}

/**
 * Contact form that contacts the site owner
 * @return contact_page
 */
function vsite_support_site_contact(){
	if(!($vsite = vsite_get_vsite()) || !($user = user_load($vsite->group->uid))) return MENU_ACCESS_DENIED;
	
  return contact_user_page($user);
}

/**
 * Check settings to see if you should display
 * @return contact_page
 */
function vsite_support_site_contact_access(){
  if(!($vsite = vsite_get_vsite()) || !($user = user_load($vsite->group->uid))) return false;
  
  return ($vsite->settings['generic']['contact_form'] !== 0 && ($vsite->settings['generic']['contact_form_anonymous'] !== 0 || user_is_logged_in()));
}

function vsite_support_questions(){
  return views_page($view_name = 'vsite_support_faq', $display = 'default');
}

function vsite_support_questions_node($node){
  return node_page_view($node);

}

/*
function vsite_support_preprocess_node(&$vars){
 if (! empty($vars['nid']) && $vars['type'] == 'support_question' || $vars['type'] == 'feature_request'){
   $vars['node_url'] = url('cp/support/questions/'. $vars['nid']);
 }
}
*/

function vsite_support_feature_requests(){
  return views_page($view_name = 'vsite_support_feature_reqs', $display = 'default');
}

/**
 * Implementation of hook_strongarm().
 */
function vsite_support_strongarm() {
  $conf = array();

  $types = array('support_question', 'support_answer', 'feature_request' );
  foreach($types as $type){
    //disable comments
    $conf['comment_'. $type] = COMMENT_NODE_DISABLED;
  }
  return $conf;
}



/**
 * Implementation of hook flag_default_flags
 * @return array - default flag
 */
function vsite_support_flag_default_flags(){
  $flags = array();
  $flags[] = array(
    'content_type' => 'node',
    'name' => 'vsite_support_question_like',
    'title' => 'Support question flag',
    'types' => array('support_question'),
    'roles' => array(
      0 => '2'
    ),
    'global' => TRUE,
    'flag_short' => 'Flag as helpful',
    'flag_long' => 'This is a good question',
    'flag_confirmation' => 'Your vote is registered',
    'unflag_short' => 'Undo',
    'unflag_long' => 'Your vote is canceled',

    'status' => TRUE,
    'show_on_page' => TRUE,
    'show_on_teaser' => TRUE,
    'show_on_form' => FALSE,
    'link_type' => 'toggle',  //normal, toggle, confirm
    'locked' => array(
      'types',
      'name',
      'show_on_page',
      'show_on_teaser',
      'show_on_form',
      'global'
    )
  );

    $flags[] = array(
    'content_type' => 'node',
    'name' => 'vsite_support_feature_like',
    'title' => 'Feature request flag',
    'types' => array('feature_request'),
    'roles' => array(
      0 => '2'
    ),
    'global' => TRUE,
    'flag_short' => 'Flag as helpful',
    'flag_long' => 'I like this feature',
    'flag_confirmation' => 'Your vote is registered',
    'unflag_short' => 'Undo',
    'unflag_long' => 'Your vote is canceled',

    'status' => TRUE,
    'show_on_page' => FALSE,
    'show_on_teaser' => TRUE,
    'show_on_form' => FALSE,
    'link_type' => 'toggle',  //normal, toggle, confirm
    'locked' => array(
      'types',
      'name',
      'show_on_page',
      'show_on_teaser',
      'show_on_form',
      'global'
    )
  );

    $flags[] = array(
    'content_type' => 'node',
    'name' => 'vsite_support_answer_like',
    'title' => 'Answer flag',
    'types' => array('support_answer'),
    'roles' => array(
      0 => '2'
    ),
    'global' => TRUE,
    'flag_short' => 'Flag as helpful"',
    'flag_long' => 'I like this answer',
    'flag_confirmation' => 'Your vote is registered',
    'unflag_short' => 'Undo',
    'unflag_long' => 'Your vote is canceled',

    'status' => TRUE,
    'show_on_page' => TRUE,
    'show_on_teaser' => TRUE,
    'show_on_form' => FALSE,
    'link_type' => 'toggle',  //normal, toggle, confirm
    'locked' => array(
      'types',
      'name',
      'show_on_page',
      'show_on_teaser',
      'show_on_form',
      'global'
    )
  );

  return $flags;
}
<?php

function vsite_design_menu(){
  $items = array();
  $items['cp/settings/theme/swap_screenshot/%'] = array(
    'page callback' => 'vsite_design_swap_screenshot',
    'page arguments' => array(4),
    'access arguments' => 'cp_access_cp',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * hook init
 * @return unknown_type
 */
function vsite_design_init(){

  $vsite = vsite_get_vsite();
  if($vsite && (!$vsite->settings['site'] || !$vsite->settings['site']['headline'])){
  	if(!is_array($vsite->settings['site'])) $vsite->settings['site'] = array('sub_heading_extra' => '');
  	
  	if((!strlen($vsite->settings['site']['headline']) || !strlen($vsite->settings['site']['sub_heading'])) && ($profile = content_profile_load('vsite_users_profile',$vsite->group->uid)) ){
	  	
	  	if(!strlen($vsite->settings['site']['headline']) && is_array($profile->vsite_users_first_name[0])){
	  		$vsite->settings['site']['headline'] = $profile->vsite_users_first_name[0]['value']." ".$profile->vsite_users_last_name[0]['value'];
	  		$vsite->group->title = $profile->vsite_users_first_name[0]['value']." ".$profile->vsite_users_last_name[0]['value'];
	  	} //Save default headline
	    if(!strlen($vsite->settings['site']['sub_heading']) && is_array($profile->vsite_users_title[0])){
	      $vsite->settings['site']['sub_heading'] = $profile->vsite_users_title[0]['value'];
	      $vsite->group->og_description = $profile->vsite_users_title[0]['value'];
	    }//Save default title
	    
	    
	    node_save($vsite->group); //Save to group node
	    spaces_save($vsite);
  	}//Create Presets
  }//Has a default title been created

  if($vsite && (!$vsite->settings['logo'] || !$vsite->settings['logo']['current_logo'])){
  	if(!is_array($vsite->settings['logo'])) $vsite->settings['logo'] = array();
  	if(!strlen($vsite->settings['logo']['current_logo']) && ($profile = content_profile_load('vsite_users_profile',$vsite->group->uid)) && ($a_files = filefield_get_node_files($profile,'field_user_profile_photo')) && is_array($a_files)){	
  		//Save default logo to the settings and site node
  		require_once(drupal_get_path('module', 'vsite_design') .'/includes/vsite_design.settings.logo.inc');
  		$a_image = current($a_files);
  		
      $s_vsite_dest = vsite_design_settings_logo::add_imagefield_image($a_image['filepath'],'field_vsite_logo',$vsite->group);
      $vsite->settings['logo']['current_logo'] = ($s_vsite_dest)?$s_vsite_dest:$a_image['filepath'];
      spaces_save($vsite);
    }
  }
}

/**
 * hook_theme
 */
function vsite_design_theme(){
  $path = drupal_get_path('module', 'vsite_design') .'/theme';
  
  $items = array();
  $items['vsite_design_theme_picker'] = array(
    'arguments' => array('info' => array(), 'sub_theme' => ''),
    'template' => 'vsite_design-theme-picker',
    'path' => $path,
  );
  
  $items['vsite_design_theme_subnav'] = array(
    'arguments' => array('count' => array()),
    'template' => 'vsite_design-theme-subnav',
    'path' => $path,
  );
  
  $items['vsite_design_theme_form'] = array(
    'arguments' => array('form' => NULL),
  );
  
  $items['vsite_design_logo'] = array(
    'arguments' => array('scholar' => NULL, 'preset' => NULL, 'alt' => NULL, 'title' => NULL, 'attributes' => NULL),
    'path' => drupal_get_path('module', 'vsite')."/includes/",
    'file' => 'vsiteapi.inc',
  );
  
  $items['vsite_design_theme_shieldpicker'] = array(
    'arguments' => array('file' => array()),
    'template' => 'vsite_design-theme-shieldpicker',
    'path' => $path."/shield",
    //'file' => 'theme.inc',
  );
  
  return $items;
}

/**
 * Implementation of hook_spaces_settings().
 */
function vsite_design_spaces_settings() {
  $a_settings = array(
    'theme' => array(
      'class' => 'vsite_design_settings_theme',
      'file' => drupal_get_path('module', 'vsite_design') .'/includes/vsite_design.settings.theme.inc',
    ),
  );
  
  return $a_settings;
}


/**
 * Implementation of hook_imagecache_default_presets().
 */
function vsite_design_imagecache_default_presets() {
  $presets = array();
  $presets['vsite_design_default_logo'] = array (
    'presetname' => 'vsite_design_default_logo',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_image',
        'data' => array (
          'width' => '700',
          'height' => '600',
        ),
      ),
    ),
  );
  $presets['vsite_design_square_logo'] = array (
    'presetname' => 'vsite_design_square_logo',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array (
          'width' => '140',
          'height' => '140',
        ),
      ),
    ),
  );
  $presets['vsite_design_landscape_logo'] = array (
    'presetname' => 'vsite_design_landscape_logo',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array (
          'width' => '180',
          'height' => '140',
        ),
      ),
    ),
  );
  $presets['vsite_design_portrait_logo'] = array (
    'presetname' => 'vsite_design_portrait_logo',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array (
          'width' => '140',
          'height' => '180',
        ),
      ),
    ),
  );
  $presets['vsite_design_default_shield'] = array (
    'presetname' => 'vsite_design_default_shield',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array (
          'width' => '62',
          'height' => '75',
        ),
      ),
    ),
  );
  return $presets;
}

/**
 * Make sure that the css files are preprocessed correctly
 * 
 * @param $vars
 * @return unknown_type
 */
function vsite_design_preprocess_page(&$vars){
  //Return if:
  if (! ($vsite = vsite_get_vsite()) || //In a Vsite? 
context_get('vsite', 'section') == 'cp' || //We are in CP?
! $vsite->group->og_theme || //Grop has a custom theme
! ($themes = list_themes()) || ! array_key_exists($vsite->group->og_theme, $themes) || //The theme is valid
empty($themes[$vsite->group->og_theme]->stylesheets))
    return; //The theme has styles associated
  

  // Add stylesheets used by this theme, without preprocessing
  foreach ( $themes[$vsite->group->og_theme]->stylesheets as $media => $stylesheets ) {
    foreach ( $stylesheets as $name => $stylesheet )
      drupal_add_css($stylesheet, 'theme', $media, false);
  }
  
  // load the css for the theme flavor
  if (isset($vsite->settings['theme']) && is_array($vsite->settings['theme'])) {
    if ($vsite->settings['theme']['flavor']) {
      $fname = $vsite->settings['theme']['maintheme']."-".$vsite->settings['theme']['flavor'] . '.css';
      $fname = str_replace('_', '-', $fname);
      
      $theme_name = $vsite->settings['theme']['maintheme'];
      $stylesheet = drupal_get_path("theme", $theme_name) . '/' . $fname;
      
      drupal_add_css($stylesheet, 'theme', 'all', false);
    }
  }
  //drupal_add_css($stylesheet, 'theme', $media, false);
  

  $vars['css'] = drupal_add_css();
  $vars['styles'] = drupal_get_css();
}


/**
 * Implement Hook vsite_generic_settings
 * @return array
 */
function vsite_design_vsite_generic_settings($space, $value = array()){
  $a_settings = array();
  
  //Disable the shield
  $a_settings['disable_shield'] = array(
    'form' => array(
      '#prefix' => "<br />",
      '#type' => 'checkbox',
      '#title' => t('Disable Shields'),
      '#attributes' => array('onChange' => "vsite_design_grey_out(this);"),
      '#default_value' => is_array($value) && array_key_exists('disable_shield',$value) ? $value['disable_shield']:0,
      '#description' => "Select the shield that you wish to appear in the 'shield widget' on your site.  Click disable to display none.",
    )
  );
  
  //The shield List
  $s_shield_dir = drupal_get_path('module','vsite_design')."/theme/shield/shields";
  $a_shields = file_scan_directory($s_shield_dir, '.*', array('.', '..'));
    
  $shield_options = array();
  foreach ($a_shields as $shield)  $shield_options[$shield->filename] = theme('vsite_design_theme_shieldpicker', $shield); 
  
  $a_settings['shield'] = array(
    'form' => array(
      '#prefix' => "<div class='shield_wrapper'>",
      '#title' => t('Shield'),
      '#type' => 'radios',
      '#options' => $shield_options,
      '#default_value' => is_array($value) && array_key_exists('shield',$value) ? $value['shield']: drupal_get_path('module','vsite_design')."/theme/shield/shields/harvard_shield.png",
      '#suffix' => '</div><div class="clearfix"></div>',
    ),
    'css' => array(drupal_get_path('module', 'vsite_design') . '/theme/shield/vsite_design-shield-picker.css'),
    'js' => array(
      drupal_get_path('module', 'vsite_design') . '/theme/shield/vsite_design-shield-picker.js',
      drupal_get_path('module', 'vsite_design') . '/theme/shield/vsite_design.greyout.js',
    ),
  );
  //END Shield List
  
  return $a_settings;
}

/**
 * The main theme for the "theme selector" form
 * @param $form
 * @return string html
 */
function theme_vsite_design_theme_form($form) {
	
	$output = drupal_render($form['maintheme']);
	
	//UL List
	$output .= '<ul class = "theme-picker">';
	foreach ($form['maintheme']['#enabled_themes'] as $o_theme){
		$s_sub_theme = '';
		if(array_key_exists($o_theme->name.'_flavor',$form)) $s_sub_theme =  drupal_render($form[$o_theme->name.'_flavor']);
		
		$output .= '<li class = "item-theme-picker '.(($o_theme->name == $form['maintheme']['#default_value'])?'checked':'').'" id="maintheme-'.str_replace('_','-',$o_theme->name) .'">' . 
		             theme('vsite_design_theme_picker', array_merge((array)$o_theme->info, array('theme_name'=>$o_theme->name)) ,$s_sub_theme) . 
		           '</li>';
	}
	$output .= '</ul>';
	
	$output .= drupal_render($form); //Anything we havn't rendered
	
  return $output;
}

/**
 * The function that handles the swap of the screenshot
 * @param string $s_theme_name
 * @return array html
 */
function vsite_design_swap_screenshot($s_theme_name){
	$n_flavor = $_POST ['ctools_changed']; //The Flavor
	
	ctools_include ( 'ajax' );
  ctools_add_js ( 'ajax-responder' );
  
  $s_screenshot_file = intval($n_flavor)?"screenshot-".$n_flavor.".png" : "screenshot.png";
  $s_screenshot_html = theme('image', drupal_get_path('theme',$s_theme_name)."/".$s_screenshot_file, t('Screenshot for theme'), '', array('class' => 'screenshot', 'id' => 'screenshot_'.$s_theme_name), FALSE);
  
  $commands = array ();
  $commands [] = ctools_ajax_command_replace ( "img#screenshot_{$s_theme_name}", $s_screenshot_html);
  ctools_ajax_render ( $commands );
}

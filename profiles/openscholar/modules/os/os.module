<?php
include_once('os.features.inc');

/**
 * Implementation of hook menu
 */
function os_menu(){
  $items = array();

  $items['home'] = array(
    'type' => MENU_CALLBACK,
    'title' => '',
    'page callback' => 'os_frontpage',
    'file' => 'os.pages.inc',
    'access arguments' => array('access content'),
    'weight' => 0,
  );
  
  //TMP TEST URL TO TEST MENU SAVE SINCE ADMIN PATHS ARE EXCLUDED FROM VSITE'S
  $items['cp/structure/menu/manage/%menu'] = array(
    'title' => 'Customize menu',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('menu_overview_form', 4),
    'title callback' => 'menu_overview_title',
    'title arguments' => array(4),
    'access arguments' => array('administer menu'),
    'file path' => drupal_get_path('module','menu'),
    'file' => 'menu.admin.inc',
  );
  
  return $items;
}

/**
 * return the bundles that should be treated as group content
 */
function os_get_bundles($space_type = 'og'){
  $features = spaces_features($space_type);
  $node_bundles = array('page');
  foreach ($features as $name => $feature) {
    $feature_components = $feature->info['features'];
    if(isset($feature_components['node'])){
      $node_bundles = array_merge($node_bundles,$feature_components['node']);
    }
  }
  
  return $node_bundles;
}

/**
 * Context Plugins
 */
function os_context_plugins() {
  $plugins = array();
  $plugins['os_context_reaction_feature'] = array(
    'handler' => array(
	    'path' => drupal_get_path('module', 'os') .'/plugins',
	    'file' => 'os_context_reaction_feature',
	    'class' => 'os_context_reaction_feature',
	    'parent' => 'context_reaction',
    ),
  );
  return $plugins;
}

/**
 * Context registry.
 */
function os_context_registry() {
  $registry = array();
  $registry['reactions'] = array(
    'os_feature' => array(
      'title' => t('OpenScholar Feature'),
      'description' => t('Set the current Openscholar feature using context.'),
      'plugin' => 'os_context_reaction_feature',
    ),
  );
  return $registry;
}

/**
 * Get current Feature
 * replaces "vsite_active_feature()"
 */
function os_active_feature(){
	if(!module_exists('context')) return false;
	
	static $once;
	if(!isset($once)){
		$once = true;
		if ($plugin = context_get_plugin('reaction', 'os_feature')) {
	    $plugin->execute();
	  }
	}
	
	return context_get('os','feature');
}

////Implement hook_context_block_info_alter to modify the block list.
//function os_context_block_info_alter(&$block_info){
//	ctools_include('menu','os');
//	_os_menu_context_block_info_alter($block_info);
//
//}

/**
 * Implements hook_block_info().
 */
function os_block_info() {
	ctools_include('menu','os');
	
  $blocks['powered-by'] = array(
    'info' => t('Powered by Openscholar'),
    'weight' => '10',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  // System-defined menu blocks.
  foreach (os_get_menus() as $menu_name => $title) {
    $blocks[$menu_name]['info'] = t($title);
    // Menu blocks can't be cached because each menu item can have
    // a custom access callback. menu.inc manages its own caching.
    $blocks[$menu_name]['cache'] = DRUPAL_NO_CACHE;
  }
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Generate a block with a promotional link to openscholar.harvard.edu and
 * all os menu blocks.
 */
function os_block_view($delta = '') {
  $block = array();
  switch ($delta) {
  	case 'powered-by':
      $block['subject'] = NULL;
      $block['content'] = theme('openscholar_powered_by');
      return $block;
    default:
      // All os menu blocks.
      ctools_include('menu','os');
      $os_menus = os_get_menus();
      if (isset($os_menus[$delta])) {
        $block['subject'] = t($os_menus[$delta]);
        $block['content'] = os_menu_tree($delta);
        return $block;
      }
      break;
  }
}

/**
 * Implements hook_theme().
 */
function os_theme() {
  return array(
    'openscholar_powered_by' => array(
      'variables' => array(),
      'file' => 'includes/themes.inc',
    ),
  );
}
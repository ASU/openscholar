<?php
/**
 * Basic tests for OS Pages.
 */
class VsiteMenuMenuLinks extends OpenscholarWebTestCase {

  // The profile to install as a basis for testing.
  protected $profile = 'openscholar';
  
  //A user that is a member of group1
  protected $user1;
  
  //A vsite to load
  protected $group_1;
  
  private $test_menu = 'vsite-menu-test';
  
  /**
   * Test info.
   */
  public static function getInfo(){
    return array(
        'name' => t('Vsite Menu: Menu Link APIs'),
        'description' => t('Test Menu Link API functions, adding moving, altering loading.'),
        'group' => t('vsite')
    );
  }

  /**
   * Set up test.
   */
  public function setUp(){
    parent::setUp('spaces', 'og', 'spaces_og', 'vsite', 'vsite_menu');
    
    // Create a user with access to add a link
    $this->user1 = $this->drupalCreateUser(array('create link content'));
    
    //Create A Group Node
    $group1 = array(
        'title' => 'My Test Site',
        'type' => 'vsite',
        'purl' => 'group1',
        'uid' => $this->user1->uid,
    );
    $this->group_1 = $this->drupalCreateNode($group1);
    
    //Create A Group Node
    $group2 = array(
      'title' => 'Group 2',
      'type' => 'vsite',
      'purl' => 'group2',
      'uid' => $this->user1->uid,
    );
    
    //Create the test menu
    $menu = array(
      'menu_name' => $this->test_menu,
      'title' => 'Test Menu',
      'description' => 'A Test Menu'
    );
    menu_save($menu);
    
    link_path: (required) The path of the menu item, which should be
 *     normalized first by calling drupal_get_normal_path() on it.
 *   - link_title: (required) Title to appear in menu for the link.
 *   - menu_name: (optional) The machine name of the menu for the link.
 *     Defaults to 'navigation'.
 *   - weight: (optional) Integer to determine position in menu. Default is 0.
 *   - expanded: (optional) Boolean that determines if the item is expanded.
 *   - options: (optional) An array of options, see l() for more.
 *   - mlid: (optional) Menu link identifier, the primary integer key for each
 *     menu link. Can be set to an existing value, or to 0 or NULL
 *     to insert a new link.
 *   - plid: (optional) The mlid of the parent.
 *   - router_path: (optional) The path of the relevant router item.
    $menu_item = array(
      'link_title' => 'link'.$i,
      'menu_name' => $menu['menu_name'],
      'weight' => $i,
      'router_path' => 'node',
    );
    
    menu_link_save($menu_item);
    
    
  }

  /**
   * Run Node Access Tests
   */
  public function testAccessNode(){
    
    /**
     * As an Anon User
     */
    
    $url = url('node/'.$this->group_1_link->nid);
    // Test that page returns 301 Redirect
    $this->drupalGet($url);
    $this->assertResponse(301, "A link node is viewed from outside a space, Redirect into space expected.");
    
    //Deeplink
    $url = url('group1/node/'.$this->group_1_link->nid);
    // Test that page returns 200
    $this->drupalGet($url);
    $this->assertResponse(200, "A link node is viewed within a space, Valid Response expected.");
    
    //Add A Link
    $url = url('node/add/link');
    // Test that page returns 403 Access Denied
    $this->drupalGet($url);
    $this->assertResponse(403, "Adding a link when not in a space, Expect to be denided since this is space content, and the user does not have access.");
    
    //Add A Link
    $url = url('group1/node/add/link');
    // Test that page returns 403 Access Denied
    $this->drupalGet($url);
    $this->assertResponse(403, "Adding a link when in a space and logged out, Expect to be denied access since you are not logged in.");
    
    /**
     * Logged in as 'user1' with membership to group2 but not group1
     */
    
    // Login as user with access to add a link
    $this->drupalLogin($this->user1);
    
    //Add A Link
    $url = url('node/add/link');
    // Test that page returns 403 Access Denied
    $this->drupalGet($url);
    $this->assertResponse(403, "Adding a link when not in a space and logged in, Expect to be denided since this is space content.");
    
    //Add A Link
    $url = url('group1/node/add/link');
    // Test that page returns 403 Access Denied
    $this->drupalGet($url);
    $this->assertResponse(403, "Adding a link when in a space, logged in, but not a site member, Expect to be denied access since you are not a member.");
    
    // Assert the user is a group member.
    $this->assertTrue(og_is_member('node', $this->group2->nid, 'user', $this->user1), t('Sanity check to make sure web_user was added as a group member.'));
    
    //Add A Link
    $url = url('group2/node/add/link');
    // Test that page returns 200 OK
    $this->drupalGet($url);
    $this->assertResponse(403, "Adding a link when in a space, logged in, and a site member, Expect to be granted access since this is space content.");
    
  }
}
<?php

function cp_layout_menu() {
  $items = array();

  $items['cp/build/layout'] =
  $items['cp/build/layout/%'] = array(
    'title' => 'Layout',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cp_layout_full_form', 3),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 10,
    'access callback' => 'spaces_access_admin',
    'file' => 'cp_layout.form.inc',
  );

  $items['cp/build/layout/ajax'] = array(
    'title' => 'Layout AJAX Request',
    'page callback' => 'cp_layout_ajax',
    'type' => MENU_CALLBACK,
    'file' => 'cp_layout.form.inc',
  );

  $items['cp/build/layout/%ctools_js/select'] = array(
    'title' => 'Select Layout',
    'page callback' => 'cp_layout_layout_select_ajax',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'spaces_access_admin',
    'file' => 'cp_layout.form.inc',
  );

  return $items;
}

function cp_layout_theme() {
  $path = drupal_get_path('module', 'cp_layout').'/theme';
  $items = array();
  $items['cp_layout_widget'] = array(
    'template' => 'cp_layout-widget',
    'render element' => 'widget',
    'path' =>  $path,
  );

  $items['cp_layout_unused_widgets'] = array(
    'template' => 'cp_layout-unused_widgets',
    'variables' => array('children' => '', 'tags' => array(), 'factories' => array()),
    'path' => $path,
  );

  return $items;
}

/**
 * Implements hook_preprocess_cp_layout_widget
 *
 * Defines classes and additional variables needed by the cp_layout_widget template
 * @param unknown_type $variables
 */
function template_preprocess_cp_layout_widget(&$variables) {
  // used in template
  ctools_include('ajax');
  ctools_include('modal');

  $widget = $variables['widget']['#widget'];
  $classes_array = &$variables['classes_array'];

  $variables['bid'] = $widget['module']."-".$widget['delta'];

  $classes_array[] = "cp-layout-item";

  if (isset($widget['hidden']) && $widget->hidden) {
    $classes_array[] = 'disabled';
  }

  if (isset($widget['plugin'])) {
    $classes_array[] = $widget['plugin'];
  }

  // extra classes used for tag selection
  if (isset($widget['class'])) {
    if (is_array($widget['class'])) {
      $classes_array = array_merge($classes_array, $widget['class']);
    }
    else {
      $classes_array[] = $widget['class'];
    }
  }
  else {
    $classes_array[] = 'Misc';
  }

  if (isset($widget->icon_path)) {
  	$style = "style=\"background-image:url('{$w['icon_path']}');\"";
  }

  $variables['widget_title'] = $widget['info'];

  if (isset($widget['can_edit']) && $widget['can_edit']) {
    $variables['can_edit'] = true;
    $variables['edit_path'] = $widget['path'].'/cp-layout';
  }
  else {
    $variables['can_edit'] = false;
  }

  if (isset($widget['can_delete']) && $widget['can_delete']) {
    $variables['can_delete'] = true;
    $variables['delete_path'] = $widget['path'].'/delete';
  }
  else {
    $variables['can_delete'] = false;
  }
}

/**
 * Implements hook_preprocess_cp_layout_unused_widgets
 *
 * Renders the factory boxes as dropdowns.
 * @param unknown_type $variables
 */
function template_preprocess_cp_layout_unused_widgets(&$variables) {
  $factories = &$variables['factories'];

  // sort factories by something
  // TODO: Do this

  $links = array();
  foreach ($factories as $f) {
    $l = array(
      'html' => TRUE,
      'title' => '',
    );

    $href = $f['block_config_path'].'/cp-layout';
    $title = $f['label'];
    $options = array();
    $html = l($title, $href, $options);

    $help_opts = array(
      'attributes' => array(
        'class' => 'help',
        'onclick' => "var w=window.open(this.href, 'advanced_help_window', 'width=500,height=500,scrollbars,resizable'); w.focus(); return false;"
      ),
      'query' => array(
        'popup' => 1,
      )
    );
    $help_exists = true;
    if ($help_exists) {//TODO: implement $help_exists
      $html .= ' '.l('?', 'help/os/widgets/'.$f['delta'], $help_opts);  // TODO: This URL is wrong
    }
    $l['title'] = $html;
    $links[] = $l;
  }

  $vars = array(
    'title' => 'Add New Widget',
    'links' => $links,
  );

  $variables['factory_html'] = theme('ctools_dropdown', $vars);

  sort($variables['tags']);
  array_unshift($variables['tags'], 'All');
}
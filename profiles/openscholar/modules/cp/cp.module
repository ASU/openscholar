<?php

/**
 * Control Panel
 */

define('CP_MENU_OFF', 'off');
define('CP_MENU_MINI', 'mini');
define('CP_MENU_FULL', 'full');

/**
 * Implements hook_menu
 */
function cp_menu(){
  $items = array();

  $spaces_path = drupal_get_path('module', 'spaces');
  $items["cp/build"] = array(
    'title' => 'Site building',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'spaces_features_form'
    ),
    'file' => 'spaces.admin.inc',
    'file path' => $spaces_path,
    'weight' => 10
  );

  $items["cp/build/features"] = array(
    'title' => 'Features',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'spaces_features_form'
    ),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'spaces.admin.inc',
    'file path' => $spaces_path,
    'weight' => 10
  );

  $items["cp/build/layout"] = array(
    'title' => 'Layout',
    'page callback' => 'cp_layout',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10
  );

  $items["cp/build/layout"] = array(
    'title' => 'Features',
    'page callback' => 'cp_layout',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10
  );

  $items["cp/build/menu"] = array(
    'title' => 'Menu',
    'page callback' => 'cp_menu_callback',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10
  );

  $items["cp/build/taxonomy"] = array(
    'title' => 'Taxonomy',
    'page callback' => 'cp_taxonomy',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10
  );

  // Appearance
  $items['cp/appearance'] = array(
    'title' => "Appearance",
    'page callback' => 'cp_appearance',
    'weight' => 20,
  );

  $items['cp/appearance/theme'] = array(
    'title' => t('Theme'),
    'page callback' => 'cp_appearance',

    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 20,
  );

  // Settings
  $items['cp/settings'] = array(
    'title' => "Settings",
    'page callback' => 'cp_settings',
    'weight' => 20,
  );



  // make them all part of 'cp' menu
  foreach ( $items as $path => $item ) {
    if (! array_key_exists('menu_name', $item))
      $items[$path]['menu_name'] = 'cp';

    // @todo maybe provide our own permissoin instead ?
    if (! array_key_exists('access callback', $item))
      $items[$path]['access arguments'] = array('access content');
  }


  return $items;

}

/**
 * cp/build/layout callback
 */
function cp_layout(){
  return 'cp/build/layout';
}

/**
 * cp/build/menu callback
 */
function cp_menu_callback(){
  return 'cp/build/menu';
}

/**
 * cp/build/taxonomy callback
 */
function cp_taxonomy(){
  return 'cp/build/taxonomy';
}

/**
 * cp/appearance callback
 */
function cp_appearance(){
  return 'cp/appearance';
}

/**
 * cp/settings callback
 */
function cp_settings(){
  return 'cp/settings';
}

function cp_preprocess_html(&$vars) {
  $menu = '';
  switch (_cp_get_toolbar_setting()) {
    case CP_MENU_FULL:
      $menu = _cp_full_menu();
      break;
    case CP_MENU_MINI:
      $menu = _cp_mini_menu();
    break;
  }
}

function _cp_get_toolbar_setting() {

  if (!user_is_logged_in()) {
    return CP_MENU_OFF;
  }

  if (spaces_access_admin() && variable_get('cp_admin_menu', 1)) {
    return CP_MENU_FULL;
  }

  return CP_MENU_MINI;
}

function _cp_full_menu() {

}

function _cp_mini_menu() {global $user;
      $vsite = spaces_get_space();
      $user_links = array();

      if ($vsite->access_admin()) {
        $user_links[] = l('Control Panel', 'cp/build/features', array('attributes' => array('class' => 'wrench', 'title' => t('Manage this Site'))));

        //$new_count = vsite_news_get_new_activity_count();
        $user_links[] = l($new_count, 'cp/news', $new_count?array('attributes' => array('class' => 'unread', 'title' => t('New Activity on this Site'))):array('attributes' => array('title' => t('All Activity on this Site'))));
      }

      $user_links[] = array(
        'data' => t('Hello <strong>!username</strong>', array(
            '!username' => $user->name
         )),
        'children' => array(
          l('My Account', 'user'),
          l('Logout', 'logout'),
        )
      );

      $vars['cp_toolbar'] = theme('item_list', $user_links);
      $vars['body_classes'] .= ' cp-toolbar-mini';
}
<?php

/**
 * Renames all "vsite_domain_proccessing" variables in spaces_overrides.
 */
function vsite_domain_update_7001() {
  // Renames misspelled variable
  // "vsite_domain_proccessing" -> "vsite_domain_shared"
  $query = db_update('spaces_overrides')
    ->fields(array('object_id' => 'vsite_domain_shared'))
    ->condition('object_type', 'variable')
    ->condition('object_id', 'vsite_domain_proccessing')
    ->execute();
}

/**
 * Remove the trailing backslash from the courses nodes.
 *
 * todo: move to batches.
 */
function vsite_domain_update_7002(&$sandbox) {
  // Generic info.
  if (!isset($sandbox['total'])) {
    $sandbox['progress'] = 0;
    $sandbox['total'] = db_select('url_alias', 'u')
      ->fields('u', array('pid'))
      ->condition('alias', '/courses%', 'LIKE')
      ->execute()
      ->rowCount();
  }
  $sandbox['pid'] = isset($sandbox['pid']) ? $sandbox['pid'] : 0;

  // Iterate over the elements.
  $results = db_select('url_alias', 'u')
    ->fields('u', array('pid'))
    ->condition('alias', '/courses%', 'LIKE')
    ->range(0, 250)
    ->condition('pid', $sandbox['pid'], '>')
    ->execute()
    ->fetchAllAssoc('pid');

  if (!$results) {
    return;
  }

  foreach (array_keys($results) as $pid) {
    $path = path_load(array('pid' => $pid));
    $params['@url'] = $path['alias'];
    $path['alias'] = str_replace('/courses', 'courses', $path['alias']);
    path_save($path);

    $params['@pid'] = $path['pid'];

    if (drupal_is_cli()) {
      drush_log(dt('Updating @url(@pid)', $params), 'success');
    }
  }

  $sandbox['progress'] += 250;

  if ($sandbox['progress'] > $sandbox['total']) {
    // The total results amount is smaller then the amount we processed in a
    // single batch. After a single batch we can set the finished to true.
    $sandbox['#finished'] = 1;
  }
  else {
    // Save the last node, increase the node and check if the import finished.
    $sandbox['#finished'] = ($sandbox['progress'] / $sandbox['total']);
  }
}

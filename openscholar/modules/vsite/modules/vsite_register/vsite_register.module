<?php

/**
 * @file
 * Vsite Register module allows users to register new vsites.
 */

/**
 * Implements hook_menu().
 */
function vsite_register_menu() {
  $items['site/register'] = array(
    'title' => 'Create your web site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vsite_register_form'),
    'access callback' => 'vsite_vsite_exists_access',
    'file' => 'vsite_register.form.inc',
  );

  $items['admin/config/openscholar/vsite_register'] = array(
    'title' => 'Vsite Register',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vsite_register_admin_form'),
    'file' => 'vsite_register.admin.inc',
    'access arguments' => array('access administration pages'),
    //'type' => MENU_LOCAL_TASK,
  );

  // FOR DEVELOPMENT USE ONLY.
//  $items['vsite_register_welcome/%'] = array(
//    'title' => t('Welcome'),
//    'page callback' => 'vsite_register_message',
//    'page arguments' => array('form', 1),
//    'access arguments' => 'access content',
//  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function vsite_register_block_info() {
  return array(
    'get_your_site_block' => array('info' => t('Vsite Registration'), 'status' => 0),
  );
}

/**
 * Implements hook_block_view().
 */
function vsite_register_block_view($delta = '') {
  global $user;
  if (user_is_logged_in()) {
    $vsites = vsite_get_vsite_by_owner($user->uid);
  }
  $block = array();
  ctools_include('vsite', 'vsite');

  switch ($delta) {
    case 'get_your_site_block':
      if (vsite_vsite_exists_access()) {
        $content = l(t('Create your site'), 'site/register', array());
      }
      elseif (isset($vsites) && user_is_logged_in()) {
        if (count($vsites) > 1) {
          $content = l(t('Go to your sites'), 'user');
        }
        else {
          $content = l(t('Go to your site'), $vsites[0]->og->purl);
        }
      }
      break;
  }

  if (isset($content)) {
    $block['content'] = array(
      'content' => array('#markup' => $content),
    );
  }

  return $block;
}

/**
 * Implements hook_theme().
 *
 * Provides theming for form errors.
 */
function vsite_register_theme() {
  $theme = array();
  $theme['vsite_register_form_errors'] = array(
    'render element' => 'form',
    'function' => 'theme_vsite_register_form_errors',
    'variables' => array('name' => NULL, 'errors' => array()),
  );
  return $theme;
}

/**
 * Theme callback; returns a themed list of errors.
 *
 * @return string
 *   HTML container with a list of errors.
 */
function theme_vsite_register_form_errors($vars) {
  $list = theme('item_list', array('items' => $vars['errors'], 'type' => 'ul', 'attributes' => array('class' => array('error'))));
  return '<div id="' . $vars['name'] . '-errors">' . $list . '</div>';
}

/**
 * Generates the success message to display when vsite register form is submit.
 *
 * @return string
 *   The message shown to site owners after a successful web site registration.
 */
function vsite_register_message($form, $domain) {
  global $user, $base_url;

  $whose = user_access('create openscholar site on behalf of others') ? 'the' : 'your';

  $message = '<div id="success-message" class="status">';
  $message .= t('<p>Success! @whose new site has been created.</p>', array('@whose' => ucfirst($whose)));

  if (in_array('anonymous user', $user->roles)) {
    $message .= t('<p>Check your email account for further details on how to login in to start adding features and content.</p>');
  }

  $welcome_message = variable_get('vsite_register_welcome_message', '');
  if ($welcome_message) {
    $overlay = _vsite_register_get_overlay($welcome_message);
  }

  $overlay ='node/add/page';
  // This does not work.
  //$url_options = array('absolute' => TRUE, 'fragment' => "overlay=$overlay");
  //$href = url('<front>', $url_options);
  $href = "/$overlay";
  $message .= t('<p>The url of @whose site is @base_url/@domain <a href="@href">Go there now &raquo;</a></p>', array('@whose' => $whose, '@base_url' => $base_url, '@domain' => $domain, '@href' => $href));
  $message .= '</div>';

  // Gives other modules a chance to alter message
  module_invoke_all('vsite_register_message', $message, $form, $domain);
  return $message;
}

/**
 * Implements hook_fork_BASE_FORM_ID_alter() for vsite_register_form.
 *
 * Removes the notify element if the user is not logged in.
 */
function vsite_register_form_vsite_register_form_alter(&$form, &$form_state) {
  if (!user_is_logged_in()) {
    if (isset($form['notify'])) {
      $form['notify']['#access'] = FALSE;
    }
  }
}

/**
 * Gets the overlay path from a welcome message value like "Note title [id: 13]"
 */
function _vsite_register_get_overlay($welcome_message) {
  $preg_matches = array();

  $match = preg_match('/\[id: (\d+)\]/', $welcome_message, $preg_matches);
  if (!$match) {
    $match = preg_match('/^id: (\d+)/', $welcome_message, $preg_matches);
  }

  if ($match) {
    $nid = $preg_matches[1];
    return drupal_lookup_path('alias', "node/$nid");
  }

  return FALSE;
}

/**
 * Implements hook_admin_paths().
 */
function vsite_register_admin_paths() {
  // Only continues if we have a valid node saved as a welcome message.
  $welcome_message = variable_get('vsite_register_welcome_message', '');
  $overlay = _vsite_register_get_overlay($welcome_message);
  if (!$overlay) {
    return array();
  }

  // Adds the welcome message node alias to admin paths to generate overlay.
  $paths = array(
    $overlay => TRUE,
  );

  return $paths;
}
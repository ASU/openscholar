<?php

/**
 * @file
 * Vsite Register module allows users to register new vsites.
 */

/**
 * Implements hook_menu().
 */
function vsite_register_menu() {
  $items['site/register'] = array(
    'title' => 'Create your web site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vsite_register_form'),
    'access callback' => 'vsite_vsite_exists_access',
    'file' => 'vsite_register.form.inc',
  );

  $items['admin/config/openscholar/vsite_register'] = array(
    'title' => 'Vsite Register',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vsite_register_admin_form'),
    'file' => 'vsite_register.admin.inc',
    'access arguments' => array('access administration pages'),
    //'type' => MENU_LOCAL_TASK,
  );

  $items['site/register/welcome'] = array(
    'title callback' => '_vsite_register_welcome_title',
    'page callback' => '_vsite_register_welcome_page',
    'access callback' => TRUE, //'_vsite_welcome_message_access',
  );

  return $items;
}

/**
 * Gets the node title from the welcome message node.
 */
function _vsite_register_welcome_title() {
  $welcome_message = variable_get('vsite_register_welcome_message');
  $nid = _vsite_register_welcome_message_nid($welcome_message);
  if ($nid) {
    $node = node_load($nid);
    return $node->title;
  }
  return t('Welcome');
}

/**
 * Gets the node title from the welcome message node.
 */
function _vsite_register_welcome_page() {
  $welcome_message = variable_get('vsite_register_welcome_message');
  $nid = _vsite_register_welcome_message_nid($welcome_message);
  if ($nid) {
    $node = node_load($nid);
    $items = field_get_items('node', $node, 'body');
    $body = array_shift($items);
    return $body['value'] . '<div class="vsite-welcome-okay"><a class="overlay-close os-blue-button" href="#">' . t('Okay') . '</a></div>';
  }
  return '';
}

/**
 * Gets the node title from the welcome message node.
 */
function _vsite_register_welcome_access() {
  $welcome_message = variable_get('vsite_register_welcome_message');
  return (bool) $welcome_message;
}

/**
 * Implements hook_block_info().
 */
function vsite_register_block_info() {
  return array(
    'get_your_site_block' => array('info' => t('Vsite Registration'), 'status' => 0),
  );
}

/**
 * Implements hook_block_view().
 */
function vsite_register_block_view($delta = '') {
  global $user;
  if (user_is_logged_in()) {
    $vsites = vsite_get_vsite_by_owner($user->uid);
  }
  $block = array();
  ctools_include('vsite', 'vsite');

  switch ($delta) {
    case 'get_your_site_block':
      if (vsite_vsite_exists_access()) {
        $content = l(t('Create your site'), 'site/register', array());
      }
      elseif (isset($vsites) && user_is_logged_in()) {
        if (count($vsites) > 1) {
          $content = l(t('Go to your sites'), 'user');
        }
        else {
          $content = l(t('Go to your site'), $vsites[0]->og->purl);
        }
      }
      break;
  }

  if (isset($content)) {
    $block['content'] = array(
      'content' => array('#markup' => $content),
    );
  }

  return $block;
}

/**
 * Implements hook_theme().
 *
 * Provides theming for form errors.
 */
function vsite_register_theme() {
  $theme = array();
  $theme['vsite_register_form_errors'] = array(
    'render element' => 'form',
    'function' => 'theme_vsite_register_form_errors',
    'variables' => array('name' => NULL, 'errors' => array()),
  );
  return $theme;
}

/**
 * Theme callback; returns a themed list of errors.
 *
 * @return string
 *   HTML container with a list of errors.
 */
function theme_vsite_register_form_errors($vars) {
  $list = theme('item_list', array('items' => $vars['errors'], 'type' => 'ul', 'attributes' => array('class' => array('error'))));
  return '<div id="' . $vars['name'] . '-errors">' . $list . '</div>';
}

/**
 * Generates the success message to display when vsite register form is submit.
 *
 * @return string
 *   The message shown to site owners after a successful web site registration.
 */
function vsite_register_message($form, $domain) {
  global $user, $base_url;

  $whose = user_access('create openscholar site on behalf of others') ? 'the' : 'your';

  $message = '<div id="success-message" class="status">';
  $message .= t('<p>Success! @whose new site has been created.</p>', array('@whose' => ucfirst($whose)));

  if (in_array('anonymous user', $user->roles)) {
    $message .= t('<p>Check your email account for further details on how to login in to start adding features and content.</p>');
  }

  $overlay = (bool) variable_get('vsite_register_welcome_message', FALSE) ? 'overlay=site/register/welcome' : '';
  $href ="$base_url/$domain#$overlay";
  $message .= t('<p>The url of @whose site is @base_url/@domain <a class="os-green-button" href="@href">Go there now &raquo;</a></p>', array('@whose' => $whose, '@base_url' => $base_url, '@domain' => $domain, '@href' => $href));
  $message .= '</div>';

  // Gives other modules a chance to alter message
  module_invoke_all('vsite_register_message', $message, $form, $domain);
  return $message;
}

/**
 * Implements hook_fork_BASE_FORM_ID_alter() for vsite_register_form.
 *
 * Removes the notify element if the user is not logged in.
 */
function vsite_register_form_vsite_register_form_alter(&$form, &$form_state) {
  if (!user_is_logged_in()) {
    if (isset($form['notify'])) {
      $form['notify']['#access'] = FALSE;
    }
  }
}

/**
 * Gets the overlay path from a welcome message value like "Note title [id: 13]"
 */
function _vsite_register_get_overlay($welcome_message) {
  $nid = _vsite_register_welcome_message_nid($welcome_message);
  if (!$nid) {
    return FALSE;
  }

  return drupal_lookup_path('alias', "node/$nid");
}

/**
 * Gets the nid from the welcome message variable value.
 */
function _vsite_register_welcome_message_nid($welcome_message) {
  $preg_matches = array();

  $match = preg_match('/\[id: (\d+)\]/', $welcome_message, $preg_matches);
  if (!$match) {
    $match = preg_match('/^id: (\d+)/', $welcome_message, $preg_matches);
  }

  if ($match) {
    $nid = $preg_matches[1];
    return $nid;
  }

  return FALSE;
}

/**
 * Implements hook_admin_paths().
 */
function vsite_register_admin_paths() {
  // Adds the welcome message node alias to admin paths to generate overlay.
  $paths = array(
    'site/register/welcome' => TRUE,
  );

  return $paths;
}

/**
 * Adds an error message to the vsite register form.
 *
 * @see vsite_register_form_submit()
 */
function _vsite_register_form_error() {
  return ajax_command_html('#submit-suffix', 'The web site cannot be created. Please fix the errors and try again.');
}
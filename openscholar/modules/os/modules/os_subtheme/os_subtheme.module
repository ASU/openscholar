<?php
/**
 * @file
 * OS Subtheme module file.
 */

/**
 * Implements hook_menu().
 */
function os_subtheme_menu_alter(&$items) {
  $items['cp/appearance/add-subtheme'] = $items['admin/structure/subtheme/add'];
}

/**
 * Implements hook_admin_paths().
 */
function os_subtheme_admin_paths() {
  return array(
    'cp/appearance/add-subtheme' => TRUE,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os_subtheme_form_subtheme_manage_alter(&$form, $form_sate) {
  // Redirecting the user after uploading a theme, and relate the subtheme to os
  // theme.
  $form['#submit'][] = 'os_subtheme_submit';

  // Adding a submit handler.
  $form['#validate'][] = 'os_subtheme_validate';

  // Remove the image field.
  $form['field_image']['#access'] = FALSE;
}

/**
 * Redirect the user back to the appearance page and reference the subtheme to
 * os theme.
 */
function os_subtheme_submit($form, &$form_state) {
  $form_state['redirect'] = 'cp/appearance';
  $subtheme = $form_state['#entity'];

  $info = $subtheme->parseInfo();

  $subtheme->status = SUBTHEME_ENABLED_LOAD_MANUAL;

  $wrapper = entity_metadata_wrapper('subtheme', $subtheme);
  $wrapper->field_os_theme->set($info['base theme']);

  $subtheme->save();
}

/**
 * Validate handler - verify the user submitted a valid base theme.
 */
function os_subtheme_validate($form, $form_state) {
  $subtheme = $form_state['#entity'];
  $subtheme->fid = $form_state['values']['file'];
  $subtheme->extract();

  $info = $subtheme->parseInfo();

  ctools_include('themes', 'os');
  $themes = os_get_themes();

  if (!(isset($info['base theme']) && in_array($info['base theme'], array_keys($themes)))) {
    form_set_error('file][upload', t('The theme you uploaded is not valid.'));
  }
}

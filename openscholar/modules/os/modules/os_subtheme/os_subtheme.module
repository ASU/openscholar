<?php

/**
 * @file
 * OS Subtheme module file.
 */

/**
 * Implements hook_menu_alter().
 */
function os_subtheme_menu_alter(&$items) {
  $items['cp/appearance/sub-themes'] = $items['admin/subtheme/add'] + array(
    'title' => 'Add subtheme',
    'type' => MENU_LOCAL_ACTION,
  );

  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function os_subtheme_admin_paths() {
  return array(
    'cp/appearance/sub-themes' => TRUE,
    'cp/appearance/sub-themes/*' => TRUE,
  );
}

/**
 * Implements hook_init().
 */
function os_subtheme_init() {
  if (!module_exists('og_context')) {
    return;
  }

  if (!$og_context = og_context()) {
    return;
  }

  ctools_include('themes', 'os');
  $theme = os_theme_get();

  $query = new entityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'subtheme')
    ->propertyCondition('status', SUBTHEME_DISABLED, '!=')
    ->fieldCondition(OG_AUDIENCE_FIELD, 'target_id', $og_context['gid'])
    ->fieldCondition('field_os_theme', 'value', $theme)
    ->execute();

  if (empty($result['subtheme'])) {
    return;
  }

  $subthemes = subtheme_load_multiple(array_keys($result['subtheme']));

  foreach ($subthemes as $subtheme) {
    $subtheme->addAssets();
  }
}

/**
 * Implements hook_form_alter().
 */
function os_subtheme_form_alter(&$form, $form_state, $form_id) {
  if (!in_array($form_id, array('subtheme_manage_base', 'subtheme_manage_git'))) {
    return;
  }

  array_unshift($form['#submit'], 'os_subtheme_git_method_submit');
}

//https://github.com/RoySegall/os-subtheme.git

/**
 * Implements hook_url_outbound_alter().
 *
 * Change the links for creating a sub theme so the user could be in the context
 * of the group.
 */
function os_subtheme_url_outbound_alter($path) {
  if (!$og_context = og_context()) {
    return;
  }
}

/**
 * Create the base theme.
 *
 * TODO: bind the theme to the group using another submit handler.
 */
function os_subtheme_git_method_submit($form, &$form_state) {
  if (empty($form_state['subtheme'])) {
    return;
  }

  if (!$og_context = og_context()) {
    return;
  }

  $subtheme = $form_state['subtheme'];

  $info = $subtheme->parseInfo();

  // Set the title and the status.
  $form_state['values']['title'] = vsite_get_vsite()->og->title . "'s " . filter_xss($info['base theme']) . " base theme.";
  $form_state['values']['status'] = SUBTHEME_ENABLED_LOAD_MANUAL;
  $form_state['redirect'] = 'cp/appearance';

  $wrapper = entity_metadata_wrapper('subtheme', $subtheme);
  $wrapper->field_os_theme->set($info['base theme']);
  $wrapper->{OG_AUDIENCE_FIELD}->set(array($og_context['gid']));

  $subtheme->save();
}

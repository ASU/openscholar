<?php
/**
 * @file
 * Main file for the OS importer module.
 */
include_once 'os_importer.features.inc';

/**
 * Implements hook_os_app_info().
 */
function os_importer_os_app_info() {
  $apps = array();

  $apps['os_importer'] = array(
    'path' => 'importer',

    // TODO: Move the each app individually.
    // Define which node types this module can import.
    'imported_apps' => array(
      'blog',
    ),

    // TODO: Move the each app individually.
    // Define which node types can imported via a iCal file.
    'ical_nodes' => array('events'),
  );

  return $apps;
}

/**
 * Implements hook_vsite_og_node_type_info().
 */
function hook_vsite_og_node_type_info() {
  return array(
    'blog_import' => 'group content',
  );
}

/**
 * Implements hook_admin_paths().
 */
function os_importer_admin_paths() {
  return array(
    'os-importer/*' => TRUE,
  );
}

/**
 * Implements hook_os_add_new_links_alter().
 */
function os_importer_os_add_new_links_alter(&$links) {
  $menu = menu_get_item();
  $app_info = os_app_info('os_importer');

  // Get the current app.
  $current_app = array_search($menu['path'], os_get_app_path());

  if (!in_array($current_app, $app_info['imported_apps'])) {
    return;
  }

  $links['os-importer-import'] = array(
    'title' => t('Import from CSV/RSS'),
    'href' => 'os-importer/' . $current_app,
  );
}

/**
 * Implements hook_menu().
 */
function os_importer_menu() {
  $items = array();

  $items['os-importer/%'] = array(
    'title' => 'Importing from a CSV',
    'access arguments' => array('import via os importer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os_importer_import', 1),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function os_importer_permission() {
  return array(
    'import via os importer' => array(
      'title' => t('Import content from CSV or RSS'),
      'description' => t('Allow to the user permission to import from a CSV or RSS.'),
    ),
  );
}

/**
 * Form callback - Adding an importer.
 */
function os_importer_import($form, &$form_state, $type) {
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Name of the importer'),
    '#description' => t('A title/name to identify the importer e.g. "New your times feed"'),
    '#required' => TRUE,
  );

  $form['description'] = array(
    '#type' => 'textfield',
    '#title' => t('Description'),
  );

  $form['format'] = array(
    '#type' => 'radios',
    '#title' => t('Format'),
    '#options' => array(
      'rss' => t('RSS'),
      'csv' => t('CSV'),
      'ical' => t('iCal'),
    ),
    '#default_value' => 'rss',
  );


  // TODO: Validate that when the user selected a format he filled the filled.
  $form['import_source'] = array(
    // RSS need url.
    'url' => array(
      '#type' => 'textfield',
      '#title' => t('URL'),

      '#description' => t('The url of your data source.'),
      '#states' => array(
        'visible' => array(
          ':input[name="format"]' => array('value' => 'rss'),
        ),
      ),
    ),

    // iCal / CSV need upload file from user computer.
    'file' => array(
      '#title' => t('File'),
      '#type' => 'managed_file',
      '#description' => t('Select a file form your computer to import.'),
      '#upload_location' => 'public://',
      '#upload_validators' => array(
        'file_validate_extensions' => array('csv', 'ical'),
      ),
      '#states' => array(
        'invisible' => array(
          ':input[name="format"]' => array('value' => 'rss'),
        ),
      ),
      '#weight' => -99,
    ),
  );

  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Submit'),
    ),
  );

  return $form;
}

/**
 * Form submit.
 */
function os_importer_import_submit($form, &$form_state) {
  global $language, $user;
  $values = $form_state['values'];

  $node = new stdClass;
  $node->type = 'blog_import';
  $node->uid = $user->uid;
  $node->title = $values['title'];
  $node->language = $language->language;
  $node->body[LANGUAGE_NONE][] = array('value' => $values['description']);

  if ($values['format'] == 'rss') {
    $node->field_rss_url['und'][0]['value'] = $values['url'];
  }
  else {
    $node->field_import_file[LANGUAGE_NONE][] = array(
      'fid' => $values['file'],
      'display' => 1,
      'description' => '',
    );
  }

  node_save($node);

  $params = array(
    '@url' => url('node/'. $node->nid),
    '@name' => $values['title'],
  );
  drupal_set_message(t('The importer @name has created successfully. You can <a href="@url">view</a> him.', $params));

  // TODO: Change to the path of the app content.
  $form_state['redirect'] = 'blog';
}

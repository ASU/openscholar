<?php
// $Id$

/**
 * @file
 * Code for the os_publications feature.
 */

include_once 'os_publications.features.inc';

/**
 * Implements hook_os_app_info().
 */
function os_publications_os_app_info() {
  $apps = array();

  $apps['os_publications'] = array(
    'path' => 'publications',
    'importers' => array(
      'biblio' => array(
        'csv' => 'os_publication',
      ),
    ),
  );

  return $apps;
}

/**
 * Implements hook_os_add_new_links_alter().
 */
function os_publications_os_add_new_links_alter(&$links) {
  if (!in_array($_GET['q'], array('publications'))) {
    return;
  }

  $links['add_publication'] = array(
    'title' => t('publication'),
    'href' => 'biblio/add',
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function os_publications_ctools_plugin_directory($module, $plugin) {
  if ($module == 'biblio') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_theme().
 */
function os_publications_theme() {
  $theme['os_publications_citeproc'] = array(
    'variables' => array(
      'id' => NULL,
      'image' => NULL,
      'citation' => NULL,
      'abstract' => NULL,
      'pdf_list' => NULL,
    ),
    'path' => drupal_get_path('module', 'os_publications') . '/templates',
    'template' => 'os-publications-citeproc',
  );

  return $theme;
}

/**
 * Implements hook_migrate_api_alter().
 *
 * Replace BiblioMigrateEntries with OS own implementation that maintains the
 * group audience field.
 *
 */
function os_publications_migrate_api_alter(&$info) {
  if (!db_table_exists('_biblio_1x')) {
    return;
  }

  $info['biblio']['migrations']['BiblioMigrateEntries'] = array('class_name' => 'OsBiblioMigrateEntries', 'group_name' => 'biblio_3');
}



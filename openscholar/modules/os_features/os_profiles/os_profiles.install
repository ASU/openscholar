<?php

/**
 * Revert field.  Change trim length on person nodes.
 */
function os_profiles_update_7000() {
  features_revert(array('os_profiles' => array('field')));
  return t('Reverted os_profiles fields.');
}

/**
 * Enable the field_redirection module
 */
function os_profiles_update_7001() {
if (module_exists('field_redirection')) {
    module_enable(array('field_redirection'));
  }
}

/**
 * Add description to image fields
 */
function os_profiles_update_7002() {
  features_revert(array('os_profiles' => array('field_instance')));
}

/**
 * Remove the "file_upload" field but keep the existing files.
 */
function os_profiles_update_7003() {
  $instance = field_info_instance('node', 'field_upload', 'person');
  
  // Mark the field instance for deletion.
  // We avoid using field_delete_instance() as it deletes the instance data
  // which is the file in this case.
  db_update('field_config_instance')
    ->fields(array('deleted' => 1))
    ->condition('field_name', $instance['field_name'])
    ->condition('entity_type', $instance['entity_type'])
    ->condition('bundle', $instance['bundle'])
    ->execute();

  // Clear the cache.
  field_cache_clear();
}

/**
 * Adding the field prefix to the os profile bundle.
 */
function os_profiles_update_7004() {
  features_revert(array('os_profiles' => array('field_base', 'field_instance', 'feeds_tamper')));
}

/**
 * Adding child site reference.
 */
function os_profiles_update_7005() {
  features_revert(array('os_profiles' => array('field_base', 'field_instance')));
}

/**
 * Add title field to the people view.
 */
function os_profiles_update_7006() {
  features_revert(array('os_profiles' => array('views_view')));
}

/**
 * Updating description to profile photo
 */
function os_profiles_update_7007() {
 features_revert(array('os_profiles' => array('field_instance')));
}

/**
 * Updating website title max character limit from 128 to 75
 */
function os_profiles_update_7008() {
 features_revert(array('os_profiles' => array('field_instance')));
}

/**
 * Adds new filter block in existing vsites overridden context set for profile pages.
 */
function os_profiles_update_7009() {
  // Array definition for new filter context block.
  $profiles_filter_context = array(
    'views-os_profiles-profile_alphabet_group_block' => array(
      'module' => 'views',
      'delta' => 'os_profiles-profile_alphabet_group_block',
      'region' => 'sidebar_second',
      'weight' => -8,
    ),
  );

  // Fetching existing vsites context override entry for profiles reaction block 
  $query = db_select('spaces_overrides','so')
    ->fields('so', array('id', 'value'))
    ->condition('so.object_type','context','=')
    ->condition('so.object_id','profiles_profiles:reaction:block','=');
  $result = $query->execute()->fetchAll();

  // Iterating the context override entries, merging new array items and saving it.
  foreach ($result as $override) {
    $context = unserialize($override->value);
    $context['blocks'] += $profiles_filter_context;
    $override = array(
      'id' => $override->id,
      'object_type' => 'context',
      'object_id' => 'profiles_profiles:reaction:block',
    );
    $keys = array_keys($override);
    $override['value'] = $context;
    drupal_write_record('spaces_overrides', $override, $keys);
  }
}
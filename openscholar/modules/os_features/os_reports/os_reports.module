<?php
// $Id$

/**
 * @file
 * 
 * OS Reports module file
 */


/**
 * Implement hook_permission().
 */
function os_reports_permission() {
  return array(
    'access reports' => array(
      'title' => t('View OS Reports'),
      'description' => t('Access the OS reports.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implement hook_menu().
 */
function os_reports_menu() {
  $items = array();
  $items['admin/reports/site'] = array(
    'title' => 'Site Report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os_reports_site_form'),
    'access callback' => TRUE,
//     'access callback' => 'user_access',
//     'access arguments' => array('access reports'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/reports/user'] = array(
    'title' => 'User Report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os_reports_user_form'),
//     'access callback' => 'user_access',
//     'access arguments' => array('access reports'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * OS Site report form
 */
function os_reports_site_form($form, &$form_state) {
  os_common_angular_app('ReportModule');
  drupal_add_library('os_common', 'EntityService');
  drupal_add_library('os_common', 'JSPager');
  drupal_add_library('os_common', 'auth');
  drupal_add_js(drupal_get_path('module', 'os_reports').'/js/ReportModule.js');
  drupal_add_css(drupal_get_path('module', 'os_reports') . '/os_reports.css');

  $form['#prefix'] = '<div ng-controller="SiteReportQuery" ng-app="ReportModule">';
  $form['#suffix'] = '</div>';
  $form['keyword_set'] = array(
    '#type' => 'fieldset',
    '#title' => 'Keyword search'
  );
  $form['keyword_set']['keyword'] = array(
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
    '#type' => 'textfield',
    '#title' => 'Keyword',
    '#attributes' => array(
      'ng-model' => 'query.keyword',
    ),
  );
  $form['keyword_set']['kfields'] = array(
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
    '#type' => 'checkboxes',
    '#title' => 'Search in fields',
  );
  $form['keyword_set']['kfields']['mail'] = array(
    '#value' => 'mail',
    '#title' => 'email',
    '#type' => 'checkbox',
    '#attributes' => array(
      'ng-model' => 'query.kfields.mail',
    ),
  );
  $form['keyword_set']['kfields']['name'] = array(
    '#value' => 'name',
    '#title' => 'username',
    '#type' => 'checkbox',
    '#attributes' => array(
      'ng-model' => 'query.kfields.name',
    ),
  );
  $form['keyword_set']['kfields']['title'] = array(
    '#value' => 'title',
    '#title' => 'site name',
    '#type' => 'checkbox',
    '#attributes' => array(
      'ng-model' => 'query.kfields.title',
    ),
  );
  $form['columns'] = array(
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
    '#type' => 'checkboxes',
    '#title' => 'Optional columns',
  );
  $form['columns']['owner_email'] = array(
    '#value' => 'owner_email',
    '#title' => 'Owner email',
    '#type' => 'checkbox',
    '#attributes' => array(
      'ng-model' => 'query.kfields.owner_email',
    ),
  );
  $form['columns']['privacy'] = array(
    '#value' => 'privacy',
    '#title' => 'Privacy level',
    '#type' => 'checkbox',
    '#attributes' => array(
      'ng-model' => 'query.kfields.privacy',
    ),
  );
  $form['lastupdate'] = array(
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
    '#type' => 'textfield',
    '#title' => 'Content last updated before',
    '#size' => 10,
    '#description' => 'format: YYYYMMDD',
    '#attributes' => array(
      'ng-model' => 'query.lastupdate',
    ),
  );
  $form['buttons'] = array(
    '#prefix' => '<div class="buttons">',
    '#suffix' => '</div>',
  );
  $form['buttons']['submit'] = array(
    '#markup' => '<a class="button" ng-click="update(query)">Submit</a>',
  );
  $form['buttons']['download'] = array(
    '#type' => 'submit',
    '#value' => 'Download CSV of Full Report',
  );
  $form['results'] = array(
    '#markup' => '<table><thead><tr><th ng-repeat="header in headers">{{ header }}</th></tr></thead><tbody><tr ng-repeat="row in rows"><td ng-repeat="header in headers">{{ row[header] }}</td></tr></tbody></table>',
  );

  return $form;
}

function os_reports_site_form_submit($form, &$form_state) {
  global $base_url;
  
  //make restful call to get data
  $handler = restful_get_restful_handler('report_sites');
  $params = $form_state['values'];

  // clean up submitted form values to send as parameters for rest call
  foreach ($params as $key => $value) {
    if (is_array($value)) {
      foreach ($value as $index => $selected) {
        if ($selected === 0|| is_int($index)) {
          unset($value[$index]);
        }
      }
      $params[$key] = array_keys($value);
    }
    elseif ($value == "") {
      unset($params[$key]);
    }
  }
  $params['range'] = 0;
  $results = $handler->get('attributes', $params);

  if ($results) {
    $filename = str_replace("http://", "", $base_url) . "-site-report.csv";

    drupal_add_http_header("Cache-Control", "public");
    drupal_add_http_header("Content-Type", "application/octet-stream");
    drupal_add_http_header("Cache-Control", "o-store, no-cache, must-revalidate");
    drupal_add_http_header("Cache-Control", "post-check=0, pre-check=0");
    drupal_add_http_header("Content-Disposition", "attachment; filename=\"$filename\";" );
    drupal_add_http_header("Content-Transfer-Encoding", "binary");

    $headers = array_keys($results[0]);
    print implode($headers, ", ") . "\n";
    foreach ($results as $row) {
      print implode($row, ", ") . "\n";
    }
    drupal_exit();
  }
  else {
    drupal_set_message('No results in report.', 'warning');
  }
}
